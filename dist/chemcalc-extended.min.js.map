{"version":3,"sources":["webpack:///chemcalc-extended/webpack/universalModuleDefinition","webpack:///chemcalc-extended/chemcalc-extended.min.js","webpack:///chemcalc-extended/webpack/bootstrap 3375fc15ce8a72ecbd5b","webpack:///chemcalc-extended/./src/index.js","webpack:///chemcalc-extended/./~/chemcalc/dist/chemcalc.js","webpack:///chemcalc-extended/(webpack)/~/node-libs-browser/~/timers-browserify/main.js","webpack:///chemcalc-extended/(webpack)/~/node-libs-browser/~/process/browser.js","webpack:///chemcalc-extended/./~/peptide/src/index.js","webpack:///chemcalc-extended/./~/peptide/src/amino_acid.js","webpack:///chemcalc-extended/./~/peptide/src/isoElectricPoint.js","webpack:///chemcalc-extended/./src/MfProcessor.js","webpack:///chemcalc-extended/./~/peaks-similarity/src/index.js","webpack:///chemcalc-extended/./src/massPeakPicking.js","webpack:///chemcalc-extended/./~/ml-stat/index.js","webpack:///chemcalc-extended/./~/ml-stat/array.js","webpack:///chemcalc-extended/./~/ml-stat/matrix.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","CC","PEP","MfProcessor","massPeakPicking","CE","analyseMF","getInfo","mfFromMonoisotopicMass","mfFromMonoisotopicMassSimilarity","mass","experimental","options","mfResults","processor","results","i","length","result","process","mf","value","extractExperimental","similarity","getExtract1","matchMFs","mfsArray","addExperimentalExtract","maxResults","minSimilarity","isNaN","mfs","combineMFs","push","parts","bestResults","bestOf","newResults","sort","a","b","slice","j","Math","abs","msem","charge","getEutrophicationPotential","chemcalc","atoms","ea","mw","nC","nO","nN","nP","nH","atom","element","number","log","vRef","mwRef","thOD","v","ep","type","convertAASequence","sequence","chargePeptide","generatePeptideFragments","keys","appendResult","currents","comments","key","indexOf","replace","join","Array","isArray","sizes","position","evolution","__WEBPACK_AMD_DEFINE_RESULT__","getExports","$wnd","noop","Qg","Lg","db","dd","hc","qc","qp","Xp","cq","eq","Hr","Hs","il","yc","tc","sb","mb","Xo","Oo","Xh","Pc","Yc","hd","ud","fi","Ri","fj","qn","Nn","Sn","Wn","_n","In","Bo","Go","Lo","bu","Oc","pu","nb","Oh","Kb","Od","nd","zd","Uc","_c","gd","Gd","bn","up","cn","bh","h","dh","l","eh","$h","dj","Bj","xk","vp","wp","Oq","Cq","mq","Lq","dr","Sq","ai","Pp","Hp","Fs","tr","Xb","Tb","Ub","vb","ub","cd","bd","ec","dc","pp","op","ku","ju","zp","Gu","Mu","td","$r","g","$","ad","tb","Zh","_h","bi","cj","Cj","rb","Dj","nk","uk","yk","mk","sk","tk","Fr","wt","_r","It","Xi","lr","sj","fe","Dd","Fd","Id","Rd","Di","Jj","wj","xj","Bp","Qh","tM","qh","ph","rh","oh","mc","lc","kc","o","lq","lk","pk","qk","ui","ti","k","ur","eb","f","Mh","Kh","_p","$p","bq","hk","ek","gk","Qb","Eb","Hb","rj","zr","Gn","Us","e","Vs","d","Fn","G","Ch","Cd","Xc","Wc","Vc","vo","uo","fr","vj","tj","ceil","Aj","sqrt","ce","be","so","X","to","Xm","Rq","Qo","Cp","Wm","Or","Zi","Gm","lo","eo","yq","vq","tp","_gwt_modCount","dp","splice","ej","gj","$d","uj","floor","zj","round","U","ee","Lj","Pb","clearTimeout","Cl","hl","Dl","mo","Sr","Xr","Sd","$e","Ru","Rt","Dc","Ic","cr","ok","Zd","kh","Vg","Tg","Ug","Qq","jb","gi","yj","pow","fh","Vu","Wu","Nb","$H","Fb","Vj","ef","Ij","charCodeAt","Wj","substr","Ju","rd","sh","Rg","yp","Jg","Ig","Og","Jq","Vp","Rk","Lk","Fc","Br","Cr","Nr","Jr","Ur","Rh","setTimeout","Nu","Sh","Vo","Pd","Rj","Sj","Mj","lastIndexOf","an","Z","Qi","_d","pi","de","nj","toString","pc","parseInt","Hi","Rn","vn","T","$n","Ko","co","Ar","Hn","or","Ac","Bc","Th","Zt","gt","ht","Ps","Os","Ib","apply","$j","Zj","t","Nj","String","fromCharCode","ck","Wi","isFinite","ae","Ai","xi","yi","Li","Ro","Ec","Ao","Gc","Vq","Fu","Mc","Bi","Pk","Sk","qj","pj","We","Error","stackTraceLimit","ut","vt","Td","Ud","Po","Hc","_m","fn","Dp","Rm","gs","cb","hb","sp","un","O","Zr","mr","ei","ci","Mg","dn","en","lh","vh","Yt","Xt","us","ts","ys","nr","pr","Lc","Nc","pd","sd","ic","Ap","Ep","Object","getOwnPropertyNames","iq","cZ","me","gn","hn","Fp","jh","wh","Eh","xp","fb","Pq","R","S","Ml","Bh","ql","rk","fu","du","qd","Cc","Jc","kk","fk","di","Fo","W","zi","Ln","Ct","Du","zl","gb","Oj","RegExp","test","tu","qu","vu","Ht","Gt","Ft","ge","max","min","Ou","ni","match","vk","Ob","Vh","Uh","Mn","wn","Vn","rr","sr","dk","Uj","Yj","Bb","Ab","u","Yd","cM","jk","hC","oi","sm","mm","lm","rm","rl","vm","Pj","Xj","Rr","Vd","ig","Kr","Lr","Mr","Fi","C","prototype","_b","Wh","Ej","Mp","$f","kl","ob","n","ro","Lb","Jb","Mb","arguments","eQ","r","undefined","tl","Nl","Ql","vl","nl","Uo","hm","ke","im","cm","dm","Wd","ac","$b","Zb","Sg","Su","Tu","To","Gr","dg","Qt","xb","Lu","Hm","Fm","kf","Em","ym","xm","zm","Cm","Am","Bm","Dm","gl","nm","zb","Date","now","getTime","Yo","gc","Jh","Fh","Gh","Uu","Hh","nh","Ih","Qk","Tk","Ll","yl","Hu","su","M","er","fc","jc","Cu","Si","So","kq","Bd","Ad","Hd","hq","al","Fk","Mk","Kl","Xs","Il","qi","toLowerCase","ri","toUpperCase","_","Iu","Lh","od","hasOwnProperty","lj","vi","es","ru","wu","np","Pl","lp","D","N","ir","ks","fs","s","Ot","Ds","Pt","Es","Ut","Vt","Jt","Wt","ol","Km","F","ct","Pi","Hg","Gg","Ku","Fg","__gwt$exception","Ph","window","jq","mu","iu","mt","lt","nt","rt","uh","br","oc","exec","Xu","Ok","Hk","Jk","toPrecision","boolean","string","object","Ed","function","kr","_g","kj","Qd","__elementTypeId$","__elementTypeCategory$","Xg","yh","$g","Zg","Im","gp","cv","mh","lb","tS","ih","Ah","uu","zu","ml","xl","bl","dl","js","si","_t","Tt","ss","nv","ws","Ws","pl","mi","Zk","Gk","Number","NaN","ik","Jm","oj","ul","om","qm","pm","ip","Y","hp","Yb","xs","Qm","K","As","Nk","Kk","Wo","st","hs","Js","Gl","fl","Lp","Ls","Kj","Ng","Wg","Ol","gr","hr","nc","mp","Mt","mv","vs","hh","Fe","Gb","Tj","li","Zu","Ki","Kt","lu","jl","em","xh","th","fv","Bl","$s","Rb","bk","_u","rs","bc","ak","dt","jr","Q","Pm","L","J","ms","ot","pt","yu","zs","qt","Lm","Wk","$k","Al","au","gh","Vb","cc","he","Sb","$t","Nh","$moduleName","$moduleBase","Eg","fm","um","cl","wm","V","jp","wk","kp","gu","eu","je","av","exp","xu","tt","is","Xd","concat","qr","At","create","aq","kt","Oi","Ni","parseFloat","Rl","Cs","zh","hu","St","wb","name","message","Gp","sl","wl","Ks","Kg","constructor","valueOf","Wb","Cb","Db","Bu","dv","B","w","A","split","bt","ft","_j","Qs","Qj","Bt","Vl","ds","tm","gm","bm","ah","Pg","substring","execScript","shift","Dk","Ek","Vk","Ns","ls","el","jf","Ms","et","jm","km","bv","Yu","_s","at","Ul","Tl","Sl","Dh","Au","Lt","$u","ll","Zl","Yl","Ik","ev","$l","am","_l","zt","Yg","navigator","userAgent","$doc","documentMode","index","lastIndex","gv","Wl","Xl","Ak","Nt","Bs","q","jt","uc","yt","zk","hf","ie","Bk","Ck","H","Pe","I","P","ab","bb","Dg","document","$gwt","__gwtModuleFunction","__moduleStartupDone","$sendStats","Pu",3,9,"Qu",6,28,"hv",35,"iv",37,27,"jv",51,"kv",50,"lv",18,29,26,"gC",116,2,38,"fnStack","callee","caller","af","__gwt$backingJsError","stack",66,8,54,11,52,44,7,19,20,31,14,5,24,53,"ib","kb",40,32,"pg",39,4,"nu","aa","gwtOnLoad","__errFn","__moduleName","__moduleBase","__softPermutationId","__computePropValue","permProps","toReturn","version","fakeWindow","timers","setInterval","clearInterval","self","bind","setImmediate","clearImmediate","Timeout","clearFn","_id","_clearFn","nextTick","Function","immediateIds","nextImmediateId","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","args","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","len","run","Item","fun","array","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","aa1To3","code","aa1","aa3","converAA1To3","newmf","charAt","addNTerm","nTerm","addCTerm","cTerm","x","y","z","IEP","console","calculateIEP","aas","calculateIEPChart","calculateChart","mfparts","search","tmpmf","sc","pKaC","pKaN","pKa","calculateCharge","aaSequence","pH","combined","combine","calculateForPh","currentCharge","first","last","current","previous","yAbs","total","acid","aaObject","basic","JSON","parse","stringify","isotopomers","zone","low","high","decimalsMass","factorMass","decimalsPPM","factorPPM","widthFunction","Similarity","widthTop","widthBottom","common","setPeaks1","from","ccResult","target","width","setTrapezoid","setFromTo","setPeaks2","arrayXYXY","similarityResult","getSimilarity","info","fromTo","extract","extract2","extractInfo","extractInfo2","diff","color","extract1","extractInfoExperimental","extractInfo1","ppm","getCommonArray","array1","array2","newArray","pos2","getIntersection","segment1","segment2","s1_x","s1_y","s2_x","s2_y","p0_x","p0_y","p1_x","p1_y","p2_x","p2_y","p3_x","p3_y","normalize","sum","MAX_VALUE","MIN_VALUE","commonExtractAndNormalize","data","common1","common2","info1","info2","COMMON_SECOND","COMMON_FIRST","data1","data2","extractAndNormalize","calculateOverlapFromDiff","diffs","sumPos","COMMON_NO","COMMON_BOTH","setOptions","newOptions","commonFactor","anArray","checkArray","extracts","array1Extract","array1ExtractInfo","array2Extract","array2ExtractInfo","getExtract2","getExtractInfo1","getExtractInfo2","newWidthBottom","newWidthTop","widthSlope","newFrom","newTo","getOverlap","x1","y1","x2","y2","maxValue","getOverlapTrapezoid","factor","small","big","targets","segment","intersection","calculateDiff","newSecond","newFirst","pos1","previous2","trapezoid","overlap","points","newPeaks1","newPeaks2","noiseLevel","Stat","median","filter","gsd","minMaxRatio","size","dY","ddY","dx","maxDdy","minddY","intervals","stackInt","pop","signals","frequency","possible","inter","linewidth","height","matrix","compareNumbers","values","Infinity","minMax","arithmeticMean","mean","geometricMean","mul","logMean","lnsum","grandMean","means","samples","truncatedMean","percent","alreadySorted","harmonicMean","RangeError","contraHarmonicMean","r1","r2","half","variance","unbiased","theMean","theVariance","standardDeviation","standardError","quartiles","quart","q1","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","kurtosis","s4","m4","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","center","inPlace","standardize","standardDev","cumulativeSum","l1","l2","dimension","rows","cols","sum1","sum2","medians","modes","skew","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","correlation","scores","zScores","cor","jj","row","resultRow","sourceRow","ii","weightSum","arrayStat","weightedCovariance","s1","weightedScatter"],"mappings":"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","file":"chemcalc-extended.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chemcalcExtended\"] = factory();\n\telse\n\t\troot[\"chemcalcExtended\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chemcalcExtended\"] = factory();\n\telse\n\t\troot[\"chemcalcExtended\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\tvar CC = __webpack_require__(1);\n\tvar PEP = __webpack_require__(4);\n\tvar MfProcessor = exports.MfProcessor = __webpack_require__(7);\n\t\n\tvar massPeakPicking = __webpack_require__(9);\n\t\n\tvar CE = exports;\n\t\n\tCE.analyseMF = CC.analyseMF;\n\tCE.getInfo = CC.getInfo;\n\tCE.mfFromMonoisotopicMass = CC.mfFromMonoisotopicMass;\n\t\n\t/*\n\t mfFromMonoisotopicMassSimilarity\n\t We will extend mfFromMonoisotopicMass in order to include in the options:\n\t * experimental : an array of [[x1,y1],[x2,y2],...] or [[x1,x2,x3,...][y1,y2,y3,...]]\n\t * widthTop : top width of the trapezoid\n\t * widthBottom : bottom width of the trapezoid\n\t * from : mass \"from\" which calculate the similarity\n\t * to : mass \"to\" which calculate the similarity\n\t * As an alternative the from / to parameters can be calculated based target mass\n\t *\n\t * decimalsPPM : number of decimals for PPM\n\t * decimalsMass : number odecimals for the mass\n\t */\n\tCE.mfFromMonoisotopicMassSimilarity = function (mass, experimental, options) {\n\t    var mfResults = CC.mfFromMonoisotopicMass(mass, options);\n\t\n\t    var processor = new MfProcessor(experimental, options);\n\t\n\t\n\t    var results = mfResults.results;\n\t    for (var i = 0; i < results.length; i++) {\n\t        var result = results[i];\n\t        processor.process(result.mf.value, result);\n\t    }\n\t    mfResults.extractExperimental = processor.similarity.getExtract1();\n\t    return mfResults;\n\t};\n\t\n\t\n\tCE.matchMFs = function (mfsArray, experimental, options) {\n\t    options = options || {};\n\t    options.addExperimentalExtract = true;\n\t    options.maxResults = options.maxResults || 500;\n\t    options.minSimilarity = (isNaN(options.minSimilarity)) ? 50 : options.minSimilarity;\n\t\n\t    var processor = new MfProcessor(experimental, options);\n\t    var mfs = CE.combineMFs(mfsArray);\n\t\n\t    var results = [];\n\t    for (var i = 0; i < mfs.length; i++) {\n\t        var result = processor.process(mfs[i].mf);\n\t        results.push(result);\n\t        result.parts = mfs[i];\n\t        if (results.length > options.maxResults * 2) {\n\t            results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n\t        }\n\t    }\n\t    results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n\t    return {options: options, results: results};\n\t};\n\t\n\t/* we have 2 criteria to find the best results\n\t 1. best match per zone based on the bestOf parameter\n\t 2. maxResults : maximal number of results\n\t */\n\tCE.bestResults = function (results, bestOf, maxResults, minSimilarity) {\n\t    var newResults = [];\n\t\n\t    // in order to find the bestOf we will sort by similarity and take all of them for which there is nothing in a range\n\t    // of the bestOf range\n\t\n\t    results.sort(function (a, b) {\n\t        return b.similarity - a.similarity;\n\t    });\n\t\n\t    if (minSimilarity) {\n\t        for (var i = 0; i < results.length; i++) {\n\t            if (results[i].similarity < minSimilarity) {\n\t                results = results.slice(0, i);\n\t                break;\n\t            }\n\t        }\n\t    }\n\t\n\t    if (bestOf) {\n\t        for (var i = 0; i < results.length && newResults.length < maxResults; i++) {\n\t            for (var j = 0; j < newResults.length; j++) {\n\t                if (Math.abs(newResults[j].msem - results[i].msem) < (bestOf / (results[i].charge || 1))) {\n\t                    break;\n\t                }\n\t            }\n\t            if (j == newResults.length) {\n\t                newResults.push(results[i]);\n\t            }\n\t        }\n\t    } else {\n\t        newResults = results.slice(0, maxResults);\n\t    }\n\t\n\t    return newResults;\n\t};\n\t\n\t\n\tCE.getEutrophicationPotential = function (mf) {\n\t    var chemcalc = CC.analyseMF(mf);\n\t    var atoms = chemcalc.parts[0].ea;\n\t    var mw = chemcalc.mw;\n\t    var nC = 0, nO = 0, nN = 0, nP = 0, nH = 0;\n\t    for (var i = 0; i < atoms.length; i++) {\n\t        var atom = atoms[i];\n\t        switch (atom.element) {\n\t            case 'C':\n\t                nC = atom.number;\n\t                break;\n\t            case 'N':\n\t                nN = atom.number;\n\t                break;\n\t            case 'O':\n\t                nO = atom.number;\n\t                break;\n\t            case 'H':\n\t                nH = atom.number;\n\t                break;\n\t            case 'P':\n\t                nP = atom.number;\n\t                break;\n\t            default:\n\t                return {log: 'EP can not be calculated because the MF contains the element: ' + atom.element};\n\t        }\n\t    }\n\t\n\t    var vRef = 1;\n\t    var mwRef = 94.97;\n\t\n\t    var thOD = nC + (nH - 3 * nN) / 4 - nO / 2;\n\t    var v = nP + nN / 16 + thOD / 138;\n\t    var ep = (v / mw) / (vRef / mwRef);\n\t\n\t    return {\n\t        v: v,\n\t        thOD: thOD,\n\t        ep: ep,\n\t        mf: {type: 'mf', value: mf},\n\t        mw: chemcalc.mw,\n\t        log: 'Successful calculation'\n\t    };\n\t};\n\t\n\t\n\tCE.convertAASequence = function (sequence) {\n\t    return PEP.convertAASequence(sequence);\n\t}\n\t\n\tCE.chargePeptide = function (sequence) {\n\t    return PEP.chargePeptide(sequence);\n\t}\n\t\n\t\n\tCE.generatePeptideFragments = function (sequence, options) {\n\t    return PEP.generatePeptideFragments(sequence, options);\n\t}\n\t\n\tCE.combineMFs = function (keys) {\n\t    function appendResult(results, currents, keys) {\n\t        // this script is designed to combine molecular formula\n\t        // that may contain comments after a \"$\" sign\n\t        // therefore we should put all the comments at the ned\n\t        var result = {mf: ''};\n\t        var comments = [];\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i][currents[i]];\n\t            if (key) {\n\t                result['part' + (i + 1)] = key;\n\t                if (key.indexOf('$') > -1) {\n\t                    comments.push(key.replace(/^[^$]*\\$/, ''));\n\t                    key = key.replace(/\\$.*/, '');\n\t                }\n\t                result.mf += key;\n\t            }\n\t        }\n\t\n\t        if (comments.length > 0) result.mf += '$' + comments.join(' ');\n\t\n\t        results.push(result);\n\t    }\n\t\n\t    if (!Array.isArray(keys)) return [];\n\t    if (!Array.isArray(keys[0])) keys = [keys];\n\t    var results = [];\n\t    var sizes = new Array(keys.length);\n\t    var currents = new Array(keys.length);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        sizes[i] = keys[i].length - 1;\n\t        currents[i] = 0;\n\t    }\n\t    var position = 0;\n\t    var evolution = 0;\n\t\n\t    while (position < currents.length) {\n\t        if (currents[position] < sizes[position]) {\n\t            evolution++;\n\t            appendResult(results, currents, keys);\n\t            currents[position]++;\n\t            for (var i = 0; i < position; i++) {\n\t                currents[i] = 0;\n\t            }\n\t            position = 0;\n\t        } else {\n\t            position++;\n\t        }\n\t    }\n\t    appendResult(results, currents, keys);\n\t    return results;\n\t};\n\t\n\t\n\tCE.massPeakPicking = massPeakPicking;\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * chemcalc - Analyse molecular formula\n\t * @version v3.0.4\n\t * @date 2015-09-02T14:38:40.161Z\n\t * @link http://www.chemcalc.org\n\t * @license BSD\n\t*/\n\t(function () {\n\t    'use strict';\n\t\n\t    function getExports($wnd) {\n\t\n\t        var $doc = $wnd.document;\n\t        var $gwt = {};\n\t        var navigator = {\n\t            userAgent: 'webkit'\n\t        };\n\t\n\t        function noop(){}\n\t\n\t        var __gwtModuleFunction = noop;\n\t        __gwtModuleFunction.__moduleStartupDone = noop;\n\t        var $sendStats = noop;\n\t        var $moduleName, $moduleBase;\n\t\n\t        // Start GWT code \n\tfunction Qg(){}\n\tfunction Lg(){}\n\tfunction db(){}\n\tfunction dd(){}\n\tfunction hc(){}\n\tfunction qc(){}\n\tfunction qp(){}\n\tfunction Xp(){}\n\tfunction cq(){}\n\tfunction eq(){}\n\tfunction Hr(){}\n\tfunction Hs(){}\n\tfunction il(a){}\n\tfunction yc(){tc()}\n\tfunction sb(){mb(this)}\n\tfunction Xo(){Oo(this)}\n\tfunction Xh(a){this.a=a}\n\tfunction Pc(a){this.a=a}\n\tfunction Yc(a){this.a=a}\n\tfunction hd(a){this.a=a}\n\tfunction ud(a){this.a=a}\n\tfunction fi(a){this.a=a}\n\tfunction Ri(a){this.a=a}\n\tfunction fj(a){this.a=a}\n\tfunction qn(a){this.a=a}\n\tfunction Nn(a){this.a=a}\n\tfunction Sn(a){this.a=a}\n\tfunction Wn(a){this.a=a}\n\tfunction _n(a){this.a=a}\n\tfunction In(a){this.c=a}\n\tfunction Bo(a){this.a=a}\n\tfunction Go(a){this.a=a}\n\tfunction Lo(a){this.a=a}\n\tfunction bu(a){this.a=a}\n\tfunction Oc(){this.a=[]}\n\tfunction pu(){this.nb()}\n\tfunction Oh(){return Kb}\n\tfunction Od(a){return a.a}\n\tfunction nd(a){return a.a}\n\tfunction zd(a){return a.a}\n\tfunction Uc(a){return a.a}\n\tfunction _c(a){return a.a}\n\tfunction gd(){return null}\n\tfunction Gd(){return null}\n\tfunction bn(a){++a.b;up(a)}\n\tfunction cn(a){--a.b;up(a)}\n\tfunction bh(a,b){a.h=b}\n\tfunction dh(a,b){a.l=b}\n\tfunction eh(a,b){a.m=b}\n\tfunction $h(){sb.call(this)}\n\tfunction dj(){sb.call(this)}\n\tfunction Bj(){sb.call(this)}\n\tfunction xk(){sb.call(this)}\n\tfunction vp(){sb.call(this)}\n\tfunction wp(){sb.call(this)}\n\tfunction Oq(){sb.call(this)}\n\tfunction Cq(){mq.call(this)}\n\tfunction Lq(){mq.call(this)}\n\tfunction dr(){Sq.call(this)}\n\tfunction ai(){$h.call(this)}\n\tfunction Pp(){Hp.call(this)}\n\tfunction Fs(){tr.call(this)}\n\tfunction Xb(){Tb();Ub(this)}\n\tfunction vb(){vb=Lg;ub=new db}\n\tfunction cd(){cd=Lg;bd=new dd}\n\tfunction ec(){ec=Lg;dc=new hc}\n\tfunction pp(){pp=Lg;op=new qp}\n\tfunction ku(){ku=Lg;ju=new zp}\n\tfunction Gu(){this.a=new Oc}\n\tfunction Mu(){this.a=new td}\n\tfunction Sq(){this.a=new Xo}\n\tfunction $r(){this.g=new tr}\n\tfunction Hp(){this.a=this.$()}\n\tfunction ad(a){tb.call(this,a)}\n\tfunction Zh(a){tb.call(this,a)}\n\tfunction _h(a){tb.call(this,a)}\n\tfunction bi(a){tb.call(this,a)}\n\tfunction cj(a){tb.call(this,a)}\n\tfunction Cj(a){tb.call(this,a)}\n\tfunction tb(a){rb.call(this,a)}\n\tfunction Dj(a){cj.call(this,a)}\n\tfunction nk(a){Xh.call(this,a)}\n\tfunction uk(a){Xh.call(this,a)}\n\tfunction yk(a){tb.call(this,a)}\n\tfunction mk(){Xh.call(this,'')}\n\tfunction sk(){Xh.call(this,'')}\n\tfunction tk(){Xh.call(this,'')}\n\tfunction td(){ud.call(this,{})}\n\tfunction Fr(a){Bo.call(this,a)}\n\tfunction wt(a){_r.call(this,a)}\n\tfunction It(a){rb.call(this,a)}\n\tfunction Xi(a){return isNaN(a)}\n\tfunction lr(a){return !!a&&a.b}\n\tfunction sj(a){return a<0?-a:a}\n\tfunction fe(a){return a<<24>>24}\n\tfunction Dd(a){return new hd(a)}\n\tfunction Fd(a){return new Id(a)}\n\tfunction Rd(a,b){return Di(a,b)}\n\tfunction Jj(a,b){return a===b}\n\tfunction wj(a,b){return a>b?a:b}\n\tfunction xj(a,b){return a<b?a:b}\n\tfunction Bp(b,a){return b.a[a]}\n\tfunction Qh(a){return a.tM===Qg}\n\tfunction qh(a,b){return !ph(a,b)}\n\tfunction rh(a,b){return !oh(a,b)}\n\tfunction mc(a,b){lc();kc.o(a,b)}\n\tfunction lq(c,a,b){c.a[a]=b}\n\tfunction lk(a,b){a.a+=b;return a}\n\tfunction pk(a,b){a.a+=b;return a}\n\tfunction qk(a,b){a.a+=b;return a}\n\tfunction ui(a){ti(a);return a.k}\n\tfunction _r(a){this.g=new ur(a)}\n\tfunction mq(){this.a=this.eb()}\n\tfunction rb(a){this.f=a;mb(this)}\n\tfunction Mh(){Kh==null&&(Kh=[])}\n\tfunction _p(){_p=Lg;$p=bq()}\n\tfunction hk(){hk=Lg;ek={};gk={}}\n\tfunction Qb(){Eb!=0&&(Eb=0);Hb=-1}\n\tfunction rj(a){return a<=0?0-a:a}\n\tfunction zr(a){return a.b=Gn(a.a)}\n\tfunction Us(a){return a.a.e*a.a.c}\n\tfunction Vs(a){return a.a.e*a.a.d}\n\tfunction Fn(a){return a.a<a.c.G()}\n\tfunction Ch(a){return a.l|a.m<<22}\n\tfunction Cd(a){return Xc(),a?Wc:Vc}\n\tfunction vo(a){return uo(a,fr(a))}\n\tfunction vj(a){return Math.log(a)}\n\tfunction tj(a){return Math.ceil(a)}\n\tfunction Aj(a){return Math.sqrt(a)}\n\tfunction ce(a){return be(a)&&Qh(a)}\n\tfunction so(a,b){return !!a.X(b)}\n\tfunction to(a,b){return Xm(a.X(b))}\n\tfunction Rq(a,b){return Qo(a.a,b)}\n\tfunction Cp(b,a){return b.a[a]||[]}\n\tfunction Wm(a){return !a?null:a.c}\n\tfunction tr(){ur.call(this,null)}\n\tfunction Or(a,b){Zi.call(this,a,b)}\n\tfunction Gm(a,b){Zi.call(this,a,b)}\n\tfunction lo(a,b){eo.call(this,a,b)}\n\tfunction eo(a,b){this.c=a;this.d=b}\n\tfunction Zi(a,b){this.a=a;this.b=b}\n\tfunction yq(a,b){this.a=a;this.b=b}\n\tfunction vq(a,b){this.b=a;this.c=b}\n\tfunction tp(a,b){a._gwt_modCount=b}\n\tfunction dp(a,b,c){a.splice(b,c)}\n\tfunction ej(a,b){return gj(a.a,b.a)}\n\tfunction $d(a){return !be(a)&&Qh(a)}\n\tfunction uj(a){return Math.floor(a)}\n\tfunction zj(a){return Math.round(a)}\n\tfunction Xm(a){return !a?null:a.U()}\n\tfunction ee(a){return a==null?null:a}\n\tfunction Lj(b,a){return b.indexOf(a)}\n\tfunction Pb(a){$wnd.clearTimeout(a)}\n\tfunction Cl(a){hl();Dl.call(this,a)}\n\tfunction mo(a){eo.call(this,a.c,a.d)}\n\tfunction Sr(){Or.call(this,'Head',1)}\n\tfunction Xr(){Or.call(this,'Tail',3)}\n\tfunction Oo(a){a.b=Sd($e,Ru,1,0,3,1)}\n\tfunction Rt(a){a.b=a.d.b;a.c=new Fs}\n\tfunction Dc(a){if(!a){throw new Oq}}\n\tfunction Ic(a){if(!a){throw new dj}}\n\tfunction cr(a,b){Qo(a.a,b);return b}\n\tfunction ok(a,b){a.a+=Zd(b);return a}\n\tfunction ep(a,b,c,d){a.splice(b,c,d)}\n\tfunction kh(a,b){return Vg(a,b,false)}\n\tfunction Tg(a){return Ug(a.l,a.m,a.h)}\n\tfunction Qq(a){return a!=null?jb(a):0}\n\tfunction gj(a,b){return a<b?-1:a>b?1:0}\n\tfunction gi(a,b){return a==b?0:a?1:-1}\n\tfunction yj(a,b){return Math.pow(a,b)}\n\tfunction be(a){return Array.isArray(a)}\n\tfunction fh(a){return a.l+a.m*Vu+a.h*Wu}\n\tfunction Nb(a){return a.$H||(a.$H=++Fb)}\n\tfunction Vj(a){return Sd(ef,Ru,2,a,4,1)}\n\tfunction Ij(b,a){return b.charCodeAt(a)}\n\tfunction Wj(a,b,c){return a.substr(b,c)}\n\tfunction Ug(a,b,c){return {l:a,m:b,h:c}}\n\tfunction Ju(a,b,c){rd(a.a,b,c);return a}\n\tfunction sh(a,b){Vg(a,b,true);return Rg}\n\tfunction yp(a){var b;b=jb(a);return ~~b}\n\tfunction Jg(a){var b=Ig;return Og(b[a])}\n\tfunction Jq(a){this.a=a;Xo.call(this)}\n\tfunction Vp(a){this.a=a;Xo.call(this)}\n\tfunction Rk(a){this.e=5;Lk(this,Fc(a))}\n\tfunction Br(a){Cr.call(this,a,(Nr(),Jr))}\n\tfunction Ur(){Or.call(this,'Range',2)}\n\tfunction Rh(){$wnd.setTimeout(Nu(Sh))}\n\tfunction Vo(a){return Pd(a.b,a.b.length)}\n\tfunction Rj(a,b){return Wj(a,b,a.length-b)}\n\tfunction Sj(a,b,c){return a.substr(b,c-b)}\n\tfunction Mj(b,a){return b.lastIndexOf(a)}\n\tfunction an(a,b){return a.c.Z(b)||a.a.Z(b)}\n\tfunction Qi(a,b){return _d(b,7)&&b.a==a.a}\n\tfunction pi(a){return a>=56320&&a<=57343}\n\tfunction de(a){return typeof a==='string'}\n\tfunction nj(a,b){return (a>>>0).toString(b)}\n\tfunction pc(a){lc();return parseInt(a)||-1}\n\tfunction ti(a){if(a.k!=null){return}Hi(a)}\n\tfunction Rn(a){var b;b=vn(a.a);return b.T()}\n\tfunction $n(a){var b;b=vn(a.a);return b.U()}\n\tfunction Ko(a){var b;b=zr(a.a);return b.T()}\n\tfunction co(a,b){var c;c=a.d;a.d=b;return c}\n\tfunction mb(a){a.g=null;mc(a,a.f);return a}\n\tfunction Ar(a){Hn(a.a);or(a.c,a.b);a.b=null}\n\tfunction Ac(a,b){if(!a){throw new bi(''+b)}}\n\tfunction Bc(a,b){if(!a){throw new cj(''+b)}}\n\tfunction Th(a,b){this.e=b;this.f=a;mb(this)}\n\tfunction Zt(a,b){this.d=a;Rt(this);this.c=b}\n\tfunction gt(a,b,c){ht.call(this,a,b,c,true)}\n\tfunction Ps(a,b,c,d){Os.call(this,a,0,b,c,d)}\n\tfunction Ib(a,b,c){return a.apply(b,c);var d}\n\tfunction $j(a,b){return de(a)?Zj(a,b):a.t(b)}\n\tfunction Nj(c,a,b){return c.lastIndexOf(a,b)}\n\tfunction Zd(a){return String.fromCharCode(a)}\n\tfunction ck(a){return String.fromCharCode(a)}\n\tfunction Wi(a){return !isFinite(a)&&!isNaN(a)}\n\tfunction ae(a){return a!=null&&!de(a)&&!Qh(a)}\n\tfunction Ai(){var a;a=xi(null);a.e=2;return a}\n\tfunction yi(a){var b;b=xi(a);Li(a,b);return b}\n\tfunction Qo(a,b){a.b[a.b.length]=b;return true}\n\tfunction Ro(a,b){Ec(b,a.b.length);return a.b[b]}\n\tfunction Ao(a){if(!a){throw new Oq}return a.c}\n\tfunction Fc(a){if(a==null){throw new Bj}return a}\n\tfunction Gc(a,b){if(a==null){throw new Cj(''+b)}}\n\tfunction Id(a){if(a==null){throw new Bj}this.a=a}\n\tfunction Vq(a,b){if(a<0||a>=b){throw new ai}}\n\tfunction Fu(a,b){Mc(a.a,a.a.a.length,b);return a}\n\tfunction Bi(a){var b;b=xi(a);b.j=a;b.e=1;return b}\n\tfunction Pk(a){this.f=a;this.e=5;this.a=Sk(a)}\n\tfunction qj(){qj=Lg;pj=Sd(We,Ru,19,256,0,1)}\n\tfunction tc(){tc=Lg;Error.stackTraceLimit=64}\n\tfunction ut(a,b,c){vt.call(this,a,b,c,1,true)}\n\tfunction Td(a,b,c,d,e,f){return Ud(a,b,c,d,e,0,f)}\n\tfunction Po(a,b,c){Hc(b,a.b.length);ep(a.b,b,0,c)}\n\tfunction _m(a,b){return de(b)?fn(a,b):!!Dp(a.a,b)}\n\tfunction Rm(a,b){return b===a?'(this Map)':''+b}\n\tfunction gs(a){return a.a!=0?'['+a.a+a.i+']':a.i}\n\tfunction cb(a){return ui(hb(a))+'@'+nj(jb(a),16)}\n\tfunction vn(a){return sp(a.c,a),Dc(un(a)),a.a.O()}\n\tfunction Zr(a,b){return mr(a.g,b,(ei(),ci))==null}\n\tfunction Mg(a){return a instanceof Array?a[0]:null}\n\tfunction dn(a,b){return de(b)?en(a,b):Xm(Dp(a.a,b))}\n\tfunction lh(a,b){return a.l==b.l&&a.m==b.m&&a.h==b.h}\n\tfunction vh(a,b){return a.l!=b.l||a.m!=b.m||a.h!=b.h}\n\tfunction Yt(a,b){b<1.0E-10&&(b=1.0E-10);a.b=b}\n\tfunction Xt(a,b,c,d){us(a.c,d);ts(a.c,c);ys(a.c,b)}\n\tfunction nr(a,b){var c;c=new Hr;pr(a,b,c);return c.d}\n\tfunction Mc(a,b,c){var d;d=Lc(a,b);Nc(a,b,c);return d}\n\tfunction rd(a,b,c){var d;d=pd(a,b);sd(a,b,c);return d}\n\tfunction ic(a,b){!a&&(a=[]);a[a.length]=b;return a}\n\tfunction Zj(a,b){if(a==b){return 0}return a<b?-1:1}\n\tfunction Ap(c,a){var b=c.a;return b[a]||(b[a]=[])}\n\tfunction up(a){var b;b=a._gwt_modCount|0;tp(a,b+1)}\n\tfunction Ep(a){return Object.getOwnPropertyNames(a.a)}\n\tfunction iq(a){return Object.getOwnPropertyNames(a.a)}\n\tfunction hb(a){return de(a)?ef:$d(a)?a.cZ:ce(a)?a.cZ:me}\n\tfunction gn(a,b,c){return de(b)?hn(a,b,c):Fp(a.a,b,c)}\n\tfunction jh(a,b){return {l:a.l&b.l,m:a.m&b.m,h:a.h&b.h}}\n\tfunction wh(a,b){return {l:a.l|b.l,m:a.m|b.m,h:a.h|b.h}}\n\tfunction Eh(a,b){return {l:a.l^b.l,m:a.m^b.m,h:a.h^b.h}}\n\tfunction xp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\n\tfunction Pq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\n\tfunction uo(a,b){!!b&&or(a,b);return !b?null:new mo(b)}\n\tfunction Gn(a){Dc(a.a<a.c.G());return a.c.R(a.b=a.a++)}\n\tfunction Hn(a){Ic(a.b!=-1);a.c.S(a.b);a.a=a.b;a.b=-1}\n\tfunction Lk(a,b){a.c=b;a.a=Ml(b);a.a<54&&(a.f=Bh(ql(b)))}\n\tfunction rk(a,b,c){a.a=Sj(a.a,0,b)+c+Rj(a.a,b);return a}\n\tfunction fu(a){if(fn(du,a)){return en(du,a)}return null}\n\tfunction pd(a,b){if(b==null){throw new Bj}return qd(a,b)}\n\tfunction Cc(a,b){if(!a){throw new cj(Jc('%s > %s',b))}}\n\tfunction kk(){if(fk==256){ek=gk;gk={};fk=0}++fk}\n\tfunction ei(){ei=Lg;ci=new fi(false);di=new fi(true)}\n\tfunction Xc(){Xc=Lg;Vc=new Yc(false);Wc=new Yc(true)}\n\tfunction Fo(a){var b;b=(new Fr(a.a)).a.W();return new Lo(b)}\n\tfunction zi(a,b){var c;c=xi(a);Li(a,c);c.e=b?8:0;return c}\n\tfunction Ln(a){In.call(this,a);Hc(0,a.b.length);this.a=0}\n\tfunction Ct(a,b,c,d){this.c=a;this.b=b;this.d=c;this.a=d}\n\tfunction Du(a,b,c,d){this.a=a;this.c=b;this.b=d;this.d=c}\n\tfunction zl(a,b,c){hl();il(this);this.e=a;this.d=b;this.a=c}\n\tfunction ur(a){this.c=null;!a&&(a=(pp(),pp(),op));this.b=a}\n\tfunction en(a,b){return b==null?Xm(Dp(a.a,null)):a.c.gb(b)}\n\tfunction hn(a,b,c){return b==null?Fp(a.a,null,c):a.c.jb(b,c)}\n\tfunction Oj(b,a){return (new RegExp('^('+a+')$')).test(b)}\n\tfunction tu(){return qu(vu(new zp,(Ht(),Ht(),Gt),(null,Ft)))}\n\tfunction ge(a){return ~~Math.max(Math.min(a,Ou),-2147483648)}\n\tfunction ni(a){return null!=String.fromCharCode(a).match(/\\d/)}\n\tfunction vk(a){_h.call(this,'String index out of range: '+a)}\n\tfunction Ob(a){$wnd.setTimeout(function(){throw a},0)}\n\tfunction Sh(){var a;a=Vh();if(!Jj('safari',a)){throw new Uh(a)}}\n\tfunction Mn(a){var b;b=new wn((new qn(a.a)).a);return new Sn(b)}\n\tfunction Vn(a){var b;b=new wn((new qn(a.a)).a);return new _n(b)}\n\tfunction rr(a,b){var c;c=1-b;a.a[c]=sr(a.a[c],c);return sr(a,b)}\n\tfunction dk(a,b,c){var d;d=b+c;Uj(a.length,b,d);return Yj(a,b,d)}\n\tfunction Bb(a,b){var c=Ab[a.charCodeAt(0)];return c==null?a:c}\n\tfunction Di(a,b){var c=a.a=a.a||[];return c[b]||(c[b]=a.u(b))}\n\tfunction _d(a,b){return a!=null&&(de(a)&&!!Yd[b]||a.cM&&!!a.cM[b])}\n\tfunction jb(a){return de(a)?jk(a):$d(a)?a.hC():ce(a)?Nb(a):Nb(a)}\n\tfunction oi(a){return null!=String.fromCharCode(a).match(/[A-Z]/i)}\n\tfunction sm(a,b){mm();return b<lm.length?rm(a,lm[b]):rl(a,vm(b))}\n\tfunction Pj(c,a,b){b=Xj(b);return c.replace(RegExp(a,'g'),b)}\n\tfunction Rr(){Nr();return Vd(Rd(ig,1),Ru,26,0,[Jr,Kr,Lr,Mr])}\n\tfunction Fi(a){if(a.C()){return null}var b=a.j;var c=Ig[b];return c}\n\tfunction Og(a){function b(){}\n\t;b.prototype=a||{};return new b}\n\tfunction _b(a,b,c,d,e,f,g){a+=e+g+(b^c^d);a=a<<f|a>>>-f;return a+b}\n\tfunction Wh(a,b,c,d){b==null&&(b='null');a.a+=b.substr(c,d-c)}\n\tfunction Ej(a,b,c){this.a='Unknown';this.d=a;this.b=b;this.c=c}\n\tfunction Mp(a){this.f=a;this.d=Ep(this.f);this.a=Sd($f,Ru,27,0,0,1)}\n\tfunction kl(a){while(a.d>0&&a.a[--a.d]==0);a.a[a.d++]==0&&(a.e=0)}\n\tfunction ob(a){var b,c;b=ui(a.cZ);c=a.n();return c!=null?b+': '+c:b}\n\tfunction ro(a,b){var c,d;c=b.T();d=a.X(c);return !!d&&Pq(d.d,b.U())}\n\tfunction Lb(a,b,c){var d;d=Jb();try{return Ib(a,b,c)}finally{Mb(d)}}\n\tfunction Kb(b){return function(){return Lb(b,this,arguments);var a}}\n\tfunction fb(a,b){return de(a)?Jj(a,b):$d(a)?a.eQ(b):ce(a)?a===b:a===b}\n\tfunction sd(d,a,b){if(b){var c=b.r();d.a[a]=c(b)}else{delete d.a[a]}}\n\tfunction Nc(d,a,b){if(b){var c=b.r();b=c(b)}else{b=undefined}d.a[a]=b}\n\tfunction sp(a,b){if(b._gwt_modCount!=a._gwt_modCount){throw new vp}}\n\tfunction Hc(a,b){if(a<0||a>b){throw new _h('Index: '+a+', Size: '+b)}}\n\tfunction Ec(a,b){if(a<0||a>=b){throw new _h('Index: '+a+', Size: '+b)}}\n\tfunction tl(a,b){if(b==0||a.e==0){return a}return b>0?Nl(a,b):Ql(a,-b)}\n\tfunction vl(a,b){if(b==0||a.e==0){return a}return b>0?Ql(a,b):Nl(a,-b)}\n\tfunction nl(a,b){var c;for(c=a.d-1;c>=0&&a.a[c]==b[c];c--);return c<0}\n\tfunction Uo(a,b,c){var d;d=(Ec(b,a.b.length),a.b[b]);a.b[b]=c;return d}\n\tfunction hm(a,b,c,d){var e;e=Sd(ke,Ru,0,b,7,1);im(e,a,b,c,d);return e}\n\tfunction cm(a,b,c,d){var e;e=Sd(ke,Ru,0,b+1,7,1);dm(e,a,b,c,d);return e}\n\tfunction Sd(a,b,c,d,e,f){var g;g=Wd(e,d);Vd(Rd(a,f),b,c,e,g);return g}\n\tfunction ac(a,b,c,d,e,f,g){a+=e+g+(c^(b|~d));a=a<<f|a>>>-f;return a+b}\n\tfunction $b(a,b,c,d,e,f,g){a+=e+g+(c^d&(b^c));a=a<<f|a>>>-f;return a+b}\n\tfunction Zb(a,b,c,d,e,f,g){a+=e+g+(d^b&(c^d));a=a<<f|a>>>-f;return a+b}\n\tfunction Sg(a){var b,c,d;b=a&Su;c=a>>22&Su;d=a<0?Tu:0;return Ug(b,c,d)}\n\tfunction or(a,b){var c;c=new Hr;c.c=true;c.d=b.U();return pr(a,b.T(),c)}\n\tfunction To(a,b){var c;c=(Ec(b,a.b.length),a.b[b]);dp(a.b,b,1);return c}\n\tfunction Gr(a,b){lo.call(this,a,b);this.a=Sd(dg,Ru,40,2,0,1);this.b=true}\n\tfunction Qt(a,b,c,d){this.g=new zp;this.c=a;this.d=b;this.b=c;this.a=d}\n\tfunction xb(a){vb();this.e=null;this.f=null;this.a='';this.b=a;this.a=''}\n\tfunction fn(a,b){return b==null?!!Dp(a.a,null):!(a.c.gb(b)===undefined)}\n\tfunction Lu(a,b,c){return c==null?Ju(a,b,(cd(),cd(),bd)):Ju(a,b,new Id(c))}\n\tfunction Hm(){Fm();return Vd(Rd(kf,1),Ru,24,0,[Em,ym,xm,zm,Cm,Am,Bm,Dm])}\n\tfunction rl(a,b){if(b.e==0){return gl}if(a.e==0){return gl}return mm(),nm(a,b)}\n\tfunction zb(){if(Date.now){return Date.now()}return (new Date).getTime()}\n\tfunction Yo(){Oo(this);Bc(true,'Initial capacity must not be negative')}\n\tfunction Mb(a){a&&gc((ec(),dc));--Eb;if(a){if(Hb!=-1){Pb(Hb);Hb=-1}}}\n\tfunction Nr(){Nr=Lg;Jr=new Or('All',0);Kr=new Sr;Lr=new Ur;Mr=new Xr}\n\tfunction Jh(){Jh=Lg;Fh=Ug(Su,Su,524287);Gh=Ug(0,0,Uu);Hh=nh(1);nh(2);Ih=nh(0)}\n\tfunction Qk(a,b){this.e=b;this.a=Tk(a);this.a<54?(this.f=Bh(a)):(this.c=Ll(a))}\n\tfunction Os(a,b,c,d,e){this.b=new zp;this.c=a;this.d=b;this.g=c;this.e=d;this.a=e}\n\tfunction yl(a,b){hl();il(this);this.e=a;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[b])}\n\tfunction Hu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,new hd(a[b]))}}\n\tfunction su(a){var b=new zp;if(a){for(var c in a){b.M(c,String(a[c]))}}return b}\n\tfunction er(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[0]){c=b}return c}\n\tfunction fr(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[1]){c=b}return c}\n\tfunction fc(a){var b,c;if(a.a){c=null;do{b=a.a;a.a=null;c=jc(b,c)}while(a.a);a.a=c}}\n\tfunction gc(a){var b,c;if(a.b){c=null;do{b=a.b;a.b=null;c=jc(b,c)}while(a.b);a.b=c}}\n\tfunction Cu(a,b){var c;c=Si(rj(a.a),rj(b.a));if(c!=0)return c;return Zj(a.b,b.b)}\n\tfunction So(a,b,c){for(;c<a.b.length;++c){if(Pq(b,a.b[c])){return c}}return -1}\n\tfunction kq(a,b){var c;c=a.a[b];if(!(c===undefined)){delete a.a[b];cn(a.b)}return c}\n\tfunction Lc(d,a){var b=d.a[a];var c=(Bd(),Ad)[typeof b];return c?c(b):Hd(typeof b)}\n\tfunction Li(a,b){var c;if(!a){return}b.j=a;var d=Fi(b);if(!d){Ig[a]=[b];return}d.cZ=b}\n\tfunction hq(d,a){var b=d.a;for(var c in b){if(d.fb(a,b[c])){return true}}return false}\n\tfunction al(a){if(lh(a,{l:0,m:0,h:0})&&5<Fk.length){return Fk[5]}return new Qk(a,5)}\n\tfunction Mk(a){if(a.a<54){return a.f<0?-1:a.f>0?1:0}return (!a.c&&(a.c=Kl(a.f)),a.c).e}\n\tfunction Xs(a){this.a=a;if(a.d>a.c)throw new It('Error: minCount>maxCount')}\n\tfunction Dl(a){Fc(a);if(!a.length){throw new Dj('Zero length BigInteger')}Il(this,a)}\n\tfunction qi(a){return String.fromCharCode(a).toLowerCase().charCodeAt(0)==a&&oi(a)}\n\tfunction ri(a){return String.fromCharCode(a).toUpperCase().charCodeAt(0)==a&&oi(a)}\n\tfunction wn(a){this.c=a;this.b=this.c.c._();this.a=this.b;tp(this,a._gwt_modCount)}\n\tfunction Iu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,(new Hu(a[b])).a)}}\n\tfunction Lh(){Mh();var a=Kh;for(var b=0;b<arguments.length;b++){a.push(arguments[b])}}\n\tfunction od(e,a){var b=e.a;var c=0;for(var d in b){b.hasOwnProperty(d)&&(a[c++]=d)}return a}\n\tfunction lj(a){var b,c;if(a==0){return 32}else{c=0;for(b=1;(b&a)==0;b<<=1){++c}return c}}\n\tfunction xi(a){var b;b=new vi;b.k='Class$'+(a?'S'+a:''+b.g);b.b=b.k;b.i=b.k;return b}\n\tfunction sr(a,b){var c,d;c=1-b;d=a.a[c];a.a[c]=d.a[b];d.a[b]=a;a.b=true;d.b=false;return d}\n\tfunction es(a,b){var c;if(_d(b,32)){c=b;if(Jj(a.i,c.i)&&a.a==c.a)return true}return false}\n\tfunction ru(a,b){var c;c=su(b);c.c.jb('mf',a);return qu(wu(c,(Ht(),Ht(),Gt),(null,Ft)))}\n\tfunction np(a,b){var c,d;d=a.a.b.length;for(c=0;c<d;c++){Vq(c,a.a.b.length);Uo(a.a,c,b[c])}}\n\tfunction Pl(a,b,c){var d,e,f;d=0;for(e=0;e<c;e++){f=b[e];a[e]=f<<1|d;d=f>>>31}d!=0&&(a[c]=d)}\n\tfunction lp(a){var b,c,d;d=0;for(c=a.D();c.N();){b=c.O();d=d+(b!=null?jb(b):0);d=~~d}return d}\n\tfunction Cr(a,b){var c;this.c=a;c=new Xo;ir(a,c,b,a.c,null,false,null,false);this.a=new Ln(c)}\n\tfunction ks(a){this.i=a.i;this.b=a.b;this.d=a.d;this.c=a.c;this.e=a.e;this.f=a.f;this.a=a.a}\n\tfunction fs(a){if(a.d==a.c)return a.d;throw new tb('Atoms.getCount(): undefined (min!=max)')}\n\tfunction qu(a){if('error' in a.a.a){throw new xb(pd(a.a,'error').s().a)}else{return a.a.a}}\n\tfunction Ot(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Ds(a.e.c)}\n\tfunction Pt(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Es(a.e.c)}\n\tfunction Ut(a,b){if(a.d.f==0){return Vt(a,b)}else if(a.d.f==Jt){return Wt(a,b)}return Vt(a,b)}\n\tfunction un(a){if(a.a.N()){return true}if(a.a!=a.b){return false}a.a=a.c.a._();return a.a.N()}\n\tfunction ol(a){var b;if(a.b==-2){if(a.e==0){b=-1}else{for(b=0;a.a[b]==0;b++);}a.b=b}return a.b}\n\tfunction Km(a,b){var c,d;Fc(b);for(d=b.D();d.N();){c=d.O();if(!a.F(c)){return false}}return true}\n\tfunction ct(b){try{Pi(b);return true}catch(a){a=Hg(a);if(_d(a,20)){return false}else throw Gg(a)}}\n\tfunction Ku(a,b){return !b?Ju(a,'unsaturation',(cd(),cd(),bd)):Ju(a,'unsaturation',new hd(b.a))}\n\tfunction Uj(a,b,c){if(b<0){throw new vk(b)}if(c<b){throw new vk(c-b)}if(c>a){throw new vk(c)}}\n\tfunction Fg(b,c){if(b&&typeof b=='object'){try{b.__gwt$exception=c}catch(a){}}}\n\tfunction Ph(a,b){typeof window==='object'&&typeof window['$gwt']==='object'&&(window['$gwt'][a]=b)}\n\tfunction jq(a,b,c){var d;d=a.a[b];d===undefined&&bn(a.b);lq(a,b,c===undefined?null:c);return d}\n\tfunction mu(a){ku();var b,c;b='61-'+a;if(fn(ju,b))return en(ju,b);c=new iu(a);hn(ju,b,c);return c}\n\tfunction mt(a,b){var c,d;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);if(Jj(c.i,b))return c}return null}\n\tfunction lt(a){var b,c,d;d=nt(a);for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);b.g=rt(b.b*fs(b)*100/d)}}\n\tfunction us(a,b){var c,d,e;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.U().a;e<b&&Ar(c)}}\n\tfunction uh(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;return Ug(b,c,d)}\n\tfunction br(a){var b;b=a.a.b.length;if(b>0){return Vq(b-1,a.a.b.length),a.a.S(b-1)}else{throw new wp}}\n\tfunction oc(a){var b=/function(?:\\s+([\\w$]+))?\\s*\\(/;var c=b.exec(a);return c&&c[1]||'anonymous'}\n\tfunction Si(a,b){if(a<b){return -1}if(a>b){return 1}if(a==b){return 0}return isNaN(a)?isNaN(b)?0:1:-1}\n\tfunction Bh(a){if(lh(a,(Jh(),Gh))){return Xu}if(!ph(a,Ih)){return -fh(uh(a))}return a.l+a.m*Vu+a.h*Wu}\n\tfunction Ok(a){Hk();if(Wi(a)||isNaN(a)){throw new Dj('Infinite or NaN')}Jk(this,a.toPrecision(20))}\n\tfunction zp(){_p();this.a=$p.cb();this.a.b=this;this.c=$p.db();this.c.b=this;this.b=0;up(this)}\n\tfunction Bd(){Bd=Lg;Ad={'boolean':Cd,number:Dd,string:Fd,object:Ed,'function':Ed,undefined:Gd}}\n\tfunction lc(){lc=Lg;var a,b;b=!(!!Error.stackTraceLimit||'stack' in new Error);a=new yc;kc=b?new qc:a}\n\tfunction mr(a,b,c){var d,e;d=new Gr(b,c);e=new Hr;a.c=kr(a,a.c,d,e);e.b||++a.d;a.c.b=false;return e.d}\n\tfunction _g(a){var b,c;c=kj(a.h);if(c==32){b=kj(a.m);return b==32?kj(a.l)+32:b+20-10}else{return c-12}}\n\tfunction Qd(a,b){var c;c=Wd(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\n\tfunction Pd(a,b){var c;c=a.slice(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\n\tfunction Vd(a,b,c,d,e){e.cZ=a;e.cM=b;e.tM=Qg;e.__elementTypeId$=c;e.__elementTypeCategory$=d;return e}\n\tfunction Xg(a,b,c,d,e){var f;f=yh(a,b);c&&$g(f);if(e){a=Zg(a,b);d?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h))}return f}\n\tfunction Im(a,b){var c,d,e;Fc(b);c=false;for(e=b.D();e.N();){d=e.O();c=c|mr(a.g,d,(ei(),ci))==null}return c}\n\tfunction gp(a){var b,c,d,e;e=1;for(c=0,d=a.length;c<d;++c){b=a[c];e=31*e+(b!=null?jb(b):0);e=~~e}return e}\n\tfunction Gg(a){var b;if(_d(a,38)){b=a;if(ee(b.b)!==ee((vb(),ub))){return ee(b.b)===ee(ub)?null:b.b}}return a}\n\tfunction Hg(a){var b;if(_d(a,9)){return a}b=a&&a.__gwt$exception;if(!b){b=new xb(a);mc(b,a);Fg(a,b)}return b}\n\tfunction rt(a){var b;b=isNaN(a*cv)?a*cv:Wi(a*cv)?a*cv:a*cv==0?a*cv:Bh(mh(Math.round(a*cv)));return b/cv}\n\tfunction lb(a){return de(a)?a:$d(a)?a.tS():ce(a)?cb(a):a.toString?a.toString():'[JavaScriptObject]'}\n\tfunction ih(a,b){var c,d,e;c=a.l+b.l;d=a.m+b.m+(c>>22);e=a.h+b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\n\tfunction Ah(a,b){var c,d,e;c=a.l-b.l;d=a.m-b.m+(c>>22);e=a.h-b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\n\tfunction $g(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;dh(a,b);eh(a,c);bh(a,d)}\n\tfunction uu(a,b){var c;c=su(b);c.c.jb('monoisotopicMass',''+a);return qu(zu(c,(Ht(),Ht(),Gt),(null,Ft)))}\n\tfunction ml(a,b){var c;if(a===b){return true}if(_d(b,5)){c=b;return a.e==c.e&&a.d==c.d&&nl(a,c.a)}return false}\n\tfunction Kl(a){hl();if(a<0){if(a!=-1){return new xl(-1,-a)}return bl}else return a<=10?dl[ge(a)]:new xl(1,a)}\n\tfunction Hd(a){Bd();throw new ad(\"Unexpected typeof result '\"+a+\"'; please report this bug to the GWT team\")}\n\tfunction js(a,b,c,d){if(c>d)throw new It('Error: minCount>maxCount');this.i=a;this.b=b;this.d=c;this.c=d}\n\tfunction vi(){this.g=si++;this.k=null;this.i=null;this.f=null;this.d=null;this.b=null;this.j=null;this.a=null}\n\tfunction _t(a,b,c){this.d=a;Rt(this);this.a=c;Tt(this,b);if(b.a!=0){ss(this.c,-b.a*nv);ws(this.c,1/sj(b.a))}}\n\tfunction Ws(a,b,c,d,e,f){a.d=wj(ge(uj((c-f-b-e)/a.a.e)),a.a.d);a.c=xj(ge(tj((c+f-b-d)/a.a.e)),a.a.c);a.b=a.d-1}\n\tfunction pl(a){var b;if(a.c!=0){return a.c}for(b=0;b<a.a.length;b++){a.c=a.c*33+(a.a[b]&-1)}a.c=a.c*a.e;return a.c}\n\tfunction mi(a){if(a>=48&&a<58){return a-48}if(a>=97&&a<97){return a-97+10}if(a>=65&&a<65){return a-65+10}return -1}\n\tfunction Zk(a){var b=Gk;!b&&(b=Gk=/^[+-]?\\d*$/i);if(b.test(a)){return parseInt(a,10)}else{return Number.NaN}}\n\tfunction jk(a){hk();var b=':'+a;var c=gk[b];if(c!=null){return c}c=ek[b];c==null&&(c=ik(a));kk();return gk[b]=c}\n\tfunction Jm(a,b){var c,d;for(d=a.D();d.N();){c=d.O();if(ee(b)===ee(c)||b!=null&&fb(b,c)){return true}}return false}\n\tfunction oj(a){var b,c;if(a>-129&&a<128){b=a+128;c=(qj(),pj)[b];!c&&(c=pj[b]=new fj(a));return c}return new fj(a)}\n\tfunction ul(a){var b,c,d,e;return a.e==0?a:(b=a.d,c=b+1,d=Sd(ke,Ru,0,c,7,1),Pl(d,a.a,b),e=new zl(a.e,c,d),kl(e),e)}\n\tfunction om(a,b,c,d,e){if(b==0||d==0){return}b==1?(e[d]=qm(e,c,d,a[0])):d==1?(e[b]=qm(e,a,b,c[0])):pm(a,c,e,b,d)}\n\tfunction ip(a,b,c,d,e,f,g,h){var i;i=c;while(f<g){i>=d||b<c&&h.Y(a[b],a[i])<=0?(e[f++]=a[b++]):(e[f++]=a[i++])}}\n\tfunction hp(a,b,c,d){var e,f,g;for(e=b+1;e<c;++e){for(f=e;f>b&&d.Y(a[f-1],a[f])>0;--f){g=a[f];a[f]=a[f-1];a[f-1]=g}}}\n\tfunction Yb(a,b){var c,d;for(c=0,d=0;d<16;d++){b[d]=a[c++]&255|(a[c++]&255)<<8|(a[c++]&255)<<16|(a[c++]&255)<<24}}\n\tfunction xs(a,b){var c,d,e,f;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();f=d.U();mr(a,e,new Ri(f.a*b))}}\n\tfunction Qm(a,b){var c,d,e;for(d=a.K().D();d.N();){c=d.O();e=c.T();if(ee(b)===ee(e)||b!=null&&fb(b,e)){return c}}return null}\n\tfunction As(a){var b,c;b=new Ok(a);c=Nk(Kk(b,(Fm(),Fm(),Cm)));if(c.indexOf('.')!=-1){return Pj(c,'\\\\.?0+$','')}return c}\n\tfunction Wo(a,b){var c,d;d=a.b.length;b.length<d&&(b=Qd(b,d));for(c=0;c<d;++c){b[c]=a.b[c]}b.length>d&&(b[d]=null);return b}\n\tfunction st(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,hs(b))}return d.a}\n\tfunction Js(a){var b,c,d;if(a.b.b==0){return}d=0;for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+=b.b*b.d/100}if(d==0)return;a.c=d}\n\tfunction Ml(a){var b,c,d;if(a.e==0){return 0}b=a.d<<5;c=a.a[a.d-1];if(a.e<0){d=ol(a);if(d==a.d-1){--c;c=~~c}}b-=kj(c);return b}\n\tfunction Gl(a){var b,c,d;if(a<fl.length){return fl[a]}c=a>>5;b=a&31;d=Sd(ke,Ru,0,c+1,7,1);d[c]=1<<b;return new zl(1,c+1,d)}\n\tfunction Lp(a){if(a.c<a.a.length){return true}if(a.b<a.d.length-1){a.a=Bp(a.f,a.d[++a.b]);a.c=0;return true}return false}\n\tfunction Ls(a){if(a.d==0)throw new tb('Exact mass of '+a.g+' is unknown. Run calculateExactMass() first.');return a.d}\n\tfunction Kj(b,a){if(a==null){return false}if(b==a){return true}return b.length==a.length&&b.toLowerCase()==a.toLowerCase()}\n\tfunction Ng(){!Array.isArray&&(Array.isArray=function(a){return Object.prototype.toString.call(a)==='[object Array]'})}\n\tfunction Wg(a,b){if(a.h==Uu&&a.m==0&&a.l==0){b&&(Rg=Ug(0,0,0));return Tg((Jh(),Hh))}b&&(Rg=Ug(a.l,a.m,a.h));return Ug(0,0,0)}\n\tfunction Nl(a,b){var c,d,e,f;c=b>>5;b&=31;e=a.d+c+(b==0?0:1);d=Sd(ke,Ru,0,e,7,1);Ol(d,a.a,c,b);f=new zl(a.e,e,d);kl(f);return f}\n\tfunction gr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c>=0){e=e.a[1]}else{d=e;e=e.a[0]}}return d}\n\tfunction hr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c<=0){e=e.a[0]}else{d=e;e=e.a[1]}}return d}\n\tfunction nc(a){var b,c,d;b='mc';d=xj(a.length,5);for(c=0;c<d;c++){if(Jj(a[c].d,b)){return a.length>=c+1&&a.splice(0,c+1),a}}return a}\n\tfunction mp(a){var b,c,d;d=1;for(c=a.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=31*d+(b!=null?jb(b):0);d=~~d}return d}\n\tfunction Mt(a){var b,c,d;b=mv;for(d=new In(a.d.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));c.f>b&&(b=c.f)}Xt(a.e,b,a.b,a.a)}\n\tfunction vs(a){var b,c,d,e,f,g;b=mv;f=0;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();g=d.U().a;if(g>b){b=g;f=e.a}}return f}\n\tfunction nb(a){var b,c,d,e,f;for(e=a;e;e=e.e){for(b=(e.g==null&&(e.g=(lc(),f=kc.p(e),nc(f))),e.g),c=0,d=b.length;c<d;++c);}}\n\tfunction Dp(a,b){var c,d,e,f;for(d=Cp(a,b==null?'0':''+yp(b)),e=0,f=d.length;e<f;++e){c=d[e];if(xp(b,c.T())){return c}}return null}\n\tfunction nh(a){var b,c;if(a>-129&&a<128){b=a+128;hh==null&&(hh=Sd(Fe,Ru,141,256,0,1));c=hh[b];!c&&(c=hh[b]=Sg(a));return c}return Sg(a)}\n\tfunction Jb(){var a;if(Eb!=0){a=zb();if(a-Gb>2000){Gb=a;Hb=$wnd.setTimeout(Qb,10)}}if(Eb++==0){fc((ec(),dc));return true}return false}\n\tfunction Tj(a){if(a.length==0||a[0]>' '&&a[a.length-1]>' '){return a}return a.replace(/^[\\u0000-\\u0020]*|[\\u0000-\\u0020]*$/g,'')}\n\tfunction Tk(a){var b;qh(a,{l:0,m:0,h:0})&&(a={l:~a.l&Su,m:~a.m&Su,h:~a.h&Tu});return 64-(b=Ch(yh(a,32)),b!=0?kj(b):kj(Ch(a))+32)}\n\tfunction li(a,b,c){var d,e;d=Ij(a,b++);if(d>=55296&&d<=56319&&b<c&&pi(e=a.charCodeAt(b))){return Zu+((d&1023)<<10)+(e&1023)}return d}\n\tfunction Yj(a,b,c){var d='';for(var e=b;e<c;){var f=Math.min(e+10000,c);d+=String.fromCharCode.apply(null,a.slice(e,f));e=f}return d}\n\tfunction Ki(a,b){var c=0;while(!b[c]||b[c]==''){c++}var d=b[c++];for(;c<b.length;c++){if(!b[c]||b[c]==''){continue}d+=a+b[c]}return d}\n\tfunction Kt(a,b,c){var d,e,f;f=lu(Pt(a),b,c);e=new Fs;for(d=0;d<f.length;d++){mr(e,new Ri(f[d][0]),new Ri(f[d][1]))}a.e.c=e;a.e.c.a=cv}\n\tfunction jl(a,b){if(a.e>b.e){return 1}if(a.e<b.e){return -1}if(a.d>b.d){return a.e}if(a.d<b.d){return -b.e}return a.e*em(a.a,b.a,a.d)}\n\tfunction qd(f,a){var b=f.a;var c;a=String(a);b.hasOwnProperty(a)&&(c=b[a]);var d=(Bd(),Ad)[typeof c];var e=d?d(c):Hd(typeof c);return e}\n\tfunction ql(a){var b;b=a.d>1?wh(xh(nh(a.a[1]),32),jh(nh(a.a[0]),{l:Su,m:1023,h:0})):jh(nh(a.a[0]),{l:Su,m:1023,h:0});return th(nh(a.e),b)}\n\tfunction em(a,b,c){var d;for(d=c-1;d>=0&&a[d]==b[d];d--);return d<0?0:qh(jh(nh(a[d]),{l:Su,m:1023,h:0}),jh(nh(b[d]),{l:Su,m:1023,h:0}))?-1:1}\n\tfunction xl(a,b){this.e=a;if(b<fv){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[~~b])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[~~(b%fv),~~(b/fv)])}}\n\tfunction Bl(a){hl();il(this);if(a.length==0){this.e=0;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[0])}else{this.e=1;this.d=a.length;this.a=a;kl(this)}}\n\tfunction $s(a){var b,c,d,e;c='';b=new Xb;d=Rb(b,bk(a));for(e=0;e<5;e++){e==0?(c+=Zd(sj(d[0]%26)+65&_u)):(c+=Zd(sj(d[e]%26)+97&_u))}return c}\n\tfunction ss(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a+b),g);Ar(c)}rs(a,d)}\n\tfunction ws(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a*b),g);Ar(c)}rs(a,d)}\n\tfunction rs(a,b){var c,d,e,f,g;e=(new Fr(b)).a.W();while(Fn(e.a)){c=e.b=Gn(e.a);f=c.T();g=c.U();d=to(a,f);!!d&&(g=new Ri(d.a+g.a));mr(a,f,g)}}\n\tfunction bc(a,b){var c,d;for(c=0,d=0;c<4;c++){b[d++]=fe(a[c]&255);b[d++]=fe(a[c]>>>8&255);b[d++]=fe(a[c]>>>16&255);b[d++]=fe(a[c]>>>24&255)}}\n\tfunction ak(a){var b,c;if(a>=Zu){b=55296+(a-Zu>>10&1023)&_u;c=56320+(a-Zu&1023)&_u;return ck(b)+ck(c)}else{return String.fromCharCode(a&_u)}}\n\tfunction ht(a,b,c,d){this.a=b;this.b=c;this.d=new Yo;dt(this,a,d);if(this.d.b.length==0)throw new It('Cannot parse: empty formula: ->'+a+'<-')}\n\tfunction ir(a,b,c,d,e,f,g,h){var i,j;if(!d){return}i=d.a[0];!!i&&ir(a,b,c,i,e,f,g,h);jr(a,c,d.c,e,f,g,h)&&b.Q(d);j=d.a[1];!!j&&ir(a,b,c,j,e,f,g,h)}\n\tfunction Xj(a){var b;b=0;while(0<=(b=a.indexOf('\\\\',b))){a.charCodeAt(b+1)==36?(a=a.substr(0,b)+'$'+Rj(a,++b)):(a=a.substr(0,b)+Rj(a,++b))}return a}\n\tfunction Pm(a,b){var c,d,e;c=b.T();e=b.U();d=a.L(c);if(!(ee(e)===ee(d)||e!=null&&fb(e,d))){return false}if(d==null&&!a.J(c)){return false}return true}\n\tfunction jr(a,b,c,d,e,f,g){var h,i;if(b.lb()&&(h=a.b.Y(c,d),h<0||!e&&h==0)){return false}if(b.mb()&&(i=a.b.Y(c,f),i>0||!g&&i==0)){return false}return true}\n\tfunction ms(a,b,c){if(b>c)throw new It('Error: minCount>maxCount');this.d=b;this.c=c;this.e=ot(a.a);this.f=pt(a.a);this.a=0;this.i=a.b;this.b=nt(a.a)}\n\tfunction Zg(a,b){var c,d,e;if(b<=22){c=a.l&(1<<b)-1;d=e=0}else if(b<=44){c=a.l;d=a.m&(1<<b-22)-1;e=0}else{c=a.l;d=a.m;e=a.h&(1<<b-44)-1}return Ug(c,d,e)}\n\tfunction yu(a){var b,c,d;d=Ll({l:1,m:0,h:0});for(c=new In(a.a);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=rl(d,Ll(nh(b.a.c-b.a.d+1)))}return d}\n\tfunction zs(a){var b,c,d,e,f;e=~~(a.a/2);if(a.d<e)return;f=new _r(new Hs);Im(f,new Fr(a));c=0;for(d=Fo(new Go(f.g));Fn(d.a.a);){b=Ko(d);c++>e&&nr(a,b.T())}}\n\tfunction nt(a){var b,c,d;if(a.e)throw new It('Cannot calculate mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.b*fs(b)}return rt(d)}\n\tfunction pt(a){var b,c,d;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.f*fs(b)}return d}\n\tfunction qt(a){var b,c,d;if(a.e)throw new It('Cannot get the number of atoms: this is a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=fs(b)}return d}\n\tfunction Lm(a){var b,c,d,e;e=new uk('[');b=false;for(d=a.D();d.N();){c=d.O();b?(e.a+=', ',e):(b=true);e.a+=c===a?'(this Collection)':''+c}e.a+=']';return e.a}\n\tfunction Wk(a,b,c){var d,e,f,g,h;e=(h=a/b,h>0?uj(h):tj(h));f=a%b;g=Si(a*b,0);if(f!=0){d=Si((f<=0?0-f:f)*2,b<=0?0-b:b);e+=$k(ge(e)&1,g*(5+d),c)}return new Pk(e)}\n\tfunction Ll(a){hl();if(qh(a,{l:0,m:0,h:0})){if(vh(a,{l:Su,m:Su,h:Tu})){return new Al(-1,uh(a))}return bl}else return rh(a,{l:10,m:0,h:0})?dl[Ch(a)]:new Al(1,a)}\n\tfunction au(a,b,c){var d,e;d=b.a!=0?fs(b):yj(en(a.a.a,b.i).b.b-1,fs(b));e=c.a!=0?fs(c):yj(en(a.a.a,c.i).b.b-1,fs(c));if(d==e)return Si(b.b,c.b);return -Si(d,e)}\n\tfunction gh(a,b){var c,d,e;e=a.h-b.h;if(e<0){return false}c=a.l-b.l;d=a.m-b.m+(c>>22);e+=d>>22;if(e<0){return false}dh(a,c&Su);eh(a,d&Su);bh(a,e&Tu);return true}\n\tfunction Rb(a,b){var c,d;Vb(a,b,0,b.length);return c=cc(xh(a.b,3)),d=Sd(he,Ru,0,16,7,1),a.c>8?Vb(a,Sb,0,a.c-8):Vb(a,Sb,0,64+(a.c-8)),Vb(a,c,0,8),bc(a.d,d),Ub(a),d}\n\tfunction $t(a,b,c){var d,e,f;this.d=a;Rt(this);this.a=c;d=b.b.b;Yt(this,a.b/(d*4));for(f=Vn(new Wn(b.b));un(f.a);){e=$n(f);mr(this.c,new Ri(e.b),new Ri(e.d/100))}}\n\tfunction Ud(a,b,c,d,e,f,g){var h,i,j,k,l;k=e[f];j=f==g-1;h=j?d:0;l=Wd(h,k);Vd(Rd(a,g-f),b[f],c[f],h,l);if(!j){++f;for(i=0;i<k;++i){l[i]=Ud(a,b,c,d,e,f,g)}}return l}\n\tfunction Nh(b,c,d,e){Mh();var f=Kh;$moduleName=c;$moduleBase=d;Eg=e;function g(){for(var a=0;a<f.length;a++){f[a]()}}\n\tif(b){try{Nu(g)()}catch(a){b(c,a)}}else{Nu(g)()}}\n\tfunction fm(a,b,c){var d,e;d=jh(nh(c),{l:Su,m:1023,h:0});for(e=0;vh(d,{l:0,m:0,h:0})&&e<b;e++){d=ih(d,jh(nh(a[e]),{l:Su,m:1023,h:0}));a[e]=Ch(d);d=yh(d,32)}return Ch(d)}\n\tfunction um(a,b){mm();var c,d;d=(hl(),cl);c=a;for(;b>1;b>>=1){(b&1)!=0&&(d=rl(d,c));c.d==1?(c=rl(c,c)):(c=new Bl(wm(c.a,c.d,Sd(ke,Ru,0,c.d<<1,7,1))))}d=rl(d,c);return d}\n\tfunction Fp(a,b,c){var d,e,f,g;d=Ap(a,b==null?'0':''+yp(b));for(f=0,g=d.length;f<g;++f){e=d[f];if(xp(b,e.T())){return e.V(c)}}d[d.length]=new lo(b,c);bn(a.b);return null}\n\tfunction jp(a,b,c,d){var e,f,g,h;!d&&(d=(pp(),pp(),op));e=(f=(g=c-b,Cc(g>=0,Vd(Rd($e,1),Ru,1,3,[oj(b),oj(c)])),g),h=Qd(a,f),wk(a,b,h,0,xj(a.length-b,f)),h);kp(e,a,b,c,-b,d)}\n\tfunction gu(a,b){eu();var c,d,e,f;f=2;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);e=fu(c.i);if(!e){if(!b){return null}else{f+=b.a*fs(c)}}else{f+=e.a*fs(c)}}return new Ri(f/2)}\n\tfunction Wd(a,b){var c=new Array(b);var d;switch(a){case 6:d={l:0,m:0,h:0};break;case 7:d=0;break;case 8:d=false;break;default:return c;}for(var e=0;e<b;++e){c[e]=d}return c}\n\tfunction hs(a){var b;a.a!=0?(b='<sup>'+a.a+'<\\/sup>'+a.i):(b=a.i);if(a.c==1&&a.d==1)return b;if(a.c==a.d)return b+'<sub>'+a.c+'<\\/sub>';return b+'<sub>'+a.d+'-'+a.c+'<\\/sub>'}\n\tfunction Tb(){Tb=Lg;Sb=Vd(Rd(he,1),Ru,0,7,[-128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])}\n\tfunction iu(a){var b,c,d;this.b=61;this.a=a;c=a/(2*Aj(2*vj(2)));this.c=Sd(je,av,0,61,7,1);for(b=0;b<61;b++){d=b-30;this.c[b]=1/(c*Aj(6.283185307179586))*Math.exp(-d*d/(2*c*c))}}\n\tfunction xu(a,b,c){var d,e;for(d=0;d<a.a.b.length;d++){for(e=d+1;e<a.a.b.length;e++){b[d]=b[d]+Vs((Vq(e,a.a.b.length),Ro(a.a,e)));c[d]=c[d]+Us((Vq(e,a.a.b.length),Ro(a.a,e)))}}}\n\tfunction Ub(a){a.a=Sd(he,Ru,0,64,7,1);a.d=Sd(ke,Ru,0,4,7,1);a.e=Sd(ke,Ru,0,16,7,1);a.d[0]=1732584193;a.d[1]=-271733879;a.d[2]=-1732584194;a.d[3]=271733878;a.b={l:0,m:0,h:0};a.c=64}\n\tfunction Ol(a,b,c,d){var e,f,g;if(d==0){wk(b,0,a,c,a.length-c)}else{g=32-d;a[a.length-1]=0;for(f=a.length-1;f>c;f--){a[f]|=b[f-c-1]>>>g;a[f-1]=b[f-c-1]<<d}}for(e=0;e<c;e++){a[e]=0}}\n\tfunction Sk(a){var b,c;if(a>-140737488355328&&a<140737488355328){if(a==0){return 0}b=a<0;b&&(a=-a);c=ge(uj(vj(a)/0.6931471805599453));(!b||a!=yj(2,c))&&++c;return c}return Tk(mh(a))}\n\tfunction tt(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,is(b,a.c))}a.a!=0&&(a.a>0?lk(d,'(+'+a.a+')'):lk(d,'('+a.a+')'));return d.a}\n\tfunction Xd(a,b,c,d,e,f){if(a===c){a=a.slice(b,b+e);b=0}for(var g=b,h=b+e;g<h;){var i=Math.min(g+10000,h);e=i-g;Array.prototype.splice.apply(c,[d,f?e:0].concat(a.slice(g,i)));g=i;d+=e}}\n\tfunction oh(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<=b.l)}\n\tfunction ph(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>=b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<b.l)}\n\tfunction qr(a,b,c,d){var e,f;f=b;e=f.c==null||a.b.Y(c.c,f.c)>0?1:0;while(f.a[e]!=c){f=f.a[e];e=a.b.Y(c.c,f.c)>0?1:0}f.a[e]=d;d.b=c.b;d.a[0]=c.a[0];d.a[1]=c.a[1];c.a[0]=null;c.a[1]=null}\n\tfunction At(b){var c,d;d=new Mu;Lu(d,'name',b.c);Lu(d,'symbol',b.b);Lu(d,'mf',tt(b.a));try{Ju(d,'mass',new hd(nt(b.a)))}catch(a){a=Hg(a);if(_d(a,4)){c=a;nb(c)}else throw Gg(a)}return d}\n\tfunction bq(){var a;if(Object.create&&Object.getOwnPropertyNames&&aq()){return (a=Object.create(null),a['__proto__']=42,Object.getOwnPropertyNames(a).length==0)?new cq:new Xp}return new eq}\n\tfunction kt(a,b){var c;if(b.c<b.d)throw new It('Syntax error: maxCount<minCount');c=mt(a,b.i);if(c)if(c.a==b.a){c.d+=b.d;c.c+=b.c;return}b.c==0&&b.d==0&&(a.e=true);mr(a.g,b,(ei(),ci))==null}\n\tfunction Oi(a){var b;if(!(b=Ni,!b&&(b=Ni=/^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$/),b.test(a))){throw new Dj('For input string: \"'+a+'\"')}return parseFloat(a)}\n\tfunction Al(a,b){il(this);this.e=a;if(lh(jh(b,{l:0,m:4193280,h:Tu}),{l:0,m:0,h:0})){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b)])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b),Ch(yh(b,32))])}}\n\tfunction Rl(a,b,c,d,e){var f,g,h;f=true;for(g=0;g<d;g++){f=f&c[g]==0}if(e==0){wk(c,d,a,0,b)}else{h=32-e;f=f&c[g]<<h==0;for(g=0;g<b-1;g++){a[g]=c[g+d]>>>e|c[g+d+1]<<h}a[g]=c[g+d]>>>e;++g}return f}\n\tfunction Cs(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f='';d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;h>-1.0E100&&(f+=g+', '+h+'\\r\\n')}return f}\n\tfunction Ds(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f=new mk;d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;lk(f,As(g)+', '+As(h*100)+'\\r\\n')}return f}\n\tfunction xh(a,b){var c,d,e;b&=63;if(b<22){c=a.l<<b;d=a.m<<b|a.l>>22-b;e=a.h<<b|a.m>>22-b}else if(b<44){c=0;d=a.l<<b-22;e=a.m<<b-22|a.l>>44-b}else{c=0;d=0;e=a.l<<b-44}return {l:c&Su,m:d&Su,h:e&Tu}}\n\tfunction zh(a,b){var c,d,e,f;b&=63;c=a.h&Tu;if(b<22){f=c>>>b;e=a.m>>b|c<<22-b;d=a.l>>b|a.m<<22-b}else if(b<44){f=0;e=c>>>b-22;d=a.m>>b-22|a.h<<44-b}else{f=0;e=0;d=c>>>b-44}return {l:d&Su,m:e&Su,h:f&Tu}}\n\tfunction Es(a){var b,c,d,e,f;c=a.d;c>~~(a.a/2)&&(c=~~(a.a/2));d=Td(je,[Ru,av],[28,0],7,[c,2],2);b=0;for(f=Fo(new Go(a));Fn(f.a.a);){e=Ko(f);d[b][0]=e.a;d[b][1]=to(a,e).a;++b;if(b==c)break}return d}\n\tfunction hu(a,b){eu();var c,d,e,f;f=2;for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=fu(c.a.i);if(!e){if(!b){return null}else{f+=b.a*c.b}}else{f+=e.a*c.b}}return new Ri(f/2)}\n\tfunction Fm(){Fm=Lg;Em=new Gm('UP',0);ym=new Gm('DOWN',1);xm=new Gm('CEILING',2);zm=new Gm('FLOOR',3);Cm=new Gm('HALF_UP',4);Am=new Gm('HALF_DOWN',5);Bm=new Gm('HALF_EVEN',6);Dm=new Gm('UNNECESSARY',7)}\n\tfunction ys(a,b){var c,d,e,f,g;c=mv;d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);e.T();g=e.U().a;g>c&&(c=g)}d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);f=e.T();g=e.U();mr(a,f,new Ri(g.a/c*b))}}\n\tfunction qm(a,b,c,d){mm();var e,f;e={l:0,m:0,h:0};for(f=0;f<c;f++){e=ih(th(jh(nh(b[f]),{l:Su,m:1023,h:0}),jh(nh(d),{l:Su,m:1023,h:0})),jh(nh(Ch(e)),{l:Su,m:1023,h:0}));a[f]=Ch(e);e=zh(e,32)}return Ch(e)}\n\tfunction St(a,b){var c;if(b<=0)throw new tb('Error: power='+b);if(b==1)return a;if(b==2){a.c=Ut(a,a);return a}--b;c=new Zt(a.d,a.c);while(b!=0){(b&1)!=0&&(a.c=Ut(a,c));b>>=1;b!=0&&(c.c=Ut(c,c))}return a}\n\tfunction wb(a){var b;if(a.c==null){b=ee(a.b)===ee(ub)?null:a.b;a.d=b==null?'null':ae(b)?b==null?null:b.name:de(b)?'String':ui(hb(b));a.a=a.a+': '+(ae(b)?b==null?null:b.message:b+'');a.c='('+a.d+') '+a.a}}\n\tfunction aq(){var a='__proto__';var b=Object.create(null);if(b[a]!==undefined){return false}var c=Object.getOwnPropertyNames(b);if(c.length!=0){return false}b[a]=42;if(b[a]!==42){return false}return true}\n\tfunction kp(a,b,c,d,e,f){var g,h,i,j;g=d-c;if(g<7){hp(b,c,d,f);return}i=c+e;h=d+e;j=i+(h-i>>1);kp(b,a,i,j,-e,f);kp(b,a,j,h,-e,f);if(f.Y(a[j-1],a[j])<=0){while(c<d){b[c++]=a[i++]}return}ip(a,i,j,h,b,c,d,f)}\n\tfunction jc(b,c){var d,e,f,g;for(e=0,f=b.length;e<f;e++){g=b[e];try{g[1]?g[0].ob()&&(c=ic(c,g)):g[0].ob()}catch(a){a=Hg(a);if(_d(a,9)){d=a;Ob(_d(d,38)?ee(d.b)===ee(ub)?null:d.b:d)}else throw Gg(a)}}return c}\n\tfunction Gp(a,b){var c,d,e,f;e=b==null?'0':''+yp(b);c=Cp(a,e);for(f=0;f<c.length;f++){d=c[f];if(xp(b,d.T())){c.length==1?(delete a.a[e],undefined):(c.splice(f,1),undefined);cn(a.b);return d.U()}}return null}\n\tfunction ik(a){var b,c,d,e;b=0;d=a.length;e=d-4;c=0;while(c<e){b=a.charCodeAt(c+3)+31*(a.charCodeAt(c+2)+31*(a.charCodeAt(c+1)+31*(a.charCodeAt(c)+31*b)));b=~~b;c+=4}while(c<d){b=b*31+Ij(a,c++)}b=~~b;return b}\n\tfunction sl(a,b){var c;if(b<0){throw new Zh('Negative exponent')}if(b==0){return cl}else if(b==1||ml(a,cl)||ml(a,gl)){return a}if(!wl(a,0)){c=1;while(!wl(a,c)){++c}return rl(Gl(c*b),sl(vl(a,c),b))}return um(a,b)}\n\tfunction Ks(a){var b,c,d,e,f;if(a.b.b==0){a.d=a.c;a.f=Ch(mh(zj(a.c)));return}b=1.7976931348623157E308;f=mv;c=true;for(e=Vn(new Wn(a.b));un(e.a);){d=$n(e);if(d.d>f||c){c=false;b=d.b;f=d.d}}a.d=b;a.f=Ch(mh(zj(b)))}\n\tfunction Kg(a,b,c){var d=Ig;var e=Jg;var f=Mg;var g=d[a];var h=f(g);if(g&&!h){_=g}else{_=d[a]=!b?{}:e(b);_.cM=c;_.constructor=_;!b&&(_.tM=Qg)}for(var i=3;i<arguments.length;++i){arguments[i].prototype=_}h&&(_.cZ=h)}\n\tfunction is(a,b){var c,d;c=a.i;!!b&&fn(b,a.i)&&Oj(en(b,a.i).e,'^[A-Z][a-z]?\\\\{.*\\\\}$')&&(c=en(b,a.i).e);d='';a.a!=0?(d+='['+a.a+c+']'):(d+=c);if(a.c==1&&a.d==1)return d;if(a.c==a.d)return d+a.c;return d+a.d+'-'+a.c}\n\tfunction Ed(a){if(!a){return cd(),bd}var b=a.valueOf?a.valueOf():a;if(b!==a){var c=Ad[typeof b];return c?c(b):Hd(typeof b)}else if(a instanceof Array||a instanceof $wnd.Array){return new Pc(a)}else{return new ud(a)}}\n\tfunction Vb(a,b,c,d){while(true){if(d>=a.c){wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),a.c);Wb(a,a.a);a.b=ih(a.b,nh(a.c));c+=a.c;d-=a.c;a.c=64}else{wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),d);a.b=ih(a.b,nh(d));a.c-=d;break}}}\n\tfunction kj(a){var b,c,d;if(a<0){return 0}else if(a==0){return 32}else{d=-(a>>16);b=d>>16&16;c=16-b;a=a>>b;d=a-256;b=d>>16&8;c+=b;a<<=b;d=a-4096;b=d>>16&4;c+=b;a<<=b;d=a-16384;b=d>>16&2;c+=b;a<<=b;d=a>>14;b=d&~(d>>1);return c+2-b}}\n\tfunction Cb(b){var c=(!Ab&&(Ab=Db()),Ab);var d=b.replace(/[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]/g,function(a){return Bb(a,c)});return '\"'+d+'\"'}\n\tfunction wl(a,b){var c,d,e;if(b==0){return (a.a[0]&1)!=0}if(b<0){throw new Zh('Negative bit address')}e=b>>5;if(e>=a.d){return a.e<0}c=a.a[e];b=1<<(b&31);if(a.e<0){d=ol(a);if(e<d){return false}else d==e?(c=-c):(c=~c)}return (c&b)!=0}\n\tfunction Bu(b,c){var d,e,f,g;f=new Sq;try{for(e=Fo(new Go(b.g));Fn(e.a.a);){d=Ko(e);d.c=xj(d.c,ge(c/d.e));if(d.d>d.c)return null;Rq(f,new Xs(d))}g=Vo(f.a);jp(g,0,g.length,null);np(f,g)}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}return f}\n\tfunction im(a,b,c,d,e){var f,g;f={l:0,m:0,h:0};for(g=0;g<e;g++){f=ih(f,Ah(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}\n\tfunction ot(a){var b,c,d,e;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.e*fs(b)}return e=isNaN(d*dv)?d*dv:Wi(d*dv)?d*dv:d*dv==0?d*dv:Bh(mh(Math.round(d*dv))),e/dv}\n\tfunction cc(a){var b;b=Sd(he,Ru,0,8,7,1);b[0]=fe(Ch(a));a=zh(a,8);b[1]=fe(Ch(a));a=zh(a,8);b[2]=fe(Ch(a));a=zh(a,8);b[3]=fe(Ch(a));a=zh(a,8);b[4]=fe(Ch(a));a=zh(a,8);b[5]=fe(Ch(a));a=zh(a,8);b[6]=fe(Ch(a));a=zh(a,8);b[7]=fe(Ch(a));return b}\n\tfunction yh(a,b){var c,d,e,f,g;b&=63;c=a.h;d=(c&Uu)!=0;d&&(c|=-1048576);if(b<22){g=c>>b;f=a.m>>b|c<<22-b;e=a.l>>b|a.m<<22-b}else if(b<44){g=d?Tu:0;f=c>>b-22;e=a.m>>b-22|c<<44-b}else{g=d?Tu:0;f=d?Su:0;e=c>>b-44}return {l:e&Su,m:f&Su,h:g&Tu}}\n\tfunction Hi(a){if(a.B()){var b=a.c;b.C()?(a.k='['+b.j):!b.B()?(a.k='[L'+b.w()+';'):(a.k='['+b.w());a.b=b.v()+'[]';a.i=b.A()+'[]';return}var c=a.f;var d=a.d;d=d.split('/');a.k=Ki('.',[c,Ki('$',d)]);a.b=Ki('.',[c,Ki('.',d)]);a.i=d[d.length-1]}\n\tfunction bt(a){var b,c,d;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=ge(d+pt(b)*b.f)}return d}\n\tfunction ft(a){var b,c,d;c=new In(a.d);d=new nk('');c.a<c.c.G()&&(d=new nk((Dc(c.a<c.c.G()),lb(c.c.R(c.b=c.a++)))));while(c.a<c.c.G()){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));b.f==1?lk(d,'.'+tt(b)):b.f==0?lk(d,'.n'+tt(b)):lk(d,'.'+b.f+tt(b))}return d.a}\n\tfunction ts(a,b){var c,d,e,f,g,h;e=new Fs;d=(new Fr(a)).a.W();while(Fn(d.a)){f=d.b=Gn(d.a);g=f.T().a;h=f.U().a;Ar(d);g=(isNaN(g/b)?g/b:Wi(g/b)?g/b:g/b==0?g/b:Bh(mh(Math.round(g/b))))*b;c=to(e,new Ri(g));!!c&&(h+=c.a);mr(e,new Ri(g),new Ri(h))}rs(a,e)}\n\tfunction mh(a){var b,c,d,e,f;if(isNaN(a)){return Jh(),Ih}if(a<Xu){return Jh(),Gh}if(a>=9223372036854775807){return Jh(),Fh}e=false;if(a<0){e=true;a=-a}d=0;if(a>=Wu){d=ge(a/Wu);a-=d*Wu}c=0;if(a>=Vu){c=ge(a/Vu);a-=c*Vu}b=ge(a);f=Ug(b,c,d);e&&$g(f);return f}\n\tfunction bk(a){var b,c,d,e,f,g,h;g=a.length;b=0;for(f=0;f<g;){d=li(a,f,a.length);f+=d>=Zu?2:1;d<128?++b:d<2048?(b+=2):d<Zu?(b+=3):d<2097152?(b+=4):d<67108864&&(b+=5)}c=Sd(he,Ru,0,b,7,1);h=0;for(e=0;e<g;){d=li(a,e,a.length);e+=d>=Zu?2:1;h+=_j(c,h,d)}return c}\n\tfunction Qs(a,b,c){var d,e,f,g,h,i,j;this.e=c;this.g=b;this.a=a.a;this.b=new zp;g=Pj(c,'[^0-9,\\\\.]','');i=Qj(g,',',0);d=0;for(f=Vn(new Wn(a.b));un(f.a);){e=$n(f);j=0;i.length>d&&(j=Oi(i[d]));h=new Ct(e.c,e.b,j,e.a);gn(this.b,oj(e.c),h);++d}Js(this);Ks(this)}\n\tfunction Bt(b,c,d,e,f){var g;this.b=b;this.c=c;try{this.a=new ut(d,e,f)}catch(a){a=Hg(a);if(_d(a,6)){g=a;\"Group creation error: '\"+b+\"'='\"+d+\"': \"+ob(g);this.a=new ut('',e,f)}else throw Gg(a)}if(this.a.e)throw new It('Range formulas not allowed for groups')}\n\tfunction Vl(a){var b,c,d;if(ph(a,{l:0,m:0,h:0})){c=kh(a,{l:1755648,m:238,h:0});d=sh(a,{l:1755648,m:238,h:0})}else{b=zh(a,1);c=kh(b,{l:877824,m:119,h:0});d=sh(b,{l:877824,m:119,h:0});d=ih(xh(d,1),jh(a,{l:1,m:0,h:0}))}return wh(xh(d,32),jh(c,{l:Su,m:1023,h:0}))}\n\tfunction ds(a,b){if(es(a,b))return 0;if(Jj(a.i,'C')){if(Jj(b.i,'C'))return a.a-b.a;return -1}if(Jj(a.i,'H')){if(Jj(b.i,'C'))return 1;if(Jj(b.i,'H'))return a.a-b.a;return -1}if(Jj(b.i,'H')||Jj(b.i,'C')){return 1}if(Jj(a.i,b.i))return a.a-b.a;return Zj(a.i,b.i)}\n\tfunction nm(a,b){mm();var c,d,e,f,g,h,i,j,k;if(b.d>a.d){h=a;a=b;b=h}if(b.d<63){return tm(a,b)}g=(a.d&-2)<<4;j=vl(a,g);k=vl(b,g);d=gm(a,tl(j,g));e=gm(b,tl(k,g));i=nm(j,k);c=nm(d,e);f=nm(gm(j,d),gm(e,k));f=bm(bm(f,i),c);f=tl(f,g);i=tl(i,g<<1);return bm(bm(i,f),c)}\n\tfunction ah(a){var b,c,d;c=a.l;if((c&c-1)!=0){return -1}d=a.m;if((d&d-1)!=0){return -1}b=a.h;if((b&b-1)!=0){return -1}if(b==0&&d==0&&c==0){return -1}if(b==0&&d==0&&c!=0){return lj(c)}if(b==0&&d!=0&&c==0){return lj(d)+22}if(b!=0&&d==0&&c==0){return lj(b)+44}return -1}\n\tfunction Pg(a){var b=this;if(a=='$wnd'){return $wnd}else if(a===''){return b}if(a.substring(0,5)=='$wnd.'){b=$wnd;a=a.substring(5)}var c=a.split('.');!(c[0] in b)&&b.execScript&&b.execScript('var '+c[0]);for(var d;c.length&&(d=c.shift());){b[d]?(b=b[d]):(b=b[d]={})}return b}\n\tfunction Kk(a,b){var c;Fc(b);c=5-a.e;if(c==0){return a}if(c>0){if(c<Dk.length&&a.a+Ek[ge(c)]<54){return new Pk(a.f*Dk[ge(c)])}return new Rk(sm((!a.c&&(a.c=Kl(a.f)),a.c),ge(c)))}if(a.a<54&&-c<Dk.length){return Wk(a.f,Dk[ge(-c)],b)}return Vk((!a.c&&(a.c=Kl(a.f)),a.c),vm(-c),b)}\n\tfunction Ns(a){var b,c,d;d='Element: '+a.a+' - symbol: '+a.g+' - exact mass: '+a.d+' - mass: '+a.c+' - name: '+a.e+' - nb isotope: '+a.b.b+'\\r\\n';for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+='Number: '+b.c+' - mass: '+b.b+' - percentage: '+b.d+' - symbol: '+b.a+'\\r\\n'}return d}\n\tfunction ls(a,b,c,d){var e;if(c>d)throw new It('Error: minCount>maxCount');if(b==0){this.d=c;this.c=d;this.e=Ls(a);this.f=a.f;this.a=0;this.i=a.g;this.b=a.c;return}e=dn(a.b,new fj(b));if(!e)throw new It('Isotope not found');this.a=b;this.i=a.g;this.b=e.b;this.e=e.b;this.d=c;this.c=d}\n\tfunction Ql(a,b){var c,d,e,f,g;d=b>>5;b&=31;if(d>=a.d){return a.e<0?(hl(),bl):(hl(),gl)}f=a.d-d;e=Sd(ke,Ru,0,f+1,7,1);Rl(e,f,a.a,d,b);if(a.e<0){for(c=0;c<d&&a.a[c]==0;c++);if(c<d||b>0&&a.a[c]<<32-b!=0){for(c=0;c<f&&e[c]==-1;c++){e[c]=0}c==f&&++f;++e[c]}}g=new zl(a.e,f,e);kl(g);return g}\n\tfunction kr(a,b,c,d){var e,f;if(!b){return c}else{e=a.b.Y(c.c,b.c);if(e==0){d.d=co(b,c.d);d.b=true;return b}f=e<0?0:1;b.a[f]=kr(a,b.a[f],c,d);if(lr(b.a[f])){if(lr(b.a[1-f])){b.b=true;b.a[0].b=false;b.a[1].b=false}else{lr(b.a[f].a[f])?(b=sr(b,1-f)):lr(b.a[f].a[1-f])&&(b=rr(b,1-f))}}}return b}\n\tfunction Jc(a,b){var c,d,e,f;a=''+a;c=new tk(a.length+16*b.length);f=0;d=0;while(d<b.length){e=a.indexOf('%s',f);if(e==-1){break}qk(c,a.substr(f,e-f));pk(c,b[d++]);f=e+2}qk(c,Wj(a,f,a.length-f));if(d<b.length){c.a+=' [';pk(c,b[d++]);while(d<b.length){c.a+=', ';pk(c,b[d++])}c.a+=']'}return c.a}\n\tfunction hl(){hl=Lg;var a;cl=new yl(1,1);el=new yl(1,10);gl=new yl(0,0);bl=new yl(-1,1);dl=Vd(Rd(jf,1),Ru,5,0,[gl,cl,new yl(1,2),new yl(1,3),new yl(1,4),new yl(1,5),new yl(1,6),new yl(1,7),new yl(1,8),new yl(1,9),el]);fl=Sd(jf,Ru,5,32,0,1);for(a=0;a<fl.length;a++){fl[a]=Ll(xh({l:1,m:0,h:0},a))}}\n\tfunction eu(){eu=Lg;du=new zp;hn(du,'O',oj(0));hn(du,'N',oj(1));hn(du,'H',oj(-1));hn(du,'C',oj(2));hn(du,'F',oj(-1));hn(du,'Cl',oj(-1));hn(du,'Br',oj(-1));hn(du,'I',oj(-1));hn(du,'S',oj(0));hn(du,'P',oj(1));hn(du,'Li',oj(-1));hn(du,'Na',oj(-1));hn(du,'K',oj(-1));hn(du,'Ca',oj(0));hn(du,'Mg',oj(0))}\n\tfunction vu(a,b,c){var d,e,f,g,h,i,j,k;h=new Mu;k=a.c.gb('referenceVersion');k!=null&&!Jj(k,'')&&(c=(Ht(),Ht(),Ft));if(c){i=new Gu;Ju(h,'elements',i.a);for(e=Vn(new Wn(c));un(e.a);){d=$n(e);Fu(i,Ms(d).a)}}if(b){j=new Gu;Ju(h,'groups',j.a);for(g=Vn(new Wn(b));un(g.a);){f=$n(g);Fu(j,At(f).a)}}return h}\n\tfunction et(b){var c,d,e;e=Qj(b,'/',0);if(e.length!=2)throw new It('Syntax error: bad fraction syntax: '+b);try{c=Pi(e[1]);if(c==0)throw new It('Syntax error: divide by zero: '+b);d=Pi(e[0]);return d/c}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad fraction syntax: '+b)}else throw Gg(a)}}\n\tfunction mm(){mm=Lg;var a,b;jm=Sd(jf,Ru,5,32,0,1);km=Sd(jf,Ru,5,32,0,1);lm=Vd(Rd(ke,1),Ru,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu]);a={l:1,m:0,h:0};for(b=0;b<=18;b++){jm[b]=Ll(a);km[b]=Ll(xh(a,b));a=th(a,{l:5,m:0,h:0})}for(;b<km.length;b++){jm[b]=rl(jm[b-1],jm[1]);km[b]=rl(km[b-1],(hl(),el))}}\n\tfunction pm(a,b,c,d,e){var f,g,h,i;if(ee(a)===ee(b)&&d==e){wm(a,d,c);return}for(h=0;h<d;h++){g={l:0,m:0,h:0};f=a[h];for(i=0;i<e;i++){g=ih(ih(th(jh(nh(f),{l:Su,m:1023,h:0}),jh(nh(b[i]),{l:Su,m:1023,h:0})),jh(nh(c[h+i]),{l:Su,m:1023,h:0})),jh(nh(Ch(g)),{l:Su,m:1023,h:0}));c[h+i]=Ch(g);g=zh(g,32)}c[h+e]=Ch(g)}}\n\tfunction _s(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d+=nt(b)*b.f}return e=isNaN(d*cv)?d*cv:Wi(d*cv)?d*cv:d*cv==0?d*cv:Bh(mh(Math.round(d*cv))),e/cv}\n\tfunction at(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');b=0;for(d=new In(a.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));b+=ot(c)*c.f}return e=isNaN(b*dv)?b*dv:Wi(b*dv)?b*dv:b*dv==0?b*dv:Bh(mh(Math.round(b*dv))),e/dv}\n\tfunction rm(a,b){var c,d,e,f,g,h,i,j,k;j=a.e;if(j==0){return hl(),gl}d=a.d;c=a.a;if(d==1){e=th(jh(nh(c[0]),{l:Su,m:1023,h:0}),jh(nh(b),{l:Su,m:1023,h:0}));i=Ch(e);g=Ch(zh(e,32));return g==0?new yl(j,i):new zl(j,2,Vd(Rd(ke,1),Ru,0,7,[i,g]))}h=d+1;f=Sd(ke,Ru,0,h,7,1);f[d]=qm(f,c,d,b);k=new zl(j,h,f);kl(k);return k}\n\tfunction tm(a,b){var c,d,e,f,g,h,i,j,k,l,m;d=a.d;f=b.d;h=d+f;i=a.e!=b.e?-1:1;if(h==2){k=th(jh(nh(a.a[0]),{l:Su,m:1023,h:0}),jh(nh(b.a[0]),{l:Su,m:1023,h:0}));m=Ch(k);l=Ch(zh(k,32));return l==0?new yl(i,m):new zl(i,2,Vd(Rd(ke,1),Ru,0,7,[m,l]))}c=a.a;e=b.a;g=Sd(ke,Ru,0,h,7,1);om(c,d,e,f,g);j=new zl(i,h,g);kl(j);return j}\n\tfunction Il(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;m=b.length;i=m;if(b.charCodeAt(0)==45){k=-1;l=1;--m}else{k=1;l=0}f=(Ul(),Tl)[10];e=~~(m/f);p=m%f;p!=0&&++e;h=Sd(ke,Ru,0,e,7,1);c=Sl[8];g=0;n=l+(p==0?f:p);for(o=l;o<i;o=n,n=n+f){d=Pi(b.substr(o,n-o));j=(mm(),qm(h,h,g,c));j+=fm(h,g,d);h[g++]=j}a.e=k;a.d=g;a.a=h;kl(a)}\n\tfunction Dh(a){var b,c,d,e,f;if(a.l==0&&a.m==0&&a.h==0){return '0'}if(a.h==Uu&&a.m==0&&a.l==0){return '-9223372036854775808'}if(a.h>>19!=0){return '-'+Dh(uh(a))}c=a;d='';while(!(c.l==0&&c.m==0&&c.h==0)){e=nh(Yu);c=Vg(c,e,true);b=''+Ch(Rg);if(!(c.l==0&&c.m==0&&c.h==0)){f=9-b.length;for(;f>0;f--){b='0'+b}}d=b+d}return d}\n\tfunction Ms(a){var b,c,d,e,f,g;d=new Mu;Lu(d,'symbol',a.g);Ju(d,'monoisotopicMass',new hd(a.d));Ju(d,'mass',new hd(a.c));Lu(d,'name',a.e);Ju(d,'atomicNumber',new hd(a.a));f=new Gu;Ju(d,'isotopes',f.a);for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);e=(g=new Mu,Ju(g,'mass',new hd(b.b)),Ju(g,'percentage',new hd(b.d)),g);Fu(f,e.a)}return d}\n\tfunction Au(a,b){var c,d,e,f;f='';for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=gs(c.a);(e==null?!!Dp(b.a,null):!(b.c.gb(e)===undefined))&&(Jj((e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c.substr(0,1),'{')?(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c):(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).b));c.b>1?(f+=e+c.b):c.b>0&&(f+=e)}return f}\n\tfunction Lt(a){var b,c,d,e,f;c=true;for(e=new In(a.d.d);e.a<e.c.G();){d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(c){a.e=new _t(a,d,a.c);xs(a.e.c,d.f);b=a.e;c=false}else{b=new _t(a,d,a.c);xs(b.c,d.f);rs(a.e.c,b.c)}if(d.b!=''){f=new Ri(vs(b.c));_m(a.g,f)?gn(a.g,f,dn(a.g,f)+','+d.b):gn(a.g,f,d.b)}}if(a.e.c.d==0)throw new It('Isotopic distribution: empty table')}\n\tfunction Pi(a){var b,c,d,e,f;if(a==null){throw new Dj('null')}d=a.length;e=d>0&&(a.charCodeAt(0)==45||a.charCodeAt(0)==43)?1:0;for(b=e;b<d;b++){if(mi(a.charCodeAt(b))==-1){throw new Dj('For input string: \"'+a+'\"')}}f=parseInt(a,10);c=f<$u;if(isNaN(f)){throw new Dj('For input string: \"'+a+'\"')}else if(c||f>Ou){throw new Dj('For input string: \"'+a+'\"')}return f}\n\tfunction ll(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;f=b.e;if(f==0){throw new Zh('BigInteger divide by zero')}e=b.d;d=b.a;if(e==1){return Zl(a,d[0],f)}m=a.a;n=a.d;c=n!=e?n>e?1:-1:em(m,d,n);if(c<0){return Vd(Rd(jf,1),Ru,5,0,[gl,a])}o=a.e;h=n-e+1;i=o==f?1:-1;g=Sd(ke,Ru,0,h,7,1);j=Yl(g,h,m,n,d,e);k=new zl(i,h,g);l=new zl(o,e,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\n\tfunction Ik(a,b){var c,d,e,f,g,h;e=Mk(a);h=Mk(b);if(e==h){if(a.e==b.e&&a.a<54&&b.a<54){return a.f<b.f?-1:a.f>b.f?1:0}d=a.e-b.e;c=(a.d>0?a.d:uj((a.a-1)*ev)+1)-(b.d>0?b.d:uj((b.a-1)*ev)+1);if(c>d+1){return e}else if(c<d-1){return -e}else{f=(!a.c&&(a.c=Kl(a.f)),a.c);g=(!b.c&&(b.c=Kl(b.f)),b.c);d<0?(f=rl(f,vm(-d))):d>0&&(g=rl(g,vm(d)));return jl(f,g)}}else return e<h?-1:1}\n\tfunction Zl(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;m=a.a;n=a.d;o=a.e;if(n==1){d=jh(nh(m[0]),{l:Su,m:1023,h:0});e=jh(nh(b),{l:Su,m:1023,h:0});f=kh(d,e);i=sh(d,e);o!=c&&(f=uh(f));o<0&&(i=uh(i));return Vd(Rd(jf,1),Ru,5,0,[Ll(f),Ll(i)])}h=o==c?1:-1;g=Sd(ke,Ru,0,n,7,1);j=Vd(Rd(ke,1),Ru,0,7,[$l(g,m,n,b)]);k=new zl(h,n,g);l=new zl(o,1,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\n\tfunction am(a,b,c,d,e){var f,g,h;f={l:0,m:0,h:0};g={l:0,m:0,h:0};for(h=0;h<d;h++){f=(mm(),ih(th(jh(nh(c[h]),{l:Su,m:1023,h:0}),jh(nh(e),{l:Su,m:1023,h:0})),jh(nh(Ch(f)),{l:Su,m:1023,h:0})));g=ih(Ah(jh(nh(a[b+h]),{l:Su,m:1023,h:0}),jh(f,{l:Su,m:1023,h:0})),g);a[b+h]=Ch(g);g=yh(g,32);f=zh(f,32)}g=ih(Ah(jh(nh(a[b+d]),{l:Su,m:1023,h:0}),f),g);a[b+d]=Ch(g);return Ch(yh(g,32))}\n\tfunction _l(a,b){var c,d,e,f,g;d=jh(nh(b),{l:Su,m:1023,h:0});if(ph(a,{l:0,m:0,h:0})){f=kh(a,d);g=sh(a,d)}else{c=zh(a,1);e=nh(b>>>1);f=kh(c,e);g=sh(c,e);g=ih(xh(g,1),jh(a,{l:1,m:0,h:0}));if((b&1)!=0){if(rh(f,g)){g=Ah(g,f)}else{if(rh(Ah(f,g),d)){g=ih(g,Ah(d,f));f=Ah(f,{l:1,m:0,h:0})}else{g=ih(g,Ah(xh(d,1),f));f=Ah(f,{l:2,m:0,h:0})}}}}return wh(xh(g,32),jh(f,{l:Su,m:1023,h:0}))}\n\tfunction lu(a,b,c){ku();var d,e,f,g,h,i,j,k,l,m,n,o;i=~~(~~((b.b-1)/b.a)/2);h=a[0][0];g=a[a.length-1][0];k=Ch(mh(zj((g-h)/c*b.a)))+2*b.a*i+1;o=Sd(je,av,0,k,7,1);for(m=0,n=a.length;m<n;++m){l=a[m];d=Ch(mh(zj((l[0]-h)/c*b.a+b.a*i)));for(f=0;f<b.c.length;f++){o[d+f-b.a*i]+=b.c[f]*l[1]}}j=Td(je,[Ru,av],[28,0],7,[k,2],2);for(e=0;e<k;e++){j[e][0]=(e/b.a-i)*c+h;j[e][1]=o[e]}return j}\n\tfunction $k(a,b,c){var d;d=0;switch(c.b){case 7:if(b!=0){throw new Zh('Rounding necessary')}break;case 0:d=b==0?0:b<0?-1:1;break;case 2:d=(b==0?0:b<0?-1:1)>0?b==0?0:b<0?-1:1:0;break;case 3:d=(b==0?0:b<0?-1:1)<0?b==0?0:b<0?-1:1:0;break;case 4:(b<0?-b:b)>=5&&(d=b==0?0:b<0?-1:1);break;case 5:(b<0?-b:b)>5&&(d=b==0?0:b<0?-1:1);break;case 6:(b<0?-b:b)+a>5&&(d=b==0?0:b<0?-1:1);}return d}\n\tfunction zt(a,b,c,d){var e,f,g,h,i,j,k,l,m;if(b.indexOf(',')==-1)throw new It('Syntax error: combinatorial');if(c!=d)throw new It('Combinatorial range formulae are not allowed');j=Qj(b,',',0);i=0;h=j.length;m=new nk('{');for(g=0;g<h-1;g++){l=Tj(j[g]);f=new ut(l,a.c,a.d);lk(m,st(f)+',');i+=nt(f)}k=Tj(j[h-1]);e=new ut(k,a.c,a.d);lk(m,st(e)+'}');i+=nt(e);i/=h;kt(a,new js(m.a,i,c,d))}\n\tfunction Yg(a,b,c,d,e,f){var g,h,i,j,k,l,m;j=_g(b)-_g(a);g=xh(b,j);i=Ug(0,0,0);while(j>=0){h=gh(a,g);if(h){j<22?(i.l|=1<<j,undefined):j<44?(i.m|=1<<j-22,undefined):(i.h|=1<<j-44,undefined);if(a.l==0&&a.m==0&&a.h==0){break}}k=g.m;l=g.h;m=g.l;bh(g,l>>>1);g.m=k>>>1|(l&1)<<21;g.l=m>>>1|(k&1)<<21;--j}c&&$g(i);if(f){if(d){Rg=uh(a);e&&(Rg=Ah(Rg,(Jh(),Hh)))}else{Rg=Ug(a.l,a.m,a.h)}}return i}\n\tfunction Vh(){var a=navigator.userAgent.toLowerCase();var b=$doc.documentMode;if(function(){return a.indexOf('webkit')!=-1}())return 'safari';if(function(){return a.indexOf('msie')!=-1&&b>=10&&b<11}())return 'ie10';if(function(){return a.indexOf('msie')!=-1&&b>=9&&b<11}())return 'ie9';if(function(){return a.indexOf('msie')!=-1&&b>=8&&b<11}())return 'ie8';if(function(){return a.indexOf('gecko')!=-1||b>=11}())return 'gecko1_8';return 'unknown'}\n\tfunction vm(a){mm();var b,c,d,e;b=ge(a);if(a<km.length){return km[b]}else if(a<=50){return sl((hl(),el),b)}else if(a<=1000){return tl(sl(jm[1],b),b)}if(a>cv){throw new Zh('power of ten too big')}if(a<=Ou){return tl(sl(jm[1],b),b)}d=sl(jm[1],Ou);e=d;c=mh(a-Ou);b=ge(a%Ou);while(oh(c,{l:Su,m:511,h:0})){e=rl(e,d);c=Ah(c,{l:Su,m:511,h:0})}e=rl(e,sl(jm[1],b));e=tl(e,Ou);c=mh(a-Ou);while(oh(c,{l:Su,m:511,h:0})){e=tl(e,Ou);c=Ah(c,{l:Su,m:511,h:0})}e=tl(e,b);return e}\n\tfunction Qj(l,a,b){var c=new RegExp(a,'g');var d=[];var e=0;var f=l;var g=null;while(true){var h=c.exec(f);if(h==null||f==''||e==b-1&&b>0){d[e]=f;break}else{d[e]=f.substring(0,h.index);f=f.substring(h.index+h[0].length,f.length);c.lastIndex=0;if(g==f){d[e]=f.substring(0,1);f=f.substring(1)}g=f;e++}}if(b==0&&l.length>0){var i=d.length;while(i>0&&d[i-1]==''){--i}i<d.length&&d.splice(i,d.length-i)}var j=Vj(d.length);for(var k=0;k<d.length;++k){j[k]=d[k]}return j}\n\tfunction gm(a,b){var c,d,e,f,g,h,i,j,k,l;g=a.e;i=b.e;if(i==0){return a}if(g==0){return b.e==0?b:new zl(-b.e,b.d,b.a)}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});g<0&&(c=uh(c));i<0&&(d=uh(d));return Ll(Ah(c,d))}e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==-1){l=-i;k=g==i?hm(b.a,h,a.a,f):cm(b.a,h,a.a,f)}else{l=g;if(g==i){if(e==0){return hl(),gl}k=hm(a.a,f,b.a,h)}else{k=cm(a.a,f,b.a,h)}}j=new zl(l,k.length,k);kl(j);return j}\n\tfunction $l(a,b,c,d){var e,f,g,h,i,j,k;j={l:0,m:0,h:0};f=jh(nh(d),{l:Su,m:1023,h:0});for(h=c-1;h>=0;h--){k=wh(xh(j,32),jh(nh(b[h]),{l:Su,m:1023,h:0}));if(ph(k,{l:0,m:0,h:0})){i=kh(k,f);j=sh(k,f)}else{e=zh(k,1);g=nh(d>>>1);i=kh(e,g);j=sh(e,g);j=ih(xh(j,1),jh(k,{l:1,m:0,h:0}));if((d&1)!=0){if(rh(i,j)){j=Ah(j,i)}else{if(rh(Ah(i,j),f)){j=ih(j,Ah(f,i));i=Ah(i,{l:1,m:0,h:0})}else{j=ih(j,Ah(xh(f,1),i));i=Ah(i,{l:2,m:0,h:0})}}}}a[h]=Ch(jh(i,{l:Su,m:1023,h:0}))}return Ch(j)}\n\tfunction wk(a,b,c,d,e){var f,g,h,i,j,k,l,m,n;Gc(a,'src');Gc(c,'dest');m=hb(a);i=hb(c);Ac((m.e&4)!=0,'srcType is not an array');Ac((i.e&4)!=0,'destType is not an array');l=m.c;g=i.c;Ac((l.e&1)!=0?l==g:(g.e&1)==0,\"Array types don't match\");n=a.length;j=c.length;if(b<0||d<0||e<0||b+e>n||d+e>j){throw new $h}if(((l.e&1)==0||(l.e&4)!=0)&&m!=i){k=a;f=c;if(ee(a)===ee(c)&&b<d){b+=e;for(h=d+e;h-->d;){f[h]=k[--b]}}else{for(h=d+e;d<h;){f[d++]=k[b++]}}}else e>0&&Xd(a,b,c,d,e,true)}\n\tfunction Ul(){Ul=Lg;Sl=Vd(Rd(ke,1),Ru,0,7,[$u,1162261467,gv,1220703125,362797056,1977326743,gv,387420489,Yu,214358881,429981696,815730721,1475789056,170859375,268435456,410338673,612220032,893871739,1280000000,1801088541,113379904,148035889,191102976,244140625,308915776,387420489,481890304,594823321,729000000,887503681,gv,1291467969,1544804416,1838265625,60466176]);Tl=Vd(Rd(ke,1),Ru,0,7,[-1,-1,31,19,15,13,11,11,10,9,9,8,8,8,8,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5])}\n\tfunction Nk(a){var b,c,d,e,f;if(a.g!=null){return a.g}if(a.a<32){a.g=Wl(mh(a.f),ge(a.e));return a.g}e=Xl((!a.c&&(a.c=Kl(a.f)),a.c),0);if(a.e==0){return e}b=(!a.c&&(a.c=Kl(a.f)),a.c).e<0?2:1;c=e.length;d=-a.e+c-b;f=new sk;f.a+=e;if(a.e>0&&d>=-6){if(d>=0){rk(f,c-ge(a.e),'.')}else{f.a=Sj(f.a,0,b-1)+'0.'+Rj(f.a,b-1);rk(f,b+1,dk(Ak,0,-ge(d)-1))}}else{if(c-b>=1){f.a=Sj(f.a,0,b)+'.'+Rj(f.a,b);++c}f.a=Sj(f.a,0,c)+'E'+Rj(f.a,c);d>0&&rk(f,++c,'+');rk(f,++c,''+Dh(mh(d)))}a.g=f.a;return a.g}\n\tfunction Nt(b){var c,d,e;if(b.e.c.d==0)throw new tb('No isotopic distribution data');mr(b.e.c,new Ri(Ao(er(b.e.c)).a-2),new Ri(0));mr(b.e.c,new Ri(Ao(fr(b.e.c)).a+2),new Ri(0));d=new zp;hn(d,'FWHM',b.b+'');hn(d,'Threshold',b.a+'');try{if(b.d.d.b.length==1){e=Ro(b.d.d,0);hn(d,'Monoisotopic mass',ot(e)+'');hn(d,'Molecular weight',nt(e)+'');!!gu(e,null)&&hn(d,'Unsaturation',gu(e,null)+'')}}catch(a){a=Hg(a);if(_d(a,6)){c=a;nb(c)}else throw Gg(a)}return Bs(b.e.c,b.d+' - fwhm: '+b.b,b.g,d)}\n\tfunction Vk(a,b,c){var d,e,f,g,h,i,j;f=ll(a,b);g=f[0];i=f[1];if(i.e==0){return new Rk(g)}j=a.e*b.e;if(Ml(b)<54){h=ql(i);e=ql(b);d=qh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?-1:oh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?1:0;d=$k(wl(g,0)?1:0,j*(5+d),c)}else{d=jl(ul(i.e<0?new zl(1,i.d,i.a):i),b.e<0?new zl(1,b.d,b.a):b);d=$k(wl(g,0)?1:0,j*(5+d),c)}if(d!=0){if(Ml(g)<54){return al(ih(ql(g),nh(d)))}g=bm(g,Ll(nh(d)));return new Rk(g)}return new Rk(g)}\n\tfunction _j(a,b,c){if(c<128){a[b]=fe(c&127);return 1}else if(c<2048){a[b++]=fe(c>>6&31|192);a[b]=fe(c&63|128);return 2}else if(c<Zu){a[b++]=fe(c>>12&15|224);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 3}else if(c<2097152){a[b++]=fe(c>>18&7|240);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 4}else if(c<67108864){a[b++]=fe(c>>24&3|248);a[b++]=fe(c>>18&63|128);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 5}throw new cj('Character out of range: '+c)}\n\tfunction bm(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;g=a.e;i=b.e;if(g==0){return b}if(i==0){return a}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});if(g==i){k=ih(c,d);o=Ch(k);n=Ch(zh(k,32));return n==0?new yl(g,o):new zl(g,2,Vd(Rd(ke,1),Ru,0,7,[o,n]))}return Ll(g<0?Ah(d,c):Ah(c,d))}else if(g==i){m=g;l=f>=h?cm(a.a,f,b.a,h):cm(b.a,h,a.a,f)}else{e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==0){return hl(),gl}if(e==1){m=g;l=hm(a.a,f,b.a,h)}else{m=i;l=hm(b.a,h,a.a,f)}}j=new zl(m,l.length,l);kl(j);return j}\n\tfunction dm(a,b,c,d,e){var f,g;f=ih(jh(nh(b[0]),{l:Su,m:1023,h:0}),jh(nh(d[0]),{l:Su,m:1023,h:0}));a[0]=Ch(f);f=yh(f,32);if(c>=e){for(g=1;g<e;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}else{for(g=1;g<c;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<e;g++){f=ih(f,jh(nh(d[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}vh(f,{l:0,m:0,h:0})&&(a[g]=Ch(f))}\n\tfunction wm(a,b,c){var d,e,f,g,h;for(f=0;f<b;f++){d={l:0,m:0,h:0};for(h=f+1;h<b;h++){d=ih(ih(th(jh(nh(a[f]),{l:Su,m:1023,h:0}),jh(nh(a[h]),{l:Su,m:1023,h:0})),jh(nh(c[f+h]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[f+h]=Ch(d);d=zh(d,32)}c[f+b]=Ch(d)}Pl(c,c,b<<1);d={l:0,m:0,h:0};for(e=0,g=0;e<b;++e,g++){d=ih(ih(th(jh(nh(a[e]),{l:Su,m:1023,h:0}),jh(nh(a[e]),{l:Su,m:1023,h:0})),jh(nh(c[g]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32);++g;d=ih(d,jh(nh(c[g]),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32)}return c}\n\tfunction th(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;c=a.l&8191;d=a.l>>13|(a.m&15)<<9;e=a.m>>4&8191;f=a.m>>17|(a.h&255)<<5;g=(a.h&1048320)>>8;h=b.l&8191;i=b.l>>13|(b.m&15)<<9;j=b.m>>4&8191;k=b.m>>17|(b.h&255)<<5;l=(b.h&1048320)>>8;B=c*h;C=d*h;D=e*h;F=f*h;G=g*h;if(i!=0){C+=c*i;D+=d*i;F+=e*i;G+=f*i}if(j!=0){D+=c*j;F+=d*j;G+=e*j}if(k!=0){F+=c*k;G+=d*k}l!=0&&(G+=c*l);n=B&Su;o=(C&511)<<13;m=n+o;q=B>>22;r=C>>9;s=(D&262143)<<4;t=(F&31)<<17;p=q+r+s+t;v=D>>18;w=F>>5;A=(G&4095)<<8;u=v+w+A;p+=m>>22;m&=Su;u+=p>>22;p&=Su;u&=Tu;return Ug(m,p,u)}\n\tfunction jt(b,c,d,e,f,g){var h,i,j,k,l,m;if(Jj(c,'Zcharge')){b.a+=d;return}if(c.charCodeAt(0)==91){h=1;while(ni(c.charCodeAt(h)))++h;if(f==0){try{f=Pi(c.substr(1,h-1))}catch(a){a=Hg(a);if(_d(a,6)){throw new It('Bad isotope syntax')}else throw Gg(a)}}c=Sj(c,h,c.length-1)}i=en(b.c,c);if(!i){l=en(b.d,c);if(!l)throw new It('Unrecognized symbol: '+c);if(f!=0)throw new It('Syntax error: cannot specify isotopes for groups');if(g){k=Fo(new Go(l.a.g));while(Fn(k.a.a)){j=Ko(k);m=new ks(j);m.d*=d;m.c*=e;kt(b,m)}}else{kt(b,new ms(l,d,e))}}else{kt(b,new ls(i,f,d,e))}}\n\tfunction Uh(a){Th.call(this,''+('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.'),_d('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.',9)?'Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.':null)}\n\tfunction Tt(a,b){var c,d,e,f,g,h,i,j,k,l,m;m=new wt(new bu(a));Im(m,b);j=1;for(e=Fo(new Go(m.g));Fn(e.a.a);){c=Ko(e);h=en(a.a,c.i);h.b.b>j&&(j=h.b.b)}k=2*j*vj(qt(m)+1)/vj(2);l=a.d.b/(k*4);Yt(a,l);mr(a.c,new Ri(0),new Ri(1));for(d=Fo(new Go(m.g));Fn(d.a.a);){c=Ko(d);h=en(a.a,c.i);if(c.a!=0){f=new Os(c.b,c.b,h.g,h.e,h.a);h=f}if(h.b.b==0){i=new Ct(ge(h.c+0.5),h.c,1,h.g);gn(h.b,new fj(i.c),i)}if(fs(c)<0){throw new It('Number of element under 0')}else if(fs(c)==0);else if(fs(c)==1){a.c=Ut(a,new $t(a.d,h,a.a))}else{g=new $t(a.d,h,a.a);Yt(g,a.b);a.c=Ut(a,St(g,fs(c)))}}}\n\tfunction Vg(a,b,c){var d,e,f,g,h,i;if(b.l==0&&b.m==0&&b.h==0){throw new Zh('divide by zero')}if(a.l==0&&a.m==0&&a.h==0){c&&(Rg=Ug(0,0,0));return Ug(0,0,0)}if(b.h==Uu&&b.m==0&&b.l==0){return Wg(a,c)}i=false;if(b.h>>19!=0){b=uh(b);i=true}g=ah(b);f=false;e=false;d=false;if(a.h==Uu&&a.m==0&&a.l==0){e=true;f=true;if(g==-1){a=Tg((Jh(),Fh));d=true;i=!i}else{h=yh(a,g);i&&$g(h);c&&(Rg=Ug(0,0,0));return h}}else if(a.h>>19!=0){f=true;a=uh(a);d=true;i=!i}if(g!=-1){return Xg(a,g,i,f,c)}if(!ph(a,b)){c&&(f?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h)));return Ug(0,0,0)}return Yg(d?a:Ug(a.l,a.m,a.h),b,i,f,e,c)}\n\tfunction uc(a,b){var c,d,e,f,g,h,i,j,k;if(!b.length){return a.q('Unknown','anonymous',-1,-1)}k=Tj(b);Jj(k.substr(0,3),'at ')&&(k=Wj(k,3,k.length-3));k=k.replace(/\\[.*?\\]/g,'');g=k.indexOf('(');if(g==-1){g=k.indexOf('@');if(g==-1){j=k;k=''}else{j=Tj(Wj(k,g+1,k.length-(g+1)));k=Tj(k.substr(0,g))}}else{c=k.indexOf(')',g);j=k.substr(g+1,c-(g+1));k=Tj(k.substr(0,g))}g=Lj(k,ak(46));g!=-1&&(k=Wj(k,g+1,k.length-(g+1)));(!k.length||Jj(k,'Anonymous function'))&&(k='anonymous');h=Mj(j,ak(58));e=Nj(j,ak(58),h-1);i=-1;d=-1;f='Unknown';if(h!=-1&&e!=-1){f=j.substr(0,e);i=pc(j.substr(e+1,h-(e+1)));d=pc(Wj(j,h+1,j.length-(h+1)))}return a.q(f,k,i,d)}\n\tfunction pr(a,b,c){var d,e,f,g,h,i,j,k,l,m,n;if(!a.c){return false}g=null;m=null;i=new Gr(null,null);e=1;i.a[1]=a.c;l=i;while(l.a[e]){j=e;h=m;m=l;l=l.a[e];d=a.b.Y(b,l.c);e=d<0?0:1;d==0&&(!c.c||Pq(l.d,c.d))&&(g=l);if(!(!!l&&l.b)&&!lr(l.a[e])){if(lr(l.a[1-e])){m=m.a[j]=sr(l,e)}else if(!lr(l.a[1-e])){n=m.a[1-j];if(n){if(!lr(n.a[1-j])&&!lr(n.a[j])){m.b=false;n.b=true;l.b=true}else{f=h.a[1]==m?1:0;lr(n.a[j])?(h.a[f]=rr(m,j)):lr(n.a[1-j])&&(h.a[f]=sr(m,j));l.b=h.a[f].b=true;h.a[f].a[0].b=false;h.a[f].a[1].b=false}}}}}if(g){c.b=true;c.d=g.d;if(l!=g){k=new Gr(l.c,l.d);qr(a,i,g,k);m==g&&(m=k)}m.a[m.a[1]==l?1:0]=l.a[!l.a[0]?1:0];--a.d}a.c=i.a[1];!!a.c&&(a.c.b=false);return c.b}\n\tfunction Vt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);!!c&&!!d&&(rj(c.a-m)<rj(d.a-m)?(d=null):(c=null));if(c){if(to(k,c).a>l){l+=to(k,c).a;m=c.a}else{l+=to(k,c).a;nr(k,c)}}else if(d){if(to(k,d).a>l){l+=to(k,d).a;m=d.a}else{l+=to(k,d).a;nr(k,d)}}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\n\tfunction vt(a,b,c,d,e){var f,g,h,i,j,k,l;$r.call(this);this.c=b;this.d=c;this.f=d;h=a.indexOf('$');if(h>-1){this.b=Wj(a,h+1,a.length-(h+1));a=a.substr(0,h)}g=new RegExp('(\\\\([0-9]+[+-]\\\\))');for(j=g.exec(a);j;j=g.exec(a)){f=j[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9]+)([+-])$','$2$1'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('(\\\\([+-][0-9]+\\\\))');for(k=g.exec(a);k;k=g.exec(a)){f=k[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9])([+-])$','$1$2'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('([+-])(?![0-9])');for(i=g.exec(a);i;i=g.exec(a)){f=i[0];Jj(f,'+')?(a=a.replace(g,'Zcharge')):(a=a.replace(g,'(Zcharge-1)'))}Oj(a,'[a-zA-Z][0-9]+-[0-9]')&&(this.e=true);a.indexOf('}')!=-1;yt(this,a,e)}\n\tfunction Wt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);if(!!c&&!!d){m=(m*l+c.a*to(k,c).a+d.a*to(k,d).a)/(l+to(k,c).a+to(k,d).a);l+=to(k,c).a+to(k,d).a;nr(k,c);nr(k,d)}else if(c){m=(m*l+c.a*to(k,c).a)/(l+to(k,c).a);l+=to(k,c).a;nr(k,c)}else if(d){m=(m*l+d.a*to(k,d).a)/(l+to(k,d).a);l+=to(k,d).a;nr(k,d)}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\n\tfunction Hk(){Hk=Lg;var a,b,c;new Qk({l:1,m:0,h:0},0);new Qk({l:10,m:0,h:0},0);new Qk({l:0,m:0,h:0},0);zk=Sd(hf,Ru,14,11,0,1);Ak=Sd(ie,Ru,0,100,7,1);Bk=Vd(Rd(je,1),av,0,7,[1,5,25,125,625,3125,15625,78125,390625,1953125,9765625,48828125,244140625,1220703125,6103515625,30517578125,152587890625,762939453125,3814697265625,19073486328125,95367431640625,476837158203125,2384185791015625]);Ck=Sd(ke,Ru,0,Bk.length,7,1);Dk=Vd(Rd(je,1),av,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu,dv,100000000000,1000000000000,10000000000000,100000000000000,1000000000000000,10000000000000000]);Ek=Sd(ke,Ru,0,Dk.length,7,1);Fk=Sd(hf,Ru,14,11,0,1);a=0;for(;a<Fk.length;a++){zk[a]=new Qk(nh(a),0);Fk[a]=new Qk({l:0,m:0,h:0},a);Ak[a]=48}for(;a<Ak.length;a++){Ak[a]=48}for(c=0;c<Ck.length;c++){Ck[c]=Sk(Bk[c])}for(b=0;b<Ek.length;b++){Ek[b]=Sk(Dk[b])}mm()}\n\tfunction Jk(a,b){var c,d,e,f,g,h,i,j;c=0;g=0;f=b.length;j=new tk(b.length);if(0<f&&b.charCodeAt(0)==43){++g;++c;if(g<f&&(b.charCodeAt(g)==43||b.charCodeAt(g)==45)){throw new Dj('For input string: \"'+b+'\"')}}while(g<f&&b.charCodeAt(g)!=46&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}Wh(j,b,c,g);if(g<f&&b.charCodeAt(g)==46){++g;c=g;while(g<f&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}a.e=g-c;Wh(j,b,c,g)}else{a.e=0}if(g<f&&(b.charCodeAt(g)==101||b.charCodeAt(g)==69)){++g;c=g;if(g<f&&b.charCodeAt(g)==43){++g;g<f&&b.charCodeAt(g)!=45&&++c}h=b.substr(c,f-c);a.e=a.e-Pi(h);if(a.e!=ge(a.e)){throw new Dj('Scale out of range.')}}i=j.a;if(i.length<16){a.f=Zk(i);if(Xi(a.f)){throw new Dj('For input string: \"'+b+'\"')}a.a=Sk(a.f)}else{Lk(a,new Cl(i))}a.d=j.a.length;for(e=0;e<j.a.length;++e){d=Ij(j.a,e);if(d!=45&&d!=48){break}--a.d}a.d==0&&(a.d=1)}\n\tfunction Yl(a,b,c,d,e,f){var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;q=Sd(ke,Ru,0,d+1,7,1);r=Sd(ke,Ru,0,f+1,7,1);i=kj(e[f-1]);if(i!=0){Ol(r,e,0,i);Ol(q,c,0,i)}else{wk(c,0,q,0,d);wk(e,0,r,0,f)}j=r[f-1];l=b-1;m=d;while(l>=0){if(q[m]==j){k=-1}else{s=ih(xh(jh(nh(q[m]),{l:Su,m:1023,h:0}),32),jh(nh(q[m-1]),{l:Su,m:1023,h:0}));v=_l(s,j);k=Ch(v);u=Ch(yh(v,32));if(k!=0){t=false;++k;do{--k;if(t){break}o=th(jh(nh(k),{l:Su,m:1023,h:0}),jh(nh(r[f-2]),{l:Su,m:1023,h:0}));w=ih(xh(nh(u),32),jh(nh(q[m-2]),{l:Su,m:1023,h:0}));p=ih(jh(nh(u),{l:Su,m:1023,h:0}),jh(nh(j),{l:Su,m:1023,h:0}));kj(Ch(zh(p,32)))<32?(t=true):(u=Ch(p))}while(oh(Eh(o,{l:0,m:0,h:Uu}),Eh(w,{l:0,m:0,h:Uu})))}}if(k!=0){g=am(q,m-f,r,f,k);if(g!=0){--k;h={l:0,m:0,h:0};for(n=0;n<f;n++){h=ih(h,ih(jh(nh(q[m-f+n]),{l:Su,m:1023,h:0}),jh(nh(r[n]),{l:Su,m:1023,h:0})));q[m-f+n]=Ch(h);h=zh(h,32)}}}a[l]=k;--m;--l}if(i!=0){Rl(r,f,q,0,i);return r}wk(q,0,r,0,f);return q}\n\tfunction Db(){var a=['\\\\u0000','\\\\u0001','\\\\u0002','\\\\u0003','\\\\u0004','\\\\u0005','\\\\u0006','\\\\u0007','\\\\b','\\\\t','\\\\n','\\\\u000B','\\\\f','\\\\r','\\\\u000E','\\\\u000F','\\\\u0010','\\\\u0011','\\\\u0012','\\\\u0013','\\\\u0014','\\\\u0015','\\\\u0016','\\\\u0017','\\\\u0018','\\\\u0019','\\\\u001A','\\\\u001B','\\\\u001C','\\\\u001D','\\\\u001E','\\\\u001F'];a[34]='\\\\\"';a[92]='\\\\\\\\';a[173]='\\\\u00ad';a[1536]='\\\\u0600';a[1537]='\\\\u0601';a[1538]='\\\\u0602';a[1539]='\\\\u0603';a[1757]='\\\\u06dd';a[1807]='\\\\u070f';a[6068]='\\\\u17b4';a[6069]='\\\\u17b5';a[8203]='\\\\u200b';a[8204]='\\\\u200c';a[8205]='\\\\u200d';a[8206]='\\\\u200e';a[8207]='\\\\u200f';a[8232]='\\\\u2028';a[8233]='\\\\u2029';a[8234]='\\\\u202a';a[8235]='\\\\u202b';a[8236]='\\\\u202c';a[8237]='\\\\u202d';a[8238]='\\\\u202e';a[8288]='\\\\u2060';a[8289]='\\\\u2061';a[8290]='\\\\u2062';a[8291]='\\\\u2063';a[8292]='\\\\u2064';a[8298]='\\\\u206a';a[8299]='\\\\u206b';a[8300]='\\\\u206c';a[8301]='\\\\u206d';a[8302]='\\\\u206e';a[8303]='\\\\u206f';a[65279]='\\\\ufeff';a[65529]='\\\\ufff9';a[65530]='\\\\ufffa';a[65531]='\\\\ufffb';return a}\n\tfunction Wl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n;h=qh(a,{l:0,m:0,h:0});h&&(a=uh(a));if(lh(a,{l:0,m:0,h:0})){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:l=new sk;b<0?(l.a+='0E+',l):(l.a+='0E',l);l.a+=b==$u?'2147483648':''+-b;return l.a;}}j=Sd(ie,Ru,0,19,7,1);c=18;n=a;do{i=n;n=kh(n,{l:10,m:0,h:0});j[--c]=Ch(ih({l:48,m:0,h:0},Ah(i,th(n,{l:10,m:0,h:0}))))&_u}while(vh(n,{l:0,m:0,h:0}));d=Ah(Ah(Ah({l:18,m:0,h:0},nh(c)),nh(b)),{l:1,m:0,h:0});if(b==0){h&&(j[--c]=45);return dk(j,c,18-c)}if(b>0&&ph(d,{l:4194298,m:Su,h:Tu})){if(ph(d,{l:0,m:0,h:0})){e=c+Ch(d);for(g=17;g>=e;g--){j[g+1]=j[g]}j[++e]=46;h&&(j[--c]=45);return dk(j,c,18-c+1)}for(f=2;qh(nh(f),ih(uh(d),{l:1,m:0,h:0}));f++){j[--c]=48}j[--c]=46;j[--c]=48;h&&(j[--c]=45);return dk(j,c,18-c)}m=c+1;k=new tk;h&&(k.a+='-',k);if(18-m>=1){ok(k,j[c]);k.a+='.';k.a+=dk(j,c+1,18-c-1)}else{k.a+=dk(j,c,18-c)}k.a+='E';oh(d,{l:0,m:0,h:0})&&(k.a+='+',k);k.a+=''+Dh(d);return k.a}\n\tfunction dt(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;b=Pj(b,' ','');b=Pj(b,'^([0-9]+[A-Z][a-z]?)$','[$1]');Oj(b,'.*[a-zA-Z][0-9]+-[0-9].*')&&(a.c=true);r=new RegExp('([A-Z][a-z]?\\\\{[0-9.,]*\\\\})');for(t=r.exec(b);t;t=r.exec(b)){h=t[1];p=(v=$s(h),w=Pj(h,'\\\\{.*',''),an(a.a,v)||hn(a.a,v,new Qs(en(a.a,w),v,h)),v);b=b.replace(r,p)}r=new RegExp('(\\\\{[A-Za-z0-9]*\\\\})');for(s=r.exec(b);s;s=r.exec(b)){h=s[1];q=(A=$s(h),B=Pj(h,'[\\\\{\\\\}]',''),an(a.b,A)||hn(a.b,A,new Bt(A,h,B,a.a,a.b)),A);b=b.replace(r,q)}b.indexOf('}')!=-1;g=Qj(b,'\\\\.',0);n=1;o=false;for(e=0,f=g.length;e<f;++e){d=g[e];if(ct(d)){if(o)throw new It(\"Syntax error: 'number.number.'\");n=Oi(d);o=true;continue}u=d.indexOf('/');if(u!=-1){if(o)throw new It(\"Syntax error: 'number.number/number'\");k=u+1;l=d.length;while(ni(Ij(d,k++))){if(k>=l)break}k<l&&--k;n=et(d.substr(0,k));o=true;if(k>=l)continue;else d=Wj(d,k,d.length-k)}j=0;for(;j<d.length;j++){if(!ni(d.charCodeAt(j)))break}if(j>0){m=Oi(d.substr(0,j));d=Wj(d,j,d.length-j);o?(n+=m/yj(10,j)):(n=m)}i=new vt(d,a.a,a.b,n,c);i.f==0&&(a.e=true);i.e&&(a.c=true);Qo(a.d,i);n=1;o=false}}\n\tfunction Bs(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;t=new mk;s=a.d;s>~~(a.a/2)&&(s=~~(a.a/2));t.a+='##TITLE= '+b+'\\r\\n'+'##JCAMP-DX= 5.00\\r\\n'+'##DATA TYPE= MASS SPECTRUM\\r\\n'+'##DATA CLASS= PEAK TABLE\\r\\n'+'##ORIGIN= Generated spectrum based on ChemCalc www.chemcalc.org\\r\\n'+'##SPECTROMETER/DATA SYSTEM= Based on ChemCalc isotopic distribution calculator\\r\\n'+'##XUNITS= M/Z\\r\\n'+'##YUNITS= RELATIVE ABUNDANCE\\r\\n'+'##NPOINTS=         \\r\\n';e=t.a.length;t.a+='##MAXY= 100\\r\\n##MINY= 0\\r\\n';for(n=Mn(new Nn(d));un(n.a);){m=Rn(n);lk(t,'##$'+m+'='+(m==null?Xm(Dp(d.a,null)):d.c.gb(m))+'\\r\\n')}t.a+='##PEAK TABLE= (XY..XY)\\r\\n';p=0;l=(new Fr(a)).a.W();o=(new Nn(c)).H(Sd(Pe,Ru,7,(new Nn(c)).a.b,0,1));jp(o,0,o.length,(pp(),pp(),op));g=0;q=mv;j=true;f=0;r=false;w='';while(Fn(l.a)&&f<s){++f;h=l.b=Gn(l.a);u=h.T().a;v=h.U().a;v<1.0E-9&&(v=0);if(v!=0&&w.length>0){t.a+=w;++p;w=''}i=true;for(k=g;k<o.length;k++){if(!Fn(l.a)||rj(o[k].a-q)<rj(o[k].a-u)){if(i){t.a+='  $$ ';i=false}else{t.a+=','}lk(t,dn(c,o[k]));++g}else{break}}q=u;if(j){j=false;lk(t,As(u)+', '+As(v*100));++p}else{if(!r||v!=0){t.a+='\\r\\n';lk(t,As(u)+', '+As(v*100));++p}else{w='\\r\\n'+As(u)+', '+As(0)}v==0?(r=true):(r=false)}}t.a+='\\r\\n##END=\\r\\n';t.a=Sj(t.a,0,e-10)+(p+'')+Rj(t.a,e-2);return t}\n\tfunction Xl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;A=a.e;n=a.d;e=a.a;if(A==0){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:v=new sk;b<0?(v.a+='0E+',v):(v.a+='0E',v);v.a+=-b;return v.a;}}s=n*10+1+7;t=Sd(ie,Ru,0,s+1,7,1);c=s;if(n==1){g=e[0];if(g<0){G=jh(nh(g),{l:Su,m:1023,h:0});do{o=G;G=kh(G,{l:10,m:0,h:0});t[--c]=48+Ch(Ah(o,th(G,{l:10,m:0,h:0})))&_u}while(vh(G,{l:0,m:0,h:0}))}else{G=g;do{o=G;G=~~(G/10);t[--c]=48+(o-G*10)&_u}while(G!=0)}}else{C=Sd(ke,Ru,0,n,7,1);F=n;wk(e,0,C,0,n);H:while(true){w={l:0,m:0,h:0};for(i=F-1;i>=0;i--){D=ih(xh(w,32),jh(nh(C[i]),{l:Su,m:1023,h:0}));q=Vl(D);C[i]=Ch(q);w=nh(Ch(yh(q,32)))}r=Ch(w);p=c;do{t[--c]=48+r%10&_u}while((r=~~(r/10))!=0&&c!=0);d=9-p+c;for(h=0;h<d&&c>0;h++){t[--c]=48}k=F-1;for(;C[k]==0;k--){if(k==0){break H}}F=k+1}while(t[c]==48){++c}}m=A<0;f=s-c-b-1;if(b==0){m&&(t[--c]=45);return dk(t,c,s-c)}if(b>0&&f>=-6){if(f>=0){j=c+f;for(l=s-1;l>=j;l--){t[l+1]=t[l]}t[++j]=46;m&&(t[--c]=45);return dk(t,c,s-c+1)}for(k=2;k<-f+1;k++){t[--c]=48}t[--c]=46;t[--c]=48;m&&(t[--c]=45);return dk(t,c,s-c)}B=c+1;u=new tk;m&&(u.a+='-',u);if(s-B>=1){ok(u,t[c]);u.a+='.';u.a+=dk(t,c+1,s-c-1)}else{u.a+=dk(t,c,s-c)}u.a+='E';f>0&&(u.a+='+',u);u.a+=''+f;return u.a}\n\tfunction Wb(a,b){var c,d,e,f;Yb(b,a.e);c=a.d[0];d=a.d[1];e=a.d[2];f=a.d[3];c=Zb(c,d,e,f,a.e[0],7,-680876936);f=Zb(f,c,d,e,a.e[1],12,-389564586);e=Zb(e,f,c,d,a.e[2],17,606105819);d=Zb(d,e,f,c,a.e[3],22,-1044525330);c=Zb(c,d,e,f,a.e[4],7,-176418897);f=Zb(f,c,d,e,a.e[5],12,1200080426);e=Zb(e,f,c,d,a.e[6],17,-1473231341);d=Zb(d,e,f,c,a.e[7],22,-45705983);c=Zb(c,d,e,f,a.e[8],7,1770035416);f=Zb(f,c,d,e,a.e[9],12,-1958414417);e=Zb(e,f,c,d,a.e[10],17,-42063);d=Zb(d,e,f,c,a.e[11],22,-1990404162);c=Zb(c,d,e,f,a.e[12],7,1804603682);f=Zb(f,c,d,e,a.e[13],12,-40341101);e=Zb(e,f,c,d,a.e[14],17,-1502002290);d=Zb(d,e,f,c,a.e[15],22,1236535329);c=$b(c,d,e,f,a.e[1],5,-165796510);f=$b(f,c,d,e,a.e[6],9,-1069501632);e=$b(e,f,c,d,a.e[11],14,643717713);d=$b(d,e,f,c,a.e[0],20,-373897302);c=$b(c,d,e,f,a.e[5],5,-701558691);f=$b(f,c,d,e,a.e[10],9,38016083);e=$b(e,f,c,d,a.e[15],14,-660478335);d=$b(d,e,f,c,a.e[4],20,-405537848);c=$b(c,d,e,f,a.e[9],5,568446438);f=$b(f,c,d,e,a.e[14],9,-1019803690);e=$b(e,f,c,d,a.e[3],14,-187363961);d=$b(d,e,f,c,a.e[8],20,1163531501);c=$b(c,d,e,f,a.e[13],5,-1444681467);f=$b(f,c,d,e,a.e[2],9,-51403784);e=$b(e,f,c,d,a.e[7],14,1735328473);d=$b(d,e,f,c,a.e[12],20,-1926607734);c=_b(c,d,e,f,a.e[5],4,-378558);f=_b(f,c,d,e,a.e[8],11,-2022574463);e=_b(e,f,c,d,a.e[11],16,1839030562);d=_b(d,e,f,c,a.e[14],23,-35309556);c=_b(c,d,e,f,a.e[1],4,-1530992060);f=_b(f,c,d,e,a.e[4],11,1272893353);e=_b(e,f,c,d,a.e[7],16,-155497632);d=_b(d,e,f,c,a.e[10],23,-1094730640);c=_b(c,d,e,f,a.e[13],4,681279174);f=_b(f,c,d,e,a.e[0],11,-358537222);e=_b(e,f,c,d,a.e[3],16,-722521979);d=_b(d,e,f,c,a.e[6],23,76029189);c=_b(c,d,e,f,a.e[9],4,-640364487);f=_b(f,c,d,e,a.e[12],11,-421815835);e=_b(e,f,c,d,a.e[15],16,530742520);d=_b(d,e,f,c,a.e[2],23,-995338651);c=ac(c,d,e,f,a.e[0],6,-198630844);f=ac(f,c,d,e,a.e[7],10,1126891415);e=ac(e,f,c,d,a.e[14],15,-1416354905);d=ac(d,e,f,c,a.e[5],21,-57434055);c=ac(c,d,e,f,a.e[12],6,1700485571);f=ac(f,c,d,e,a.e[3],10,-1894986606);e=ac(e,f,c,d,a.e[10],15,-1051523);d=ac(d,e,f,c,a.e[1],21,-2054922799);c=ac(c,d,e,f,a.e[8],6,1873313359);f=ac(f,c,d,e,a.e[15],10,-30611744);e=ac(e,f,c,d,a.e[6],15,-1560198380);d=ac(d,e,f,c,a.e[13],21,1309151649);c=ac(c,d,e,f,a.e[4],6,-145523070);f=ac(f,c,d,e,a.e[11],10,-1120210379);e=ac(e,f,c,d,a.e[2],15,718787259);d=ac(d,e,f,c,a.e[9],21,-343485551);a.d[0]=~~(a.d[0]+c);a.d[1]=~~(a.d[1]+d);a.d[2]=~~(a.d[2]+e);a.d[3]=~~(a.d[3]+f)}\n\tfunction yt(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;c=Tj(c);c=Pj(c,'[=]','');if(c.indexOf('.')!=-1)throw new tb('Error: the formula \"'+c+'\"contains dots (error in parsing)');if(Jj(c,'')){return}if(ni(c.charCodeAt(0))){throw new tb('Error: the formula starts with a number')}c.charCodeAt(0)==120&&(c='X'+Sj(c,1,c.length));g=new dr;k=1;j=1;m=1;l=1;r=1;q=1;w=c.length-1;while(w>=0){if(ni(c.charCodeAt(w))){f=w;while(w>0&&ni(c.charCodeAt(w)))--w;e=c.substr(w+1,f+1-(w+1));u=Pi(e);if(c.charCodeAt(w)==45){--w;if(w<0)throw new It(\"Syntax error: the formula starts with '-': \"+c);f=w;while(w>0&&ni(c.charCodeAt(w)))--w;w==0&&ni(c.charCodeAt(0))&&--w;o=c.substr(w+1,f+1-(w+1));if(o.length==0){u=Pi('-'+e);v=u}else{v=Pi(o)}}else v=u;if(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l;l*=u;m*=v}else{k=v;j=u}}else{if(c.charCodeAt(w)==93){s=w;--w;if(w<=1)throw new It('Syntax error: bad isotope syntax');if(!oi(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');while(w>0&&qi(c.charCodeAt(w)))--w;if(!ri(c.charCodeAt(w)))throw new It('Syntax error: bad symbol (must start with uppercase)');t=c.substr(w,s-w);--w;if(w<0)throw new It('Syntax error: bad isotope syntax');if(!ni(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');f=w;while(w>0&&c.charCodeAt(w)!=91)--w;p=c.substr(w+1,f+1-(w+1));try{n=Pi(p)}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad isotope number '+p)}else throw Gg(a)}if(c.charCodeAt(w)!=91)throw new It(\"Isotope syntax error: no opening '['\");jt(b,t,k*m,j*l,n,d);j=1;k=1;if(w>0)--w;else return}else{if(oi(c.charCodeAt(w))){s=w;while(w>0&&qi(c.charCodeAt(w)))--w;if(s==0&&w==0&&c.charCodeAt(0)==110){b.f=0;return}if(!ri(c.charCodeAt(w)))throw new It('Syntax error: the symbol must start with uppercase');t=c.substr(w,s+1-w);if(Jj(t,'X')&&w==0){b.f=0;return}--w;jt(b,t,k*m,j*l,0,d);j=1;k=1}else{while(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l}if(w<0)break;while(c.charCodeAt(w)==40){l=q;m=r;if(g.a.b.length==0){q=1;r=1}else{q=br(g).a;r=br(g).a}--w;if(w<0)break}if(w<0)break;if(c.charCodeAt(w)==125){i=w;while(w>0&&c.charCodeAt(w)!=123)--w;if(c.charCodeAt(w)!=123)throw new It('Syntax error (combinatorial): no opening brace');zt(b,c.substr(w+1,i-(w+1)),k*m,j*l);--w}}}}if(w<0)break;h=c.charCodeAt(w);if(h==123)throw new It('Syntax error (combinatorial): no closing brace');if(h==91)throw new It('Syntax error (isotope): no closing bracket');if(!(null!=String.fromCharCode(h).match(/[A-Z\\d]/i))&&h!=40&&h!=91&&h!=123&&h!=93&&h!=41&&h!=125)throw new It(\"Syntax error: unrecognized character: '\"+Zd(h)+\"'\")}}\n\tfunction wu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N;u=new Mu;if(!b){Ju(u,'error',new Id('options is null'));return u}J=b.c.gb('referenceVersion');J!=null&&!Jj(J,'')&&(d=(Ht(),Ht(),Ft));C=b.c.gb('mf');r=b.c.gb('isotopomers');M=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;n=new Ri(0.001);try{n=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}L=new Ri(1.0E-5);try{L=new Ri(Oi(b.c.gb('threshold')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}p=0;try{p=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}h=null;try{h=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}t=0;!(b.c.gb('joiningAlgorithm')===undefined)&&Jj(b.c.gb('joiningAlgorithm').toLowerCase(),'center')&&(t=Jt);w=new Mu;C==null?Ju(w,'mf',(cd(),cd(),bd)):Ju(w,'mf',new Id(C));Ju(w,'threshold',new hd(L.a));Ju(w,'fwhm',new hd(n.a));Ju(w,'typedResult',(Xc(),M?Wc:Vc));r==null?Ju(w,'isotopomers',(cd(),cd(),bd)):Ju(w,'isotopomers',new Id(r));p>0&&Ju(w,'gaussianWidth',new hd(p));J==null?Ju(w,'referenceVersion',(cd(),cd(),bd)):Ju(w,'referenceVersion',new Id(J));Ju(u,'options',w.a);if(C!=null){C=Tj(C);Jj(C,'')&&(C=null)}if(C!=null){try{k=new gt(C,d,c);if(k.d.b.length>0){if(k.e){Ju(u,'error',new Id('mass not defined'))}else{if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',ft(k));Ju(u,'mf',D.a)}else{Lu(u,'mf',ft(k))}Ju(u,'mw',new hd(_s(k)));Ju(u,'em',new hd(at(k)));Ju(u,'nominalMass',new hd(bt(k)));if(r!=null&&!Jj(r,'')){K=new Qt(d,k,n.a,L.a);K.f=t;Lt(K);Mt(K);if(p>0){o=mu(p);Kt(K,o,n.a)}Ju(w,'numberLines',new hd(K.e.c.d));if(r.indexOf('jcamp')>-1){if(M){s=new Mu;Ju(s,'type',new Id('jcamp'));Lu(s,'value',Nt(K).a);Ju(u,'jcamp',s.a)}else{Lu(u,'jcamp',Nt(K).a)}}if(r.indexOf('xy')>-1){if(M){N=new Mu;Ju(N,'type',new Id('xy'));Lu(N,'value',Ot(K).a);Ju(u,'xy',N.a)}else{Lu(u,'xy',Ot(K).a)}}if(r.indexOf('array')>-1&&r.indexOf('arrayX')==-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'spectrum',v.a)}if(r.indexOf('arrayXXYY')>-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'arrayXXYY',v.a)}if(r.indexOf('arrayXYXY')>-1){e=Pt(K);Ju(u,'arrayXYXY',(new Iu(e)).a)}}I=new Gu;Ju(u,'parts',I.a);for(m=new In(k.d);m.a<m.c.G();){l=(Dc(m.a<m.c.G()),m.c.R(m.b=m.a++));H=new Mu;Fu(I,H.a);if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',tt(l));Ju(H,'mf',D.a)}else{Lu(H,'mf',tt(l))}Ju(H,'mw',new hd(nt(l)));Ju(H,'em',new hd(ot(l)));l.b.length>0&&Lu(H,'comment',l.b);Ku(H,gu(l,h));G=ot(l)-l.a*nv;if(l.a!=0){Ju(H,'charge',new hd(l.a));G=G/sj(l.a)}Ju(H,'msem',new hd(G));lt(l);i=new Gu;for(g=Fo(new Go(l.g));Fn(g.a.a);){f=Ko(g);j=new Mu;Lu(j,'element',f.i);Ju(j,'number',new hd(fs(f)));Ju(j,'percentage',new hd(f.g));Fu(i,j.a)}Ju(H,'ea',i.a)}}}else{Ju(u,'error',new Id('there is no part in the molecule'))}}catch(a){a=Hg(a);if(_d(a,4)){F=a;Lu(u,'error',F.f)}else throw Gg(a)}}else{Ju(u,'error',new Id('parameter mf not specified'))}return u}\n\tfunction zu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb;F=0.5;Q=0;K=50;I=1000;s=false;bb=false;R=false;v=b.c.gb('jcampLink')!=null&&(ei(),Kj('true',b.c.gb('jcampLink'))?di:ci).a;u=b.c.gb('jcampBaseURL')==null?'http://www.chemcalc.org/service/jcamp/':b.c.gb('jcampBaseURL');N='C0-100H0-202N0-10O0-10F0-3Cl0-3Br0-1';Y=mv;X=new $r;$=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;q=new Ri(0.001);try{q=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}r=0;try{r=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}A=new Mu;if(!b){Ju(A,'error',new Id('options is null'));return A}U=b.c.gb('referenceVersion');U!=null&&!Jj(U,'')&&(d=(Ht(),Ht(),Ft));l=null;try{l=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Q=Oi(b.c.gb('minUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{K=Oi(b.c.gb('maxUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}if(!(b.c.gb('integerUnsaturation')===undefined)){try{s=(ei(),Kj('true',b.c.gb('integerUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('useUnsaturation')===undefined)){try{bb=(ei(),Kj('true',b.c.gb('useUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('numberOfResultsOnly')===undefined)){try{R=(ei(),Kj('true',b.c.gb('numberOfResultsOnly')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}try{I=Oi(b.c.gb('maxNumberRows'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Y=Oi(b.c.gb('monoisotopicMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{F=Oi(b.c.gb('massRange'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}P=Y-F;H=Y+F;try{H=Oi(b.c.gb('maxMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}!(b.c.gb('mfRange')===undefined)&&b.c.gb('mfRange')!=null&&b.c.gb('mfRange').length>0&&(N=b.c.gb('mfRange'));if(Y<0){Ju(A,'error',new Id('monoisotopicMass must be specified and larger than 0'));return A}B=new Mu;Ju(B,'minUnsaturation',new hd(Q));Ju(B,'maxUnsaturation',new hd(K));Ju(B,'integerUnsaturation',(Xc(),s?Wc:Vc));Ju(B,'useUnsaturation',bb?Wc:Vc);Ju(B,'numberOfResultsOnly',R?Wc:Vc);Ju(B,'minMass',new hd(Bh(mh(Math.round(P*dv)))/dv));Ju(B,'maxMass',new hd(Bh(mh(Math.round(H*dv)))/dv));Ju(B,'massRange',new hd(Bh(mh(Math.round(F*dv)))/dv));N==null?Ju(B,'mfRange',(cd(),cd(),bd)):Ju(B,'mfRange',new Id(N));Ju(B,'monoisotopicMass',new hd(Bh(mh(Math.round(Y*dv)))/dv));U==null?Ju(B,'referenceVersion',(cd(),cd(),bd)):Ju(B,'referenceVersion',new Id(U));Ju(B,'jcampLink',v?Wc:Vc);u==null?Ju(B,'jcampBaseURL',(cd(),cd(),bd)):Ju(B,'jcampBaseURL',new Id(u));Ju(B,'typedResult',$?Wc:Vc);Ju(A,'options',B.a);t={l:0,m:0,h:0};S={l:0,m:0,h:0};f=0;g=0;try{e=new ht(N,d,c,false);if(e.d.b.length!=1){Ju(A,'error',new Id('Number of parts not equal to 1'));return A}f=Ro(e.d,0).a;g=f<0?-f:f;if(f!=0){Y=Y*g+f*nv;P=P*g+f*nv;H=H*g+f*nv;F=F*g}T=Bu(Ro(e.d,0),Y+F);if(T){j=Sd(je,av,0,T.a.b.length,7,1);O=Sd(je,av,0,T.a.b.length,7,1);G=Sd(je,av,0,T.a.b.length,7,1);xu(T,O,G);Ju(A,'bruteForceIteration',new hd(Oi(Xl(yu(T),0))));Z=false;k=0;J=T.a.b.length;Ws((Vq(0,T.a.b.length),Ro(T.a,0)),0,Y,O[0],G[0],F);while(!Z){if(oh(t,{l:3511296,m:476,h:0})){throw new It('Iteration number is over the current maximum of: 2000000000')}if(j[k]>=P&&j[k]<=H){ab=hu(T,l);if(!bb||!ab||ab.a>=Q&&ab.a<=K&&(!s||ab.a==ge(ab.a))){S=ih(S,{l:1,m:0,h:0});if(!R){if(X.g.d>=I){if(rj(Ao(fr(X.g)).a)>rj(j[k]-Y)){Wm(vo(X.g));Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}else{Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}}}while(k<J&&k>=0){t=ih(t,{l:1,m:0,h:0});i=(Vq(k,T.a.b.length),Ro(T.a,k));if(i.b<i.c){++i.b;k==0?(j[0]=i.a.e*i.b):(j[k]=j[k-1]+i.a.e*i.b);if(k<J-1){++k;Ws((Vq(k,T.a.b.length),Ro(T.a,k)),j[k-1],Y,O[k],G[k],F)}else{break}}else{--k}}k<0&&(Z=true)}}Ju(A,'realIteration',new hd(Bh(Ah(t,{l:1,m:0,h:0}))));Ju(A,'numberResults',new hd(Bh(S)));Ju(A,'charge',new hd(f))}catch(a){a=Hg(a);if(_d(a,4)){m=a;Lu(A,'error',ob(m)+'\\r'+(ti(Dg),Dg.k+'@'+nj(Nb(B),16)))}else throw Gg(a)}D=new Gu;h='';f!=0&&(f>0?(h='(+'+f+')'):(h='('+f+')'));for(W=Fo(new Go(X.g));Fn(W.a.a);){V=Ko(W);C=new Mu;if(f==0){p=Bh(mh(zj(V.a*dv)))/dv;o=Bh(mh(zj(V.c*dv)))/dv}else{p=Bh(mh(zj(V.a/g*dv)))/dv;o=Bh(mh(zj((V.c-f*nv)/g*dv)))/dv}Ju(C,'error',new hd(p));Ju(C,'em',new hd(o));Ju(C,'ppm',new hd(Bh(mh(Math.round(p/o*dv)))/dv*cv));Lu(C,'info',V.b+h);try{w=u+V.b+'&fwhm='+q;r>0&&(w+='&gaussianWidth='+r);if($){L=new Mu;Ju(L,'type',new Id('mf'));Lu(L,'value',ft(new gt(V.b+h,d,c)));Ju(C,'mf',L.a);if(v){M=new Mu;Ju(M,'type',new Id('jcamp'));w==null?Ju(M,'url',(cd(),cd(),bd)):Ju(M,'url',new Id(w));Ju(C,'jcamp',M.a)}}else{Lu(C,'mf',ft(new gt(V.b+h,d,c)));v&&(w==null?Ju(C,'jcampURL',(cd(),cd(),bd)):Ju(C,'jcampURL',new Id(w)))}}catch(a){a=Hg(a);if(_d(a,4)){n=a;Lu(C,'mf',ob(n))}else throw Gg(a)}try{Ju(C,'unsat',new hd(Bh(mh(zj(V.d.a*dv)))/dv))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}Fu(D,C.a)}Ju(A,'results',D.a);return A}\n\tfunction Ht(){Ht=Lg;var b,c,d,e,f,g,h,i,j,k,l,m;Ft=new zp;e=new zp;k=Qj('1\\tH\\tHydrogen\\t1.0079407538967635\\n2\\tHe\\tHelium\\t4.002601932146926\\n3\\tLi\\tLithium\\t6.940037632200444\\n4\\tBe\\tBeryllium\\t9.01218224\\n5\\tB\\tBoron\\t10.8110281284\\n6\\tC\\tCarbon\\t12.010735896764565\\n7\\tN\\tNitrogen\\t14.006703211872013\\n8\\tO\\tOxygen\\t15.99940492727602\\n9\\tF\\tFluorine\\t18.998403227\\n10\\tNe\\tNeon\\t20.180046379828486\\n11\\tNa\\tSodium\\t22.989769280929\\n12\\tMg\\tMagnesium\\t24.305051612756515\\n13\\tAl\\tAluminium\\t26.9815386312\\n14\\tSi\\tSilicon\\t28.085498706539465\\n15\\tP\\tPhosphorus\\t30.973761632000002\\n16\\tS\\tSulfur\\t32.0647872364133\\n17\\tCl\\tChlorine\\t35.4529375824264\\n18\\tAr\\tArgon\\t39.947676713373\\n19\\tK\\tPotassium\\t39.0983011264695\\n20\\tCa\\tCalcium\\t40.078022655762524\\n21\\tSc\\tScandium\\t44.95591199\\n22\\tTi\\tTitanium\\t47.86674933516\\n23\\tV\\tVanadium\\t50.9414675085\\n24\\tCr\\tChromium\\t51.99613314762095\\n25\\tMn\\tManganese\\t54.93804517\\n26\\tFe\\tIron\\t55.8451456935552\\n27\\tCo\\tCobalt\\t58.93319506999999\\n28\\tNi\\tNickel\\t58.69335163208455\\n29\\tCu\\tCopper\\t63.546039795084994\\n30\\tZn\\tZinc\\t65.40872812701322\\n31\\tGa\\tGallium\\t69.72306563428617\\n32\\tGe\\tGermanium\\t72.63984326005341\\n33\\tAs\\tArsenic\\t74.92159652\\n34\\tSe\\tSelenium\\t78.9593882599375\\n35\\tBr\\tBromine\\t79.9035279923569\\n36\\tKr\\tKrypton\\t83.7980066431168\\n37\\tRb\\tRubidium\\t85.46766359470149\\n38\\tSr\\tStrontium\\t87.6166441185128\\n39\\tY\\tYttrium\\t88.905848327\\n40\\tZr\\tZirconium\\t91.22364763203382\\n41\\tNb\\tNiobium\\t92.90637812599999\\n42\\tMo\\tMolybdenum\\t95.93759212713759\\n43\\tTc\\tTechnetium\\t98.0\\n44\\tRu\\tRuthenium\\t101.0649455723334\\n45\\tRh\\tRhodium\\t102.90550430000002\\n46\\tPd\\tPalladium\\t106.41532914746399\\n47\\tAg\\tSilver\\t107.868151248228\\n48\\tCd\\tCadmium\\t112.41155226203729\\n49\\tIn\\tIndium\\t114.81808621342\\n50\\tSn\\tTin\\t118.71010849931781\\n51\\tSb\\tAntimony\\t121.75978615571421\\n52\\tTe\\tTellurium\\t127.60312786587177\\n53\\tI\\tIodine\\t126.9044734\\n54\\tXe\\tXenon\\t131.29276070673757\\n55\\tCs\\tCaesium\\t132.90545193324\\n56\\tBa\\tBarium\\t137.3268918829641\\n57\\tLa\\tLanthanum\\t138.90545400916656\\n58\\tCe\\tCerium\\t140.11572627079408\\n59\\tPr\\tPraseodymium\\t140.907652826\\n60\\tNd\\tNeodymium\\t144.236131428275\\n61\\tPm\\tPromethium\\t145.0\\n62\\tSm\\tSamarium\\t150.3663485610868\\n63\\tEu\\tEuropium\\t151.96437050019\\n64\\tGd\\tGadolinium\\t157.25212224243995\\n65\\tTb\\tTerbium\\t158.925346827\\n66\\tDy\\tDysprosium\\t162.49946572489424\\n67\\tHo\\tHolmium\\t164.930322127\\n68\\tEr\\tErbium\\t167.25907628559352\\n69\\tTm\\tThulium\\t168.934213327\\n70\\tYb\\tYtterbium\\t173.0376956147714\\n71\\tLu\\tLutetium\\t174.96672140854997\\n72\\tHf\\tHafnium\\t178.4849721651158\\n73\\tTa\\tTantalum\\t180.9478757552806\\n74\\tW\\tTungsten\\t183.8417781725967\\n75\\tRe\\tRhenium\\t186.206706624852\\n76\\tOs\\tOsmium\\t190.2248630659075\\n77\\tIr\\tIridium\\t192.2160564328\\n78\\tPt\\tPlatinum\\t195.077807984934\\n79\\tAu\\tGold\\t196.96656876\\n80\\tHg\\tMercury\\t200.599166666798\\n81\\tTl\\tThallium\\t204.38341252384\\n82\\tPb\\tLead\\t207.21690767600003\\n83\\tBi\\tBismuth\\t208.98039871599997\\n84\\tPo\\tPolonium\\t209.0\\n85\\tAt\\tAstatine\\t210.0\\n86\\tRn\\tRadon\\t222.0\\n87\\tFr\\tFrancium\\t223.0\\n88\\tRa\\tRadium\\t226.0\\n89\\tAc\\tActinium\\t227.0\\n90\\tTh\\tThorium\\t232.038055321\\n91\\tPa\\tProtactinium\\t231.035884024\\n92\\tU\\tUranium\\t238.02891028165737\\n93\\tNp\\tNeptunium\\t237.0\\n94\\tPu\\tPlutonium\\t244.0\\n95\\tAm\\tAmericium\\t0.0\\n96\\tCm\\tCurium\\t0.0\\n97\\tBk\\tBerkelium\\t0.0\\n98\\tCf\\tCalifornium\\t0.0\\n99\\tEs\\tEinsteinium\\t0.0\\n100\\tFm\\tFermium\\t0.0\\n101\\tMd\\tMendelevium\\t0.0\\n102\\tNo\\tNobelium\\t0.0\\n103\\tLr\\tLawrencium\\t0.0\\n104\\tRf\\tRutherfordium\\t0.0\\n105\\tDb\\tDubnium\\t0.0\\n106\\tSg\\tSeaborgium\\t0.0\\n107\\tBh\\tBohrium\\t0.0\\n108\\tHs\\tHassium\\t0.0\\n109\\tMt\\tMeitnerium\\t0.0\\n110\\tDs\\tDarmstadtium\\t0.0\\n111\\tRg\\tRoentgenium\\t0.0\\n112\\tCn\\tCopernicium\\t0.0\\n113\\tUut\\tUnuntrium\\t0.0\\n114\\tUuq\\t\\t0.0\\n115\\tUup\\tUnunpentium\\t0.0\\n116\\tUuh\\t\\t0.0\\n117\\tUus\\tUnunseptium\\t0.0','[\\r\\n]+',0);for(g=0;g<k.length;g++){m=Qj(k[g],'\\t',0);c=new Ps(Oi(m[3]),Tj(m[1]),m[2],Pi(m[0]));hn(Ft,c.g,c);hn(e,m[0],c)}k=Qj('1\\t1.007825032071\\t99.9885\\t1\\n2\\t2.01410177784\\t0.0115\\t1\\n3\\t3.016049277725\\t0\\t1\\n4\\t3.016029319126\\t0.00013\\t2\\n5\\t4.002603254156\\t99.99987\\t2\\n6\\t6.01512279516\\t7.59\\t3\\n7\\t7.016004558\\t92.41\\t3\\n8\\t9.01218224\\t100\\t4\\n9\\t10.01293704\\t19.9\\t5\\n10\\t11.00930544\\t80.1\\t5\\n11\\t12.0\\t98.93\\t6\\n12\\t13.00335483781\\t1.07\\t6\\n13\\t14.0032419894\\t0\\t6\\n14\\t14.00307400486\\t99.636\\t7\\n15\\t15.00010889827\\t0.364\\t7\\n17\\t16.9991317012\\t0.038\\t8\\n16\\t15.9949146195616\\t99.757\\t8\\n18\\t17.99916107\\t0.205\\t8\\n19\\t18.998403227\\t100\\t9\\n21\\t20.993846684\\t0.27\\t10\\n20\\t19.992440175419\\t90.48\\t10\\n22\\t21.99138511419\\t9.25\\t10\\n23\\t22.989769280929\\t100\\t11\\n25\\t24.985836923\\t10\\t12\\n24\\t23.98504170014\\t78.99\\t12\\n26\\t25.9825929293\\t11.01\\t12\\n27\\t26.9815386312\\t100\\t13\\n29\\t28.97649470022\\t4.685\\t14\\n28\\t27.976926532519\\t92.223\\t14\\n30\\t29.973770173\\t3.092\\t14\\n31\\t30.973761632\\t100\\t15\\n34\\t33.9678669012\\t4.25\\t16\\n35\\t35.967080762\\t0.01\\t16\\n32\\t31.9720710015\\t94.99\\t16\\n33\\t32.9714587615\\t0.75\\t16\\n36\\t34.968852684\\t75.76\\t17\\n37\\t36.965902595\\t24.24\\t17\\n38\\t35.96754510629\\t0.3365\\t18\\n39\\t37.96273244\\t0.0632\\t18\\n40\\t39.962383122529\\t99.6003\\t18\\n42\\t39.9639984821\\t0.0117\\t19\\n43\\t40.9618257621\\t6.7302\\t19\\n41\\t38.963706682\\t93.2581\\t19\\n49\\t47.9525344\\t0.187\\t20\\n48\\t45.953692624\\t0.004\\t20\\n46\\t42.95876663\\t0.135\\t20\\n47\\t43.95548184\\t2.086\\t20\\n44\\t39.9625909822\\t96.941\\t20\\n45\\t41.9586180127\\t0.647\\t20\\n50\\t44.95591199\\t100\\t21\\n51\\t45.95263169\\t8.25\\t22\\n55\\t49.94479129\\t5.18\\t22\\n54\\t48.94787009\\t5.41\\t22\\n53\\t47.94794639\\t73.72\\t22\\n52\\t46.95176319\\t7.44\\t22\\n57\\t50.943959511\\t99.75\\t23\\n56\\t49.947158511\\t0.25\\t23\\n59\\t51.94050758\\t83.789\\t24\\n58\\t49.946044211\\t4.345\\t24\\n61\\t53.93888048\\t2.365\\t24\\n60\\t52.94064948\\t9.501\\t24\\n62\\t54.93804517\\t100\\t25\\n64\\t55.93493757\\t91.754\\t26\\n65\\t56.93539407\\t2.119\\t26\\n66\\t57.93327568\\t0.282\\t26\\n63\\t53.93961057\\t5.845\\t26\\n67\\t58.93319507\\t100\\t27\\n68\\t57.93534297\\t68.0769\\t28\\n69\\t59.93078647\\t26.2231\\t28\\n70\\t60.93105607\\t1.1399\\t28\\n71\\t61.92834516\\t3.6345\\t28\\n72\\t63.92796607\\t0.9256\\t28\\n73\\t62.92959756\\t69.15\\t29\\n74\\t64.92778957\\t30.85\\t29\\n76\\t65.92603341\\t27.975\\t30\\n77\\t66.92712731\\t4.102\\t30\\n78\\t67.92484421\\t19.024\\t30\\n79\\t69.925319321\\t0.631\\t30\\n75\\t63.92914227\\t48.268\\t30\\n81\\t70.924701311\\t39.892\\t31\\n80\\t68.925573613\\t60.108\\t31\\n85\\t73.921177818\\t36.72\\t32\\n84\\t72.923458918\\t7.76\\t32\\n86\\t75.921402618\\t7.83\\t32\\n83\\t71.922075818\\t27.31\\t32\\n82\\t69.924247411\\t20.38\\t32\\n87\\t74.92159652\\t100\\t33\\n93\\t81.916699422\\t8.73\\t34\\n92\\t79.916521321\\t49.61\\t34\\n89\\t75.919213618\\t9.37\\t34\\n88\\t73.922476418\\t0.89\\t34\\n91\\t77.917309118\\t23.77\\t34\\n90\\t76.919914018\\t7.63\\t34\\n95\\t80.916290621\\t49.31\\t35\\n94\\t78.918337122\\t50.69\\t35\\n100\\t83.9115073\\t56.987\\t36\\n101\\t85.9106107311\\t17.279\\t36\\n98\\t81.913483619\\t11.593\\t36\\n99\\t82.9141363\\t11.5\\t36\\n96\\t77.920364812\\t0.355\\t36\\n97\\t79.916379016\\t2.286\\t36\\n102\\t84.91178973812\\t72.17\\t37\\n103\\t86.90918052713\\t27.83\\t37\\n106\\t86.908877112\\t7\\t38\\n107\\t87.905612112\\t82.58\\t38\\n104\\t83.9134253\\t0.56\\t38\\n105\\t85.909260212\\t9.86\\t38\\n108\\t88.905848327\\t100\\t39\\n113\\t95.90827343\\t2.8\\t40\\n112\\t93.906315226\\t17.38\\t40\\n110\\t90.905645825\\t11.22\\t40\\n111\\t91.905040825\\t17.15\\t40\\n109\\t89.904704425\\t51.45\\t40\\n114\\t92.906378126\\t100\\t41\\n119\\t96.906021521\\t9.56\\t42\\n118\\t95.904679521\\t16.68\\t42\\n117\\t94.905842121\\t15.9\\t42\\n116\\t93.905088321\\t9.23\\t42\\n115\\t91.9068114\\t14.77\\t42\\n121\\t99.9074776\\t9.67\\t42\\n120\\t97.905408221\\t24.19\\t42\\n124\\t98.906254721\\t0\\t43\\n123\\t97.9072164\\t0\\t43\\n122\\t96.9063655\\t0\\t43\\n129\\t100.905582122\\t17.06\\t44\\n127\\t98.905939322\\t12.76\\t44\\n128\\t99.904219522\\t12.6\\t44\\n126\\t97.9052877\\t1.87\\t44\\n131\\t103.9054333\\t18.62\\t44\\n125\\t95.9075988\\t5.54\\t44\\n130\\t101.904349322\\t31.55\\t44\\n132\\t102.9055043\\t100\\t45\\n137\\t107.9038924\\t26.46\\t46\\n136\\t105.9034864\\t27.33\\t46\\n138\\t109.90515312\\t11.72\\t46\\n133\\t101.9056093\\t1.02\\t46\\n135\\t104.9050854\\t22.33\\t46\\n134\\t103.9040364\\t11.14\\t46\\n139\\t106.9050975\\t51.839\\t47\\n140\\t108.9047523\\t48.161\\t47\\n141\\t105.9064596\\t1.25\\t48\\n143\\t109.903002129\\t12.49\\t48\\n142\\t107.9041846\\t0.89\\t48\\n144\\t110.904178129\\t12.8\\t48\\n145\\t111.902757829\\t24.13\\t48\\n146\\t112.904401729\\t12.22\\t48\\n147\\t113.903358529\\t28.73\\t48\\n148\\t115.9047563\\t7.49\\t48\\n149\\t112.9040583\\t4.29\\t49\\n150\\t114.9038785\\t95.71\\t49\\n152\\t113.9027793\\t0.66\\t50\\n153\\t114.9033423\\t0.34\\t50\\n154\\t115.9017413\\t14.54\\t50\\n155\\t116.9029523\\t7.68\\t50\\n156\\t117.9016033\\t24.22\\t50\\n157\\t118.9033083\\t8.59\\t50\\n158\\t119.902194727\\t32.58\\t50\\n159\\t121.903439029\\t4.63\\t50\\n160\\t123.905273915\\t5.79\\t50\\n151\\t111.9048185\\t0.97\\t50\\n162\\t122.904214022\\t42.79\\t51\\n161\\t120.903815724\\t57.21\\t51\\n170\\t129.906224421\\t34.08\\t52\\n169\\t127.904463119\\t31.74\\t52\\n168\\t125.903311716\\t18.84\\t52\\n163\\t119.9040201\\t0.09\\t52\\n167\\t124.904430716\\t7.07\\t52\\n166\\t123.902817916\\t4.74\\t52\\n165\\t122.904270016\\t0.89\\t52\\n164\\t121.903043916\\t2.55\\t52\\n171\\t126.9044734\\t100\\t53\\n175\\t128.90477948\\t26.4006\\t54\\n174\\t127.903531315\\t1.9102\\t54\\n173\\t125.9042747\\t0.089\\t54\\n172\\t123.90589302\\t0.0952\\t54\\n178\\t131.90415351\\t26.9086\\t54\\n179\\t133.90539459\\t10.4357\\t54\\n176\\t129.90350808\\t4.071\\t54\\n177\\t130.90508241\\t21.2324\\t54\\n180\\t135.9072198\\t8.8573\\t54\\n181\\t132.90545193324\\t100\\t55\\n186\\t135.90457594\\t7.854\\t56\\n187\\t136.90582745\\t11.232\\t56\\n184\\t133.90450844\\t2.417\\t56\\n185\\t134.90568864\\t6.592\\t56\\n188\\t137.90524725\\t71.698\\t56\\n182\\t129.90632083\\t0.106\\t56\\n183\\t131.905061311\\t0.101\\t56\\n190\\t138.906353326\\t99.91\\t57\\n189\\t137.9071124\\t0.09\\t57\\n191\\t135.90717214\\t0.185\\t58\\n193\\t139.905438726\\t88.45\\t58\\n192\\t137.90599111\\t0.251\\t58\\n194\\t141.9092443\\t11.114\\t58\\n195\\t140.907652826\\t100\\t59\\n201\\t147.9168933\\t5.7\\t60\\n200\\t145.913116925\\t17.2\\t60\\n202\\t149.9208913\\t5.6\\t60\\n197\\t142.909814325\\t12.2\\t60\\n196\\t141.907723325\\t27.2\\t60\\n199\\t144.912573625\\t8.3\\t60\\n198\\t143.910087325\\t23.8\\t60\\n204\\t146.915138526\\t0\\t61\\n203\\t144.9127493\\t0\\t61\\n205\\t143.9119993\\t3.07\\t62\\n207\\t147.914822726\\t11.24\\t62\\n206\\t146.914897926\\t14.99\\t62\\n208\\t148.917184726\\t13.82\\t62\\n209\\t149.917275526\\t7.38\\t62\\n210\\t151.919732427\\t26.75\\t62\\n211\\t153.922209327\\t22.75\\t62\\n212\\t150.919850226\\t47.81\\t63\\n213\\t152.921230326\\t52.19\\t63\\n220\\t159.927054127\\t21.86\\t64\\n216\\t154.922622027\\t14.8\\t64\\n217\\t155.922122727\\t20.47\\t64\\n218\\t156.923960127\\t15.65\\t64\\n219\\t157.924103927\\t24.84\\t64\\n214\\t151.919791027\\t0.2\\t64\\n215\\t153.920865627\\t2.18\\t64\\n221\\t158.925346827\\t100\\t65\\n222\\t155.9242837\\t0.056\\t66\\n223\\t157.9244094\\t0.095\\t66\\n228\\t163.929174827\\t28.26\\t66\\n227\\t162.928731227\\t24.896\\t66\\n226\\t161.926798427\\t25.475\\t66\\n225\\t160.926933427\\t18.889\\t66\\n224\\t159.925197527\\t2.329\\t66\\n229\\t164.930322127\\t100\\t67\\n235\\t169.93546433\\t14.91\\t68\\n234\\t167.932370227\\t26.978\\t68\\n233\\t166.932048227\\t22.869\\t68\\n232\\t165.930293127\\t33.503\\t68\\n231\\t163.9292003\\t1.601\\t68\\n230\\t161.9287784\\t0.139\\t68\\n236\\t168.934213327\\t100\\t69\\n239\\t170.936325826\\t14.28\\t70\\n238\\t169.934761826\\t3.04\\t70\\n237\\t167.9338975\\t0.13\\t70\\n242\\t173.938862126\\t31.83\\t70\\n243\\t175.942571728\\t12.76\\t70\\n240\\t171.936381526\\t21.83\\t70\\n241\\t172.938210826\\t16.13\\t70\\n244\\t174.940771823\\t97.41\\t71\\n245\\t175.942686323\\t2.59\\t71\\n250\\t178.945816123\\t13.62\\t72\\n251\\t179.946550023\\t35.08\\t72\\n248\\t176.943220723\\t18.6\\t72\\n249\\t177.943698823\\t27.28\\t72\\n246\\t173.9400463\\t0.16\\t72\\n247\\t175.941408624\\t5.26\\t72\\n252\\t179.947464824\\t0.012\\t73\\n253\\t180.947995819\\t99.988\\t73\\n258\\t185.954364119\\t28.43\\t74\\n254\\t179.9467044\\t0.12\\t74\\n255\\t181.94820429\\t26.5\\t74\\n256\\t182.95022309\\t14.31\\t74\\n257\\t183.95093129\\t30.64\\t74\\n259\\t184.952955013\\t37.4\\t75\\n260\\t186.955753115\\t62.6\\t75\\n262\\t185.953838215\\t1.59\\t76\\n263\\t186.955750515\\t1.96\\t76\\n261\\t183.952489114\\t0.02\\t76\\n266\\t189.958447016\\t26.26\\t76\\n267\\t191.961480727\\t40.78\\t76\\n264\\t187.955838215\\t13.24\\t76\\n265\\t188.958147516\\t16.15\\t76\\n268\\t190.960594018\\t37.3\\t77\\n269\\t192.962926418\\t62.7\\t77\\n275\\t197.9678933\\t7.163\\t78\\n274\\t195.96495159\\t25.242\\t78\\n273\\t194.96479119\\t33.832\\t78\\n272\\t193.96268039\\t32.967\\t78\\n270\\t189.9599326\\t0.014\\t78\\n271\\t191.961038027\\t0.782\\t78\\n276\\t196.96656876\\t100\\t79\\n279\\t198.96827994\\t16.87\\t80\\n278\\t197.96676904\\t9.97\\t80\\n277\\t195.9658333\\t0.15\\t80\\n283\\t203.97349394\\t6.87\\t80\\n282\\t201.97064306\\t29.86\\t80\\n281\\t200.97030236\\t13.18\\t80\\n280\\t199.96832604\\t23.1\\t80\\n285\\t204.974427514\\t70.48\\t81\\n284\\t202.972344214\\t29.52\\t81\\n288\\t206.975896913\\t22.1\\t82\\n289\\t207.976652113\\t52.4\\t82\\n287\\t205.974465313\\t24.1\\t82\\n286\\t203.973043613\\t1.4\\t82\\n290\\t208.980398716\\t100\\t83\\n291\\t208.98243042\\t0\\t84\\n292\\t209.982873713\\t0\\t84\\n293\\t209.9871488\\t0\\t85\\n294\\t210.98749633\\t0\\t85\\n295\\t210.9906017\\t0\\t86\\n296\\t220.011394024\\t0\\t86\\n297\\t222.017577725\\t0\\t86\\n298\\t223.019735926\\t0\\t87\\n299\\t223.018502227\\t0\\t88\\n300\\t224.020211824\\t0\\t88\\n301\\t226.025409825\\t0\\t88\\n302\\t228.031070326\\t0\\t88\\n303\\t227.027752126\\t0\\t89\\n305\\t232.038055321\\t100\\t90\\n304\\t230.033133819\\t0\\t90\\n306\\t231.035884024\\t100\\t91\\n307\\t233.039635229\\t0\\t92\\n309\\t235.04392992\\t0.7204\\t92\\n308\\t234.04095212\\t0.0054\\t92\\n311\\t238.05078822\\t99.2742\\t92\\n310\\t236.04556802\\t0\\t92\\n313\\t237.04817342\\t0\\t93\\n312\\t236.0465705\\t0\\t93\\n315\\t239.05216342\\t0\\t94\\n314\\t238.04955992\\t0\\t94\\n317\\t241.05685152\\t0\\t94\\n316\\t240.05381352\\t0\\t94\\n319\\t244.0642045\\t0\\t94\\n318\\t242.05874262\\t0\\t94\\n320\\t241.05682912\\t0\\t95\\n321\\t243.061381125\\t0\\t95\\n326\\t247.0703545\\t0\\t96\\n327\\t248.0723495\\t0\\t96\\n324\\t245.065491222\\t0\\t96\\n325\\t246.067223722\\t0\\t96\\n322\\t243.061389122\\t0\\t96\\n323\\t244.06275262\\t0\\t96\\n328\\t247.0703076\\t0\\t97\\n329\\t249.074986728\\t0\\t97\\n332\\t251.0795875\\t0\\t98\\n333\\t252.0816265\\t0\\t98\\n330\\t249.074853524\\t0\\t98\\n331\\t250.076406122\\t0\\t98\\n334\\t252.0829805\\t0\\t99\\n335\\t257.0951057\\t0\\t100\\n337\\t260.1036534\\t0\\t101\\n336\\t258.0984315\\t0\\t101\\n338\\t259.1010311\\t0\\t102\\n339\\t262.1096322\\t0\\t103\\n340\\t265.1167046\\t0\\t104\\n341\\t268.1254557\\t0\\t105\\n342\\t271.133477\\t0\\t106\\n343\\t272.1380365\\t0\\t107\\n344\\t270.1346531\\t0\\t108\\n345\\t276.1511673\\t0\\t109\\n346\\t281.1620678\\t0\\t110\\n347\\t280.164478\\t0\\t111\\n348\\t285.1741178\\t0\\t112\\n349\\t284.1780886\\t0\\t113\\n350\\t289.1872879\\t0\\t114\\n351\\t288.1924992\\t0\\t115\\n352\\t292.20755101\\t0\\t117','[\\r\\n]+',0);for(h=0;h<k.length;h++){m=Qj(k[h],'\\t',0);c=en(e,m[3]);i=Oi(m[1]);j=Oi(m[2]);b=new Ct(ge(i+0.5),i,j,c.g);gn(c.b,new fj(b.c),b)}for(d=Vn(new Wn(Ft));un(d.a);){c=$n(d);Ks(c);if(c.b.b==0){l=new Ct(ge(c.c+0.5),c.c,100,c.g);gn(c.b,new fj(l.c),l)}}Gt=new zp;k=Qj(\"1\\tAbu\\t2-Aminobutyric acid diradical\\tC4H7NO\\r\\n2\\tAcet\\tAcetyl\\tC2H3O\\r\\n3\\tAcm\\tAcetamidomethyl\\tC3H6NO\\r\\n4\\tAdao\\tAdamantyloxy\\tC10H15O\\r\\n5\\tAib\\talpha-Aminoisobutyric acid diradical\\tC4H7NO\\r\\n6\\tAla\\tAlainine diradical\\tC3H5NO\\r\\n7\\tArg\\tArginine diradical\\tC6H12N4O\\r\\n8\\tArgp\\tArginine triradical\\tC6H11N4O\\r\\n9\\tAsn\\tAsparagine diradical\\tC4H6N2O2\\r\\n10\\tAsnp\\tAsparagine triradical\\tC4H5N2O2\\r\\n11\\tAsp\\tAspartic acid diradical\\tC4H5NO3\\r\\n12\\tAspp\\tAspartic acid triradical\\tC4H4NO3\\r\\n13\\tAsu\\talpha-Aminosuberic acid diradical\\tC8H13NO3\\r\\n14\\tAsup\\talpha-Aminosuberic acid triradical\\tC8H12NO3\\r\\n15\\tBoc\\tt-Butoxycarbonyl\\tC5H9O2\\r\\n16\\tBom\\tBenzyloxymethyl\\tC8H9O\\r\\n17\\tBrz\\t2-Bromobenzyloxycarbonyl\\tC8H6BrO2\\r\\n18\\tBu\\tButyl\\tC4H9\\r\\n19\\tBum\\tt-Butoxymethyl\\tC5H11O\\r\\n20\\tBz\\tBenzoyl\\tC7H5O\\r\\n21\\tBzl\\tBenzyl\\tC7H7\\r\\n22\\tBn\\tBenzyl\\tC7H7\\r\\n23\\tBzlo\\tBenzyloxy\\tC7H7O\\r\\n24\\tCha\\tbeta-Cyclohexylalanine diradical\\tC9H15NO\\r\\n25\\tChxo\\tCyclohexyloxy\\tC6H11O\\r\\n26\\tCit\\tCitrulline diradical\\tC6H11N3O2\\r\\n27\\tCitp\\tCitrulline triradical\\tC6H10N3O2\\r\\n28\\tClz\\t2-Chlorobenzyloxycarbonyl\\tC8H6ClO2\\r\\n29\\tCp\\tCyclopentadienyl\\tC5H5\\r\\n30\\tCys\\tCysteine diradical\\tC3H5NOS\\r\\n31\\tCysp\\tCysteine triradical\\tC3H4NOS\\r\\n32\\tD\\tDeuterium\\t[2H]\\r\\n33\\tDde\\tDde\\tC10H13O2\\r\\n34\\tDnp\\t2,4-Dinitrophenyl\\tC6H3N2O4\\r\\n35\\tEt\\tEthyl\\tC2H5\\r\\n36\\tFmoc\\tFluorenylmethoxycarbonyl\\tC15H11O2\\r\\n37\\tFor\\tFormyl\\tCHO\\r\\n38\\tGln\\tGlutamine diradical\\tC5H8N2O2\\r\\n39\\tGlnp\\tGlutamine triradical\\tC5H7N2O2\\r\\n40\\tGlp\\tPyroglutamine\\tC5H5NO2\\r\\n41\\tGlu\\tGlutamic acid diradical\\tC5H7NO3\\r\\n42\\tGlup\\tGlutamic acid triradical\\tC5H6NO3\\r\\n43\\tGly\\tGlycine diradical\\tC2H3NO\\r\\n44\\tHci\\tHomocitrulline diradical\\tC7H13N3O2\\r\\n45\\tHcip\\tHomocitrulline triradical\\tC7H12N3O2\\r\\n46\\tHis\\tHistidine diradical\\tC6H7N3O\\r\\n47\\tHisp\\tHistidine triradical\\tC6H6N3O\\r\\n48\\tHser\\tHomoserine diradical\\tC4H7NO2\\r\\n49\\tHserp\\tHomoserine triradical\\tC4H6NO2\\r\\n50\\tHyp\\tHydroxyproline diradical\\tC5H7NO2\\r\\n51\\tHypp\\tHydroxyproline triradical\\tC5H6NO2\\r\\n52\\tIle\\tIsoleucine diradical\\tC6H11NO\\r\\n53\\tIvdde\\t1-[4,4-dimethyl-2,6-dioxocyclohexylidene)3-methylb\\tC14H21O2\\r\\n54\\tLeu\\tLeucine diradical\\tC6H11NO\\r\\n55\\tLys\\tLysine diradical\\tC6H12N2O\\r\\n56\\tLysp\\tLysine triradical\\tC6H11N2O\\r\\n57\\tMbh\\t4,4'-Dimethoxybenzhydryl\\tC15H15O2\\r\\n58\\tMe\\tMethyl\\tCH3\\r\\n59\\tMebzl\\t4-Methylbenzyl\\tC8H9\\r\\n60\\tMeobzl\\t4-Methoxybenzyl1-[4,4-dimethyl-2,6-dioxocyclohexyl\\tC8H9O\\r\\n61\\tMet\\tMethionine diradical\\tC5H9NOS\\r\\n62\\tMmt\\t4-Methoxytrityl\\tC20H17O\\r\\n63\\tMtc\\t2,2,5,7,8-pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n64\\tMtr\\t4-Methoxy-2,3,6-trimethylbenzenesulphonyl\\tC10H13O3S\\r\\n65\\tMts\\tMesitylene-2-sulphonyl\\tC9H11O2S\\r\\n66\\tMtt\\t4-Methyltrityl\\tC20H17\\r\\n67\\tNle\\tNorleucine diradical\\tC6H11NO\\r\\n68\\tNpys\\t3-Nitro-2-pyridinesulphenyl\\tC5H3N2O2S\\r\\n69\\tNva\\tNorvaline diradical\\tC5H9NO\\r\\n70\\tOdmab\\tOdmab\\tC20H26NO3\\r\\n71\\tOrn\\tOrnithine diradical\\tC5H10N2O\\r\\n72\\tOrnp\\tOrnithine triradical\\tC5H9N2O\\r\\n73\\tPbf\\t2,2,4,6,7-pentamethyldihydrobenzofurane-5-sulfonyl\\tC13H17O3S\\r\\n74\\tPen\\tPenicillamine diradical\\tC5H9NOS\\r\\n75\\tPenp\\tPenicillamine triradical\\tC5H8NOS\\r\\n76\\tPh\\tPhenyl\\tC6H5\\r\\n77\\tPhe\\tPhenylalanine diradical\\tC9H9NO\\r\\n78\\tPhepcl\\t4-Chlorophenylalanine diradical\\tC9H8ClNO\\r\\n79\\tPhg\\tPhenylglycine\\tC8H7NO\\r\\n80\\tPmc\\t2,2,5,7,8-Pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n81\\tPro\\tProline diradical\\tC5H7NO\\r\\n82\\tPyr\\tPyroglutamine\\tC5H5NO2\\r\\n83\\tSar\\tSarcosine diradical\\tC3H5NO\\r\\n84\\tSer\\tSerine diradical\\tC3H5NO2\\r\\n85\\tSerp\\tSerine triradical\\tC3H4NO2\\r\\n86\\tSta\\tStatine diradical\\tC8H15NO2\\r\\n87\\tStap\\tStatine triradical\\tC8H14NO2\\r\\n88\\tTacm\\tTrimethylacetamidomethyl\\tC6H12NO\\r\\n89\\tTbdms\\tt-Butyldimethylsilyl\\tC6H15Si\\r\\n90\\tTbu\\tt-Butyl\\tC4H9\\r\\n91\\tTbuo\\tt-Butoxy\\tC4H9O\\r\\n92\\tTbuthio\\tt-Butylthio\\tC4H9S\\r\\n93\\tTfa\\tTrifluoroacetyl\\tC2F3O\\r\\n94\\tThi\\tbeta-(2-thenyl)alanine\\tC7H7NOS\\r\\n95\\tThr\\tThreonine diradical\\tC4H7NO2\\r\\n96\\tThrp\\tThreonine triradical\\tC4H6NO2\\r\\n97\\tTips\\tTriisopropylsilyl\\tC9H21Si\\r\\n98\\tTms\\tTrimethylsilyl\\tC3H9Si\\r\\n99\\tTos\\tTosyl\\tC7H7O2S\\r\\n100\\tTrp\\tTryptophan diradical\\tC11H10N2O\\r\\n101\\tTrpp\\tTryptophan triradical\\tC11H9N2O\\r\\n102\\tTrt\\tTrityl\\tC19H15\\r\\n103\\tTyr\\tTyrosine diradical\\tC9H9NO2\\r\\n104\\tTyrp\\tTyrosine triradical\\tC9H8NO2\\r\\n105\\tVal\\tValine\\tC5H9NO\\r\\n106\\tValoh\\tbeta-Hydroxyvaline diradical\\tC5H9NO2\\r\\n107\\tValohp\\tbeta-Hydroxyvaline triradical\\tC5H8NO2\\r\\n108\\tXan\\tXanthyl\\tC13H9O\\r\\n109\\tZ\\tBenzyloxycarbonyl\\tC8H7O2\\r\\n110\\tT\\tTritium\\t[3H]\",'[\\r\\n]+',0);for(f=0;f<k.length;f++){m=Qj(k[f],'\\t',0);try{hn(Gt,m[1],new Bt(m[1],m[2],m[3],Ft,Gt))}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}}}\n\tvar Ou=2147483647,Pu={3:1,9:1},Qu={3:1,6:1,9:1},Ru={3:1},Su=4194303,Tu=1048575,Uu=524288,Vu=4194304,Wu=17592186044416,Xu=-9223372036854775808,Yu=1000000000,Zu=65536,$u=-2147483648,_u=65535,av={28:1,3:1},bv=100000,cv=1000000,dv=10000000000,ev=0.3010299956639812,fv=4294967296,gv=1073741824,hv={35:1},iv={37:1,27:1},jv={3:1,51:1},kv={3:1,50:1},lv={3:1,18:1,29:1,26:1},mv=4.9E-324,nv=5.4857990946E-4;var _,Kh,Ig={},Eg=-1;Kg(1,null,{},db);_.eQ=function eb(a){return this===a};_.gC=function gb(){return this.cZ};_.hC=function ib(){return Nb(this)};_.tS=function kb(){return cb(this)};_.toString=function(){return this.tS()};Yd={3:1,116:1,18:1,2:1};Ng();var Yd;Kg(68,1,{},vi);_.u=function wi(a){var b;b=new vi;b.e=4;a>1?(b.c=Di(this,a-1)):(b.c=this);return b};_.v=function Ci(){ti(this);return this.b};_.w=function Ei(){return ui(this)};_.A=function Gi(){ti(this);return this.i};_.B=function Ii(){return (this.e&4)!=0};_.C=function Ji(){return (this.e&1)!=0};_.tS=function Mi(){return ((this.e&2)!=0?'interface ':(this.e&1)!=0?'':'class ')+(ti(this),this.k)};_.e=0;_.g=0;var si=1;var $e=yi(1),me=yi(0),Oe=yi(68);Kg(9,1,Pu);_.n=function pb(){return this.f};_.tS=function qb(){return ob(this)};var ff=yi(9);Kg(6,9,Qu);var Se=yi(6);Kg(10,6,Qu,tb);var _e=yi(10);Kg(83,10,Qu);var oe=yi(83);Kg(38,83,{38:1,3:1,6:1,9:1},xb);_.n=function yb(){wb(this);return this.c};var ub;var le=yi(38);var Ab;Kg(117,1,{});var ne=yi(117);var Eb=0,Fb=0,Gb=0,Hb=-1;Kg(138,1,{});var lf=yi(138);Kg(139,138,{});var mf=yi(139);Kg(112,139,{},Xb);_.b={l:0,m:0,h:0};_.c=0;var Sb;var pe=yi(112);Kg(107,117,{},hc);var dc;var qe=yi(107);var kc;Kg(133,1,{});var ue=yi(133);Kg(84,133,{},qc);_.o=function rc(a,b){var c={},j;a.fnStack=[];var d=arguments.callee.caller;while(d){var e=(lc(),d.name||(d.name=oc(d.toString())));a.fnStack.push(e);var f=':'+e;var g=c[f];if(g){var h,i;for(h=0,i=g.length;h<i;h++){if(g[h]===d){return}}}(g||(c[f]=[])).push(d);d=d.caller}};_.p=function sc(a){var b,c,d,e;d=(lc(),a&&a.fnStack&&a.fnStack instanceof Array?a.fnStack:[]);c=d.length;e=Sd(af,Ru,31,c,0,1);for(b=0;b<c;b++){e[b]=new Ej(d[b],null,-1)}return e};var re=yi(84);Kg(134,133,{});_.o=function vc(c,d){function e(b){if(!('stack' in b)){try{throw b}catch(a){}}return b}\n\tvar f;typeof d=='string'?(f=e(new Error(d))):d instanceof Object&&'stack' in d?(f=d):(f=e(new Error));c.__gwt$backingJsError=f};_.q=function wc(a,b,c,d){return new Ej(b,a+'@'+d,c<0?-1:c)};_.p=function xc(a){var b,c,d,e,f,g,h;e=(lc(),h=a.__gwt$backingJsError,h&&h.stack?h.stack.split('\\n'):[]);f=Sd(af,Ru,31,0,0,1);b=0;d=e.length;if(d==0){return f}g=uc(this,e[0]);Jj(g.d,'anonymous')||(f[b++]=g);for(c=1;c<d;c++){f[b++]=uc(this,e[c])}return f};var te=yi(134);Kg(85,134,{},yc);_.q=function zc(a,b,c,d){return new Ej(b,a,-1)};var se=yi(85);Kg(132,1,{});_.s=function Kc(){return null};var Ce=yi(132);Kg(66,132,{66:1},Oc,Pc);_.eQ=function Qc(a){if(!_d(a,66)){return false}return this.a==a.a};_.r=function Rc(){return Uc};_.hC=function Sc(){return Nb(this.a)};_.tS=function Tc(){var a,b,c;c=new uk('[');for(b=0,a=this.a.length;b<a;b++){b>0&&(c.a+=',',c);pk(c,Lc(this,b))}c.a+=']';return c.a};var ve=yi(66);Kg(76,132,{},Yc);_.r=function Zc(){return _c};_.tS=function $c(){return ei(),''+this.a};_.a=false;var Vc,Wc;var we=yi(76);Kg(110,10,Qu,ad);var xe=yi(110);Kg(106,132,{},dd);_.r=function ed(){return gd};_.tS=function fd(){return 'null'};var bd;var ye=yi(106);Kg(8,132,{8:1},hd);_.eQ=function jd(a){if(!_d(a,8)){return false}return this.a==a.a};_.r=function kd(){return nd};_.hC=function ld(){return ge((new Ri(this.a)).a)};_.tS=function md(){return this.a+''};_.a=0;var ze=yi(8);Kg(54,132,{54:1},td,ud);_.eQ=function vd(a){if(!_d(a,54)){return false}return this.a==a.a};_.r=function wd(){return zd};_.hC=function xd(){return Nb(this.a)};_.tS=function yd(){var a,b,c,d,e,f;f=new uk('{');a=true;e=od(this,Sd(ef,Ru,2,0,4,1));for(c=0,d=e.length;c<d;++c){b=e[c];a?(a=false):(f.a+=', ',f);qk(f,Cb(b));f.a+=':';pk(f,pd(this,b))}f.a+='}';return f.a};var Ae=yi(54);var Ad;Kg(11,132,{11:1},Id);_.eQ=function Jd(a){if(!_d(a,11)){return false}return Jj(this.a,a.a)};_.r=function Kd(){return Od};_.hC=function Ld(){return jk(this.a)};_.s=function Md(){return this};_.tS=function Nd(){return Cb(this.a)};var Be=yi(11);var Rg;var hh;var Fh,Gh,Hh,Ih;Kg(60,9,Pu);var Re=yi(60);Kg(17,60,Pu);var Me=yi(17);Kg(78,17,Pu,Uh);var He=yi(78);Kg(45,1,{});_.tS=function Yh(){return this.a};var Ie=yi(45);Kg(41,10,Qu,Zh);var Je=yi(41);Kg(49,10,Qu,$h,_h);var Ve=yi(49);Kg(109,49,Qu,ai);var Ke=yi(109);Kg(43,10,Qu,bi);var Le=yi(43);Kg(52,1,{3:1,52:1,18:1},fi);_.t=function hi(a){return gi(this.a,a.a)};_.eQ=function ii(a){return _d(a,52)&&a.a==this.a};_.hC=function ji(){return this.a?1231:1237};_.tS=function ki(){return ''+this.a};_.a=false;var ci,di;var Ne=yi(52);Kg(44,1,{3:1,44:1});var Ni;var Ze=yi(44);Kg(7,44,{3:1,18:1,7:1,44:1},Ri);_.t=function Ti(a){return Si(this.a,a.a)};_.eQ=function Ui(a){return Qi(this,a)};_.hC=function Vi(){return ge(this.a)};_.tS=function Yi(){return ''+this.a};_.a=0;var Pe=yi(7);Kg(29,1,{3:1,18:1,29:1});_.t=function $i(a){return this.b-a.b};_.eQ=function _i(a){return this===a};_.hC=function aj(){return Nb(this)};_.tS=function bj(){return this.a!=null?this.a:''+this.b};_.b=0;var Qe=yi(29);Kg(56,10,Qu,cj);var Te=yi(56);Kg(111,10,Qu,dj);var Ue=yi(111);Kg(19,44,{3:1,18:1,19:1,44:1},fj);_.t=function hj(a){return ej(this,a)};_.eQ=function ij(a){return _d(a,19)&&a.a==this.a};_.hC=function jj(){return this.a};_.tS=function mj(){return ''+this.a};_.a=0;var We=yi(19);var pj;Kg(59,10,Qu,Bj,Cj);var Xe=yi(59);Kg(20,56,{3:1,6:1,20:1,9:1},Dj);var Ye=yi(20);Kg(31,1,{3:1,31:1},Ej);_.eQ=function Fj(a){var b;if(_d(a,31)){b=a;return this.c==b.c&&Pq(this.d,b.d)&&Pq(this.a,b.a)&&Pq(this.b,b.b)}return false};_.hC=function Gj(){return gp(Vd(Rd($e,1),Ru,1,3,[oj(this.c),this.a,this.d,this.b]))};_.tS=function Hj(){return this.a+'.'+this.d+'('+(this.b!=null?this.b:'Unknown Source')+(this.c>=0?':'+this.c:'')+')'};_.c=0;var af=yi(31);var ef=yi(2);var ek,fk=0,gk;Kg(34,45,{116:1},mk,nk);var bf=yi(34);\n\tKg(23,45,{116:1},sk,tk,uk);var cf=yi(23);Kg(67,49,Qu,vk);var df=yi(67);Kg(42,10,Qu,xk,yk);var gf=yi(42);Kg(14,44,{3:1,18:1,44:1,14:1},Ok,Pk,Qk,Rk);_.t=function Uk(a){return Ik(this,a)};_.eQ=function Xk(a){var b;if(this===a){return true}if(_d(a,14)){b=a;return b.e==this.e&&(this.a<54?b.f==this.f:ml(this.c,b.c))}return false};_.hC=function Yk(){var a;if(this.b!=0){return this.b}if(this.a<54){a=mh(this.f);this.b=Ch(jh(a,{l:Su,m:Su,h:Tu}));this.b=33*this.b+Ch(jh(yh(a,32),{l:Su,m:Su,h:Tu}));this.b=17*this.b+ge(this.e);return this.b}this.b=17*pl(this.c)+ge(this.e);return this.b};_.tS=function _k(){return Nk(this)};_.a=0;_.b=0;_.d=0;_.e=0;_.f=0;var zk,Ak,Bk,Ck,Dk,Ek,Fk,Gk;var hf=yi(14);Kg(5,44,{3:1,18:1,44:1,5:1},xl,yl,zl,Al,Bl,Cl);_.t=function El(a){return jl(this,a)};_.eQ=function Fl(a){return ml(this,a)};_.hC=function Hl(){return pl(this)};_.tS=function Jl(){return Xl(this,0)};_.b=-2;_.c=0;_.d=0;_.e=0;var bl,cl,dl,el,fl,gl;var jf=yi(5);var Sl,Tl;var jm,km,lm;Kg(24,29,{3:1,18:1,29:1,24:1},Gm);var xm,ym,zm,Am,Bm,Cm,Dm,Em;var kf=zi(24,Hm);Kg(130,1,{});_.F=function Mm(a){return Jm(this,a)};_.H=function Nm(a){var b,c,d;d=this.G();a.length<d&&(a=Qd(a,d));c=this.D();for(b=0;b<d;++b){a[b]=c.O()}a.length>d&&(a[d]=null);return a};_.tS=function Om(){return Lm(this)};var nf=yi(130);Kg(129,1,{50:1});_.I=function Sm(a){return Pm(this,a)};_.J=function Tm(a){return !!Qm(this,a)};_.eQ=function Um(a){var b,c,d;if(a===this){return true}if(!_d(a,50)){return false}d=a;if(this.G()!=d.G()){return false}for(c=d.K().D();c.N();){b=c.O();if(!this.I(b)){return false}}return true};_.L=function Vm(a){return Xm(Qm(this,a))};_.hC=function Ym(){return lp(this.K())};_.G=function Zm(){return this.K().G()};_.tS=function $m(){var a,b,c,d;d=new uk('{');a=false;for(c=this.K().D();c.N();){b=c.O();a?(d.a+=', ',d):(a=true);qk(d,Rm(this,b.T()));d.a+='=';qk(d,Rm(this,b.U()))}d.a+='}';return d.a};var Cf=yi(129);Kg(79,129,{50:1});_.J=function jn(a){return _m(this,a)};_.K=function kn(){return new qn(this)};_.L=function ln(a){return dn(this,a)};_.M=function mn(a,b){return gn(this,a,b)};_.G=function nn(){return this.b};_.b=0;var qf=yi(79);Kg(131,130,hv);_.eQ=function on(a){var b;if(a===this){return true}if(!_d(a,35)){return false}b=a;if(b.G()!=this.G()){return false}return Km(this,b)};_.hC=function pn(){return lp(this)};var Hf=yi(131);Kg(61,131,hv,qn);_.F=function rn(a){if(_d(a,27)){return Pm(this.a,a)}return false};_.D=function sn(){return new wn(this.a)};_.G=function tn(){return this.a.b};var pf=yi(61);Kg(62,1,{},wn);_.N=function xn(){return un(this)};_.O=function yn(){return vn(this)};var of=yi(62);Kg(135,130,{51:1});_.P=function zn(a,b){throw new yk('Add not supported on this list')};_.Q=function An(a){this.P(this.G(),a);return true};_.eQ=function Bn(a){var b,c,d,e,f;if(a===this){return true}if(!_d(a,51)){return false}f=a;if(this.G()!=f.G()){return false}e=f.D();for(c=this.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(!(ee(b)===ee(d)||b!=null&&fb(b,d))){return false}}return true};_.hC=function Cn(){return mp(this)};_.D=function Dn(){return new In(this)};_.S=function En(a){throw new yk('Remove not supported on this list')};var tf=yi(135);Kg(21,1,{},In);_.N=function Jn(){return Fn(this)};_.O=function Kn(){return Gn(this)};_.a=0;_.b=-1;var rf=yi(21);Kg(90,21,{},Ln);var sf=yi(90);Kg(63,131,hv,Nn);_.F=function On(a){return _m(this.a,a)};_.D=function Pn(){return Mn(this)};_.G=function Qn(){return this.a.b};var vf=yi(63);Kg(81,1,{},Sn);_.N=function Tn(){return un(this.a)};_.O=function Un(){return Rn(this)};var uf=yi(81);Kg(25,130,{},Wn);_.F=function Xn(a){return an(this.a,a)};_.D=function Yn(){return Vn(this)};_.G=function Zn(){return this.a.b};var xf=yi(25);Kg(82,1,{},_n);_.N=function ao(){return un(this.a)};_.O=function bo(){return $n(this)};var wf=yi(82);Kg(37,1,iv);_.eQ=function fo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.c,b.T())&&Pq(this.d,b.U())};_.T=function go(){return this.c};_.U=function ho(){return this.d};_.hC=function io(){return Qq(this.c)^Qq(this.d)};_.V=function jo(a){return co(this,a)};_.tS=function ko(){return this.c+'='+this.d};var yf=yi(37);Kg(53,37,{37:1,53:1,27:1},lo);var zf=yi(53);Kg(80,37,iv,mo);_.V=function no(a){throw new xk};var Af=yi(80);Kg(136,1,{27:1});_.eQ=function oo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.T(),b.T())&&Pq(this.U(),b.U())};_.hC=function po(){return Qq(this.T())^Qq(this.U())};_.tS=function qo(){return this.T()+'='+this.U()};var Bf=yi(136);Kg(137,129,{50:1});_.I=function wo(a){return ro(this,a)};_.J=function xo(a){return so(this,a)};_.K=function yo(){return new Bo(this)};_.L=function zo(a){return to(this,a)};var Gf=yi(137);Kg(73,131,hv,Bo);_.F=function Co(a){return _d(a,27)&&ro(this.a,a)};_.D=function Do(){return this.a.W()};_.G=function Eo(){return this.a.G()};var Df=yi(73);Kg(13,131,hv,Go);_.F=function Ho(a){return so(this.a,a)};_.D=function Io(){return Fo(this)};_.G=function Jo(){return this.a.d};var Ff=yi(13);Kg(97,1,{},Lo);_.N=function Mo(){return Fn(this.a.a)};_.O=function No(){return Ko(this)};var Ef=yi(97);Kg(46,135,jv,Xo,Yo);_.P=function Zo(a,b){Po(this,a,b)};_.Q=function $o(a){return Qo(this,a)};_.F=function _o(a){return So(this,a,0)!=-1};_.R=function ap(a){return Ro(this,a)};_.S=function bp(a){return To(this,a)};_.G=function cp(){return this.b.length};_.H=function fp(a){return Wo(this,a)};var If=yi(46);var op;Kg(108,1,{},qp);_.Y=function rp(a,b){Fc(a);Fc(b);return $j(a,b)};var Jf=yi(108);Kg(115,10,Qu,vp);var Kf=yi(115);Kg(114,10,Qu,wp);var Lf=yi(114);Kg(22,79,kv,zp);var Mf=yi(22);Kg(75,1,{},Hp);_.Z=function Ip(a){var b,c,d,e,f,g,h,i;for(g=Ep(this),h=0,i=g.length;h<i;++h){f=g[h];for(c=this.a[f],d=0,e=c.length;d<e;++d){b=c[d];if(xp(a,b.U())){return true}}}return false};_.$=function Jp(){return Object.create(null)};_._=function Kp(){return new Mp(this)};var Qf=yi(75);Kg(102,1,{},Mp);_.N=function Np(){return Lp(this)};_.O=function Op(){return Dc(Lp(this)),this.e=this.a[this.c++],this.e};_.b=-1;_.c=0;_.e=null;var Nf=yi(102);Kg(100,75,{},Pp);_.Z=function Qp(a){var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){var g=d[e];var h=g.U();if(this.ab(a,h)){return true}}}}return false};_.$=function Rp(){return {}};_._=function Sp(){var a=this.bb();var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){a.Q(d[e])}}}return a.D()};_.ab=function Tp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.bb=function Up(){return new Vp(this)};var Pf=yi(100);Kg(101,46,jv,Vp);_.S=function Wp(a){var b;return b=To(this,a),Gp(this.a,b.T()),b};var Of=yi(101);Kg(103,1,{},Xp);_.cb=function Yp(){return new Hp};_.db=function Zp(){return new mq};var Tf=yi(103);var $p;Kg(105,103,{},cq);_.db=function dq(){return new Lq};var Rf=yi(105);Kg(104,103,{},eq);_.cb=function fq(){return new Pp};_.db=function gq(){return new Cq};var Sf=yi(104);Kg(64,1,{},mq);_.Z=function nq(a){return hq(this,a)};_.eb=function oq(){return Object.create(null)};_._=function pq(){var a;a=this.hb();return new vq(this,a)};_.fb=function qq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.gb=function rq(a){return this.a[a]};_.hb=function sq(){return iq(this)};_.ib=function tq(a){return new yq(this,a)};_.jb=function uq(a,b){return jq(this,a,b)};var Zf=yi(64);Kg(89,1,{},vq);_.N=function wq(){return this.a<this.c.length};_.O=function xq(){return Dc(this.a<this.c.length),new yq(this.b,this.c[this.a++])};_.a=0;var Uf=yi(89);Kg(71,136,{27:1},yq);_.T=function zq(){return this.b};_.U=function Aq(){return this.a.gb(this.b)};_.V=function Bq(a){return this.a.jb(this.b,a)};var Vf=yi(71);Kg(86,64,{},Cq);_.Z=function Dq(a){var b=this.a;for(var c in b){if(c.charCodeAt(0)==58){var d=b[c];if(this.fb(a,d)){return true}}}return false};_.eb=function Eq(){return {}};_._=function Fq(){var a=this.kb();for(var b in this.a){if(b.charCodeAt(0)==58){var c=this.ib(b.substring(1));a.Q(c)}}return a.D()};_.gb=function Gq(a){return this.a[':'+a]};_.kb=function Hq(){return new Jq(this)};_.jb=function Iq(a,b){return jq(this,':'+a,b)};var Xf=yi(86);Kg(88,46,jv,Jq);_.S=function Kq(a){var b;return b=To(this,a),kq(this.a,':'+b.T()),b};var Wf=yi(88);Kg(87,64,{},Lq);_.Z=function Mq(a){var b;b=this.a['__proto__'];if(!(b===undefined)&&(ee(a)===ee(b)||a!=null&&fb(a,b))){return true}return hq(this,a)};_.hb=function Nq(){var a;a=iq(this);!(this.a['__proto__']===undefined)&&(a[a.length]='__proto__');return a};var Yf=yi(87);var $f=Ai();Kg(77,10,Qu,Oq);var _f=yi(77);Kg(74,135,jv,Sq);_.P=function Tq(a,b){Vq(a,this.a.b.length+1);Po(this.a,a,b)};_.Q=function Uq(a){return Rq(this,a)};_.F=function Wq(a){return So(this.a,a,0)!=-1};_.R=function Xq(a){return Vq(a,this.a.b.length),Ro(this.a,a)};_.D=function Yq(){return new In(this.a)};_.S=function Zq(a){return Vq(a,this.a.b.length),this.a.S(a)};_.G=function $q(){return this.a.b.length};_.H=function _q(a){return Wo(this.a,a)};_.tS=function ar(){return Lm(this.a)};var lg=yi(74);Kg(113,74,jv,dr);var ag=yi(113);Kg(58,137,kv,tr,ur);_.W=function vr(){return new Br(this)};_.K=function wr(){return new Fr(this)};_.X=function xr(a){var b,c,d;d=this.c;while(d){b=this.b.Y(a,d.c);if(b==0){return d}c=b<0?0:1;d=d.a[c]}return null};_.G=function yr(){return this.d};_.d=0;var jg=yi(58);Kg(72,1,{},Br);_.N=function Dr(){return Fn(this.a)};_.O=function Er(){return zr(this)};var bg=yi(72);Kg(12,73,hv,Fr);var cg=yi(12);Kg(40,53,{37:1,53:1,27:1,40:1},Gr);_.b=false;var dg=yi(40);Kg(65,1,{},Hr);_.tS=function Ir(){return 'State: mv='+this.c+' value='+this.d+' done='+this.a+' found='+this.b};_.a=false;_.b=false;_.c=false;var eg=yi(65);Kg(26,29,lv,Or);_.lb=function Pr(){return false};_.mb=function Qr(){return false};var Jr,Kr,Lr,Mr;var ig=zi(26,Rr);Kg(94,26,lv,Sr);_.mb=function Tr(){return true};var fg=zi(94,null);Kg(95,26,lv,Ur);_.lb=function Vr(){return true};_.mb=function Wr(){return true};var gg=zi(95,null);Kg(96,26,lv,Xr);_.lb=function Yr(){return true};var hg=zi(96,null);Kg(57,131,{3:1,35:1},$r,_r);_.F=function as(a){return so(this.g,a)};_.D=function bs(){return Fo(new Go(this.g))};_.G=function cs(){return this.g.d};var kg=yi(57);Kg(32,1,{18:1,32:1},js,ks,ls,ms);_.t=function ns(a){if(!_d(a,32))throw new yk('Not comparable: Atoms and '+ui(hb(a)));return ds(this,a)};_.eQ=function os(a){return es(this,a)};_.hC=function ps(){var a;a=this.a+this.i;return jk(a)};_.tS=function qs(){return is(this,null)};_.a=0;_.b=0;_.c=0;_.d=0;_.e=0;_.f=0;_.g=0;var mg=yi(32);Kg(33,58,kv,Fs);_.tS=function Gs(){return Cs(this)};_.a=10000;var og=yi(33);Kg(98,1,{},Hs);_.Y=function Is(a,b){return -$j(a.U(),b.U())};var ng=yi(98);Kg(55,1,{18:1},Os,Ps,Qs);_.t=function Rs(a){this.g+'-'+a.g;return Zj(this.g,a.g)};_.eQ=function Ss(a){var b;if(this===a)return true;if(pg!=hb(a))return false;b=a;if(Jj(this.g,b.g))return true;return false};_.tS=function Ts(){return Ns(this)};_.a=0;_.c=0;_.d=0;_.f=0;var pg=yi(55);Kg(99,1,{18:1},Xs);_.t=function Ys(a){return ej(new fj(this.a.c-this.a.d),oj(a.a.c-a.a.d))};_.tS=function Zs(){return this.a.i+' - '+this.a.d+' to '+this.a.c+' - current: '+this.b};_.b=0;_.c=0;_.d=0;var qg=yi(99);Kg(47,1,{},gt,ht);_.tS=function it(){return ft(this)};_.c=false;_.e=false;var sg=yi(47);Kg(30,57,{3:1,35:1},ut,vt,wt);_.tS=function xt(){return tt(this)};_.a=0;_.b='';_.e=false;_.f=0;var rg=yi(30);Kg(70,1,{},Bt);var tg=yi(70);Kg(39,1,{18:1,39:1},Ct);_.t=function Dt(a){var b;if(_d(a,39)){b=a;return this.c=b.c}else throw new yk('Cannot compare Isotope to '+a)};_.tS=function Et(){return 'Number: '+this.c+' - mass: '+this.b+' - percentage: '+this.d+' - symbol: '+this.a};_.b=0;_.c=0;_.d=0;var ug=yi(39);var Ft,Gt;Kg(4,6,{3:1,6:1,9:1,4:1},It);var vg=yi(4);Kg(91,1,{},Qt);_.a=0;_.b=0;_.e=null;_.f=0;var Jt=1;var yg=yi(91);Kg(48,1,{},Zt,$t,_t);_.b=0;var xg=yi(48);Kg(92,1,{},bu);_.Y=function cu(a,b){return au(this,a,b)};var wg=yi(92);var du;Kg(93,1,{},iu);_.a=0;_.b=0;_.c=null;var zg=yi(93);var ju;Kg(128,1,{},pu);_.nb=function ou(){};var nu=null;var Ag=yi(128);Kg(69,1,{18:1},Du);_.t=function Eu(a){return Cu(this,a)};_.a=0;_.c=0;var Bg=yi(69);Kg(16,1,{},Gu,Hu,Iu);var Cg=yi(16);Kg(15,1,{},Mu);var Dg=yi(15);var ke=Bi('I'),De=yi(119),Ee=yi(121),Fe=yi(null),Ge=yi(124),he=Bi('B'),je=Bi('D'),$f=Ai(),ie=Bi('C');_=Pg('$wnd.CI.Chemcalc');_.analyseMF=ru;_.getInfo=tu;_.mfFromMonoisotopicMass=uu;_.aa=nu;var Nu=Oh();var gwtOnLoad=gwtOnLoad=Nh;Lh(Rh);Ph('permProps',[[['user.agent','safari']]]);$sendStats('moduleStartup', 'moduleEvalEnd');gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);$sendStats('moduleStartup', 'end');$gwt && $gwt.permProps && __gwtModuleFunction.__moduleStartupDone($gwt.permProps);\n\t//# sourceURL=chemcalc-0.js\n\t\n\t        // End GWT code\n\t\n\t        var toReturn = $wnd[\"CI\"][\"Chemcalc\"];\n\t\n\t        toReturn.version = '3.0.4';\n\t\n\t        return toReturn;\n\t    }\n\t\n\t    var fakeWindow = {};\n\t\n\t    if (typeof module !== 'undefined' && module.exports) { // NodeJS\n\t        var timers = __webpack_require__(2);\n\t        fakeWindow.setTimeout = timers.setTimeout;\n\t        fakeWindow.clearTimeout = timers.clearTimeout;\n\t        fakeWindow.setInterval = timers.setInterval;\n\t        fakeWindow.clearInterval = timers.clearInterval;\n\t        fakeWindow.document = {};\n\t        module.exports = getExports(fakeWindow);\n\t    } else { // Browser\n\t        if (true) {\n\t            // Timer proxies\n\t            fakeWindow.setTimeout = self.setTimeout.bind(self);\n\t            fakeWindow.clearTimeout = self.clearTimeout.bind(self);\n\t            fakeWindow.setInterval = self.setInterval.bind(self);\n\t            fakeWindow.clearInterval = self.clearInterval.bind(self);\n\t            fakeWindow.document = self.document;\n\t        } else {\n\t            fakeWindow = self;\n\t        }\n\t\n\t        if (true) { // AMD\n\t            !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t                return getExports(fakeWindow);\n\t            }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t        } else { // Global\n\t            var path = [\"CI\",\"Chemcalc\"];\n\t            var l = path.length - 1;\n\t            var obj = self;\n\t            for (var i = 0; i < l; i++) {\n\t                obj = obj[path[i]] || (obj[path[i]] = {});\n\t            }\n\t            obj[path[l]] = getExports(fakeWindow);\n\t        }\n\t    }\n\t\n\t})();\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(3).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).setImmediate, __webpack_require__(2).clearImmediate))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            currentQueue[queueIndex].run();\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\t// TODO(shtylman)\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar aa = __webpack_require__(5);\n\tvar IEP = __webpack_require__(6);\n\t\n\tconsole.log(IEP);\n\t\n\t\n\texports.getInfo = function () {\n\t    return aa;\n\t}\n\t\n\t// sequence should be in the \"right\" format like HAlaGlyProOH\n\t\n\texports.calculateIEP = function (sequence) {\n\t    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n\t    aas=aas.slice(2,aas.length-2);\n\t    var result=IEP.calculateIEP(aas);\n\t    return result;\n\t}\n\t\n\texports.calculateIEPChart = function (sequence) {\n\t    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n\t    aas=aas.slice(2,aas.length-2);\n\t    var result=IEP.calculateChart(aas);\n\t    return result;\n\t}\n\t\n\t\n\texports.generatePeptideFragments = function generatePeptideFragments(mf, options) {\n\t    if (options === undefined) {\n\t        options = {\n\t            a: false,\n\t            b: true,\n\t            c: false,\n\t            x: false,\n\t            y: true,\n\t            z: false,\n\t            i: false\n\t        };\n\t    }\n\t\n\t    var mfs = [];\n\t    var mfparts=mf.replace(/([a-z\\)])([A-Z][a-z](?=[a-z]))/g,\"$1 $2\").split(/ /);\n\t\n\t    var nTerm=\"\";\n\t    var cTerm=\"\";\n\t    for (var i=1; i<mfparts.length; i++) {\n\t        nTerm+=mfparts[i-1];\n\t        cTerm=mfparts[mfparts.length-i]+cTerm;\n\t        addNTerm(mfs, nTerm, i, options);\n\t        addCTerm(mfs, cTerm, i, options);\n\t        if (options.i) mfs.push(mfparts[i]+\"HC-1O-1(+1)$i:\"+mfparts[i]);\n\t    }\n\t\n\t    if (mfs.length === 0) {\n\t        mfs = mfs.concat([mf]);\n\t    }\n\t\n\t    return mfs;\n\t\n\t};\n\t\n\texports.chargePeptide = function chargePeptide(mf) {\n\t    return mf.replace(/^H([^+])/, 'H+H$1').replace(/(Arg|His|Lys)(?!\\()/g, '$1(H+)');\n\t};\n\t\n\tfunction aa1To3(code) {\n\t    for (var i = 0; i < aa.length; i++) {\n\t        if (aa[i].aa1 === code) {\n\t            return aa[i].aa3;\n\t        }\n\t    }\n\t    throw new Error('Invalid 1 letter code: ' + code);\n\t}\n\t\n\tfunction converAA1To3(mf) {\n\t    var newmf = '';\n\t    for (var i = 0; i < mf.length; i++) {\n\t        newmf += aa1To3(mf.charAt(i));\n\t    }\n\t    return newmf;\n\t}\n\t\n\tfunction capitalizeAA3(mf) {\n\t    for (var i = 0; i < aa.length; i++) {\n\t        var regexp = new RegExp(aa[i].aa3, 'gi');\n\t        mf = mf.replace(regexp, aa[i].aa3);\n\t    }\n\t    return mf;\n\t}\n\t\n\t\n\texports.convertAASequence = function convertAASequence(mf) {\n\t    // this function will check if it is a sequence of aa in 1 letter or 3 letters and convert them if it is the case\n\t    // it could be a multiline mf !\n\t    // if it is a multiline we could make some \"tricks\" ...\n\t    var newmf = mf;\n\t    // SEQRES   1 B  256  MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n\t    // SEQRES   2 B  256  GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n\t    // or\n\t    // MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n\t    // GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n\t    if (mf.search(/[A-Z]{3} [A-Z]{3} [A-Z]{3}/) > -1) {\n\t        // this is a PDB !\n\t        var tmpmf = mf.replace(/[\\r\\n]+/g, ' ');\n\t        tmpmf = tmpmf.replace(/(SEQRES|[0-9]+| [A-Z] | [0-9A-Z]{4-50})/g, '');\n\t        // we need to correct the uppercase / lowercase\n\t        var parts = tmpmf.split(' ');\n\t        newmf = 'H';\n\t        for (var i = 0; i < parts.length; i++) {\n\t            newmf += parts[i].substr(0, 1) + parts[i].substr(1).toLowerCase();\n\t        }\n\t        newmf += 'OH';\n\t    } else if ((mf.search(/[A-Z]{3}/) > -1) && (mf.search(/[a-zA-Z][a-z0-9]/) == -1)) {\n\t        // UNIPROT\n\t        //   370        380        390        400        410        420\n\t        //GFKPNLRKTF VSGLFRESCG AHFYRGVDVK PFYIKKPVDN LFALMLILNR LRGWGVVGGM\n\t        //\n\t        //    430        440        450        460        470        480\n\t        //SDPRLYKVWV RLSSQVPSMF FGGTDLAADY YVVSPPTAVS VYTKTPYGRL LADTRTSGFR\n\t        // We remove all the number, all the spaces, etc\n\t        newmf = 'H' + converAA1To3(newmf.replace(/[^A-Z]/g, '')) + 'OH';\n\t    }\n\t\n\t    return newmf;\n\t\n\t};\n\t\n\tfunction addNTerm(mfs, nTerm, i, options) {\n\t    if (options.a) mfs.push(nTerm+\"C-1O-1(+1)$a\"+i);\n\t    if (options.b) mfs.push(nTerm+\"(+1)$b\"+i);\n\t    if (options.c) mfs.push(nTerm+\"NH3(+1)$c\"+i);\n\t}\n\t\n\tfunction addCTerm(mfs, cTerm, i, options) {\n\t    if (options.x) mfs.push(\"CO(+1)\"+cTerm+\"$x\"+i);\n\t    if (options.y) mfs.push(\"H2(+1)\"+cTerm+\"$y\"+i);\n\t    if (options.z) mfs.push(\"N-1H-1(+1)\"+cTerm+\"$z\"+i);\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\n\tmodule.exports = [\n\t    // Standard amino acids\n\t    {\n\t        name: \"Alanine\",\n\t        aa3: \"Ala\",\n\t        aa1: \"A\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.33,\n\t        pKaN: 9.71\n\t    },\n\t    {\n\t        name: \"Arginine\",\n\t        aa3: \"Arg\",\n\t        aa1: \"R\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 12.10\n\t        },\n\t        pKaC: 2.03,\n\t        pKaN: 9.00\n\t    },\n\t    {\n\t        name: \"Asparagine\",\n\t        aa3: \"Asn\",\n\t        aa1: \"N\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.13,\n\t        pKaN: 9.05\n\t    },\n\t    {\n\t        name: \"Aspartic acid\",\n\t        aa3: \"Asp\",\n\t        aa1: \"D\",\n\t        sc: {\n\t            type: \"negative\",\n\t            pKa: 3.71\n\t        },\n\t        pKaC: 1.95,\n\t        pKaN: 9.66\n\t    },\n\t    {\n\t        name: \"Cysteine\",\n\t        aa3: \"Cys\",\n\t        aa1: \"C\",\n\t        sc: {\n\t            type: \"special\",\n\t            pKa: 8.14\n\t        },\n\t        pKaC: 1.91,\n\t        pKaN: 10.28\n\t    },\n\t    {\n\t        name: \"Glutamic acid\",\n\t        aa3: \"Glu\",\n\t        aa1: \"E\",\n\t        sc: {\n\t            type: \"negative\",\n\t            pKa: 4.15\n\t        },\n\t        pKaC: 2.16,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Glutamine\",\n\t        aa3: \"Gln\",\n\t        aa1: \"Q\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.18,\n\t        pKaN: 9.00\n\t    },\n\t    {\n\t        name: \"Glycine\",\n\t        aa3: \"Gly\",\n\t        aa1: \"G\",\n\t        sc: {\n\t            type: \"special\"\n\t        },\n\t        pKaC: 2.34,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Histidine\",\n\t        aa3: \"His\",\n\t        aa1: \"H\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 6.04\n\t        },\n\t        pKaC: 1.70,\n\t        pKaN: 9.09\n\t    },\n\t    {\n\t        name: \"Isoleucine\",\n\t        aa3: \"Ile\",\n\t        aa1: \"I\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.26,\n\t        pKaN: 9.60\n\t    },\n\t    {\n\t        name: \"Leucine\",\n\t        aa3: \"Leu\",\n\t        aa1: \"L\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.32,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Lysine\",\n\t        aa3: \"Lys\",\n\t        aa1: \"K\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 10.67\n\t        },\n\t        pKaC: 2.15,\n\t        pKaN: 9.16\n\t    },\n\t    {\n\t        name: \"Methionine\",\n\t        aa3: \"Met\",\n\t        aa1: \"M\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.16,\n\t        pKaN: 9.08\n\t    },\n\t    {\n\t        name: \"Phenylalanine\",\n\t        aa3: \"Phe\",\n\t        aa1: \"F\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.18,\n\t        pKaN: 9.09\n\t    },\n\t    {\n\t        name: \"Proline\",\n\t        aa3: \"Pro\",\n\t        aa1: \"P\",\n\t        sc: {\n\t            type: \"special\"\n\t        },\n\t        pKaC: 1.95,\n\t        pKaN: 10.47\n\t    },\n\t    {\n\t        name: \"Serine\",\n\t        aa3: \"Ser\",\n\t        aa1: \"S\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.13,\n\t        pKaN: 9.05\n\t    },\n\t    {\n\t        name: \"Threonine\",\n\t        aa3: \"Thr\",\n\t        aa1: \"T\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.20,\n\t        pKaN: 8.96\n\t    },\n\t    {\n\t        name: \"Tryptophan\",\n\t        aa3: \"Trp\",\n\t        aa1: \"W\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.38,\n\t        pKaN: 9.34\n\t    },\n\t    {\n\t        name: \"Tyrosine\",\n\t        aa3: \"Tyr\",\n\t        aa1: \"Y\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.24,\n\t        pKaN: 9.04\n\t    },\n\t    {\n\t        name: \"Valine\",\n\t        aa3: \"Val\",\n\t        aa1: \"V\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.27,\n\t        pKaN: 9.52\n\t    },\n\t    // Additional\n\t    {\n\t        name: \"Selenocysteine\",\n\t        aa3: \"Sec\",\n\t        aa1: \"U\"\n\t    },\n\t    {\n\t        name: \"Pyrrolysine\",\n\t        aa3: \"Pyl\",\n\t        aa1: \"O\"\n\t    },\n\t    // Ambiguous\n\t    {\n\t        name: \"Asparagine or aspartic acid\",\n\t        aa3: \"Asx\",\n\t        aa1: \"B\"\n\t    },\n\t    {\n\t        name: \"Glutamine or glutamic acid\",\n\t        aa3: \"Glx\",\n\t        aa1: \"Z\"\n\t    },\n\t    {\n\t        name: \"Leucine or isoleucine\",\n\t        aa3: \"Xle\",\n\t        aa1: \"J\"\n\t    },\n\t    {\n\t        name: \"Unspecified or unknown\",\n\t        aa3: \"Xaa\",\n\t        aa1: \"X\"\n\t    }\n\t];\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\tvar aa = __webpack_require__(5);\n\t\n\t// we will convert the data to an object to be much faster\n\tvar aaObject={};\n\tfor (var i=0; i<aa.length; i++) {\n\t    aaObject[aa[i].aa3]=aa[i];\n\t}\n\t\n\t\n\t\n\tfunction calculateCharge(aaSequence, pH) {\n\t    if (! pH) pH=7.0;\n\t    var combined=combine(aaSequence);\n\t    if (!combined) return;\n\t    var charge=calculateForPh(combined, pH);\n\t    return Math.round(charge*1000)/1000;\n\t}\n\t\n\t// this methods required an array of aas\n\t\n\tfunction calculateIEP(aas) {\n\t    var combined=combine(aas);\n\t    if (!combined) return;\n\t    var first=0;\n\t    var last=14;\n\t    var current=14;\n\t    var previous=0;\n\t    var currentCharge;\n\t    while (Math.abs(current-previous)>0.0001) {\n\t        previous=current;\n\t        current=(last + first) / 2;\n\t        currentCharge=calculateForPh(combined, current);\n\t        if (currentCharge>0) {\n\t            first=current;\n\t        } else if (currentCharge<0) {\n\t            last=current;\n\t        } else {\n\t            previous=current;\n\t        }\n\t    }\n\t    return Math.round(current*1000)/1000;\n\t}\n\t\n\tfunction calculateChart(aas) {\n\t    var combined=combine(aas);\n\t    if (!combined) return;\n\t    var y=[];\n\t    var yAbs=[];\n\t    for (var i=0; i<=14; i=i+0.01) {\n\t        var charge=calculateForPh(combined, i);\n\t        y.push(charge);\n\t        yAbs.push(Math.abs(charge));\n\t    }\n\t    combined.y=y;\n\t    combined.yAbs=yAbs;\n\t\n\t    return combined;\n\t}\n\t\n\t\n\tfunction calculateForPh(combined, pH) {\n\t    var total=0;\n\t    total+=1/(1+Math.pow(10,pH-combined.first));\n\t    total+=-1/(1+Math.pow(10,combined.last-pH));\n\t    for (var key in combined.acid) {\n\t        total+=-combined.acid[key]/(1+Math.pow(10,aaObject[key].sc.pKa-pH));\n\t    }\n\t    for (var key in combined.basic) {\n\t        total+=combined.basic[key]/(1+Math.pow(10,pH-aaObject[key].sc.pKa));\n\t    }\n\t    return total;\n\t}\n\t\n\t// we will combine the amino acids\n\tfunction combine(aaSequence) {\n\t    var combined={};\n\t    if (aaObject[aaSequence[0]]) {\n\t        combined.first=aaObject[aaSequence[0]].pKaN;\n\t    } else {\n\t        return;\n\t    }\n\t    if (aaObject[aaSequence[aaSequence.length-1]]) {\n\t        combined.last=aaObject[aaSequence[aaSequence.length-1]].pKaC;\n\t    } else {\n\t        return;\n\t    }\n\t    combined.basic={};\n\t    combined.acid={};\n\t    for (var i=0; i<aaSequence.length; i++) {\n\t        var aa=aaSequence[i];\n\t        if (! aaObject[aa]) return;\n\t        if (aaObject[aa].sc && aaObject[aa].sc.type) {\n\t            if (aaObject[aa].sc.type==\"positive\") {\n\t                if (!combined.basic[aa]) {\n\t                    combined.basic[aa] = 0;\n\t                }\n\t                combined.basic[aa]++;\n\t            } else if (aaObject[aa].sc.type==\"negative\") {\n\t                if (!combined.acid[aa]) {\n\t                    combined.acid[aa] = 0;\n\t                }\n\t                combined.acid[aa]++;\n\t            }\n\t        }\n\t    }\n\t    return combined;\n\t}\n\t\n\t\n\t\n\tmodule.exports={\n\t    calculateIEP: calculateIEP,\n\t    calculateCharge: calculateCharge,\n\t    calculateChart: calculateChart\n\t}\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CC = __webpack_require__(1);\n\tvar Similarity = __webpack_require__(8);\n\t\n\tfunction MfProcessor(experimental, options) {\n\t    // we will clone the options to be sure ...\n\t    this.options = JSON.parse(JSON.stringify(options || {}));\n\t    this.options.isotopomers = 'arrayXYXY';\n\t    // init with options ans experimental spectrum\n\t    this.options.zone = this.options.zone || {};\n\t    if (!this.options.zone.low) this.options.zone.low = -0.5;\n\t    if (!this.options.zone.high) this.options.zone.high = 4.5;\n\t\n\t    if (this.options.decimalsMass) this.factorMass = Math.pow(10, this.options.decimalsMass);\n\t    if (this.options.decimalsPPM) this.factorPPM = Math.pow(10, this.options.decimalsPPM);\n\t\n\t    this.widthFunction=undefined;\n\t    if (this.options.widthFunction) {\n\t         this.widthFunction = new Function('mass', 'charge',\n\t            this.options.widthFunction + \";\"+\n\t            \"return {widthBottom: widthBottom, widthTop: widthTop};\"\n\t         );\n\t\n\t    }\n\t\n\t\n\t    this.similarity = new Similarity({\n\t        widthTop: this.options.widthTop,\n\t        widthBottom: this.options.widthBottom,\n\t        common: this.options.common\n\t    });\n\t    this.similarity.setPeaks1(experimental);\n\t}\n\t\n\tMfProcessor.prototype.process = function (mf, result) {\n\t    // we allow to add information on an existing result\n\t    result = result || {};\n\t    var ccResult = CC.analyseMF(mf, this.options);\n\t\n\t    var charge = Math.abs(ccResult.parts[0].charge || 1);\n\t    var target = ccResult.parts[0].msem || ccResult.parts[0].em;\n\t\n\t    var from, to;\n\t    if (this.options.from && this.options.to) {\n\t        from = this.options.from;\n\t        to = this.options.to;\n\t    } else {\n\t        from = target + this.options.zone.low / charge;\n\t        to = target + this.options.zone.high / charge;\n\t    }\n\t\n\t    if (this.widthFunction) {\n\t        var width=this.widthFunction(target, charge)\n\t        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n\t    }\n\t\n\t\n\t    this.similarity.setFromTo(from, to);\n\t    this.similarity.setPeaks2(ccResult.arrayXYXY);\n\t\n\t    var similarityResult = this.similarity.getSimilarity();\n\t\n\t    if (!result.em) result.em = ccResult.em;\n\t    if (!result.info) result.info = mf;\n\t    if (!result.mf) result.mf = ccResult.mf;\n\t    if (!result.charge) result.charge = ccResult.parts[0].charge || 0;\n\t    if (!result.msem) result.msem = ccResult.parts[0].msem || 0;\n\t    result.fromTo = {from: from, to: to};\n\t    result.extract = similarityResult.extract2;\n\t    result.extractInfo = similarityResult.extractInfo2;\n\t    result.diff = similarityResult.diff;\n\t    result.similarity = Math.floor(similarityResult.similarity * 1e4) / 1e2;\n\t    result.color = 'hsla(' + Math.round(similarityResult.similarity * 120) + ',100%,60%,0.6)';\n\t    if (this.options.addExperimentalExtract) {\n\t        result.extractExperimental = similarityResult.extract1;\n\t        result.extractInfoExperimental = similarityResult.extractInfo1;\n\t    }\n\t\n\t    if (this.factorPPM) result.ppm = Math.round(result.ppm * this.factorPPM) / this.factorPPM;\n\t    if (this.factorMass) result.em = Math.round(result.em * this.factorMass) / this.factorMass;\n\t    if (this.factorMass && result.msem) result.msem = Math.round(result.msem * this.factorMass) / this.factorMass;\n\t\n\t    return result;\n\t};\n\t\n\tmodule.exports = MfProcessor;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tconst COMMON_NO=0;\n\tconst COMMON_FIRST=1;\n\tconst COMMON_SECOND=2;\n\tconst COMMON_BOTH=3; // should be a binary operation !\n\t\n\t\n\tmodule.exports = function Comparator(options) {\n\t    \n\t    var widthTop, widthBottom, from, to;\n\t    var array1Extract, array2Extract, widthSlope, array1ExtractInfo, array2ExtractInfo;\n\t    var common, commonFactor;\n\t\n\t    setOptions(options);\n\t\n\t    var array1=[];\n\t    var array2=[];\n\t \n\t    /*\n\t     2 formats are allowed:\n\t     [[x1,x2,...],[y1,y2,...]] or [[x1,y1],[x2,y2], ...]\n\t    */\n\t\n\t    function setOptions(newOptions) {\n\t        options=newOptions || {};\n\t        if (typeof options.common === 'string') {\n\t            if (options.common.toLowerCase()==='first') {\n\t                common=COMMON_FIRST;\n\t            } else if (options.common.toLowerCase()==='second') {\n\t                common=COMMON_SECOND;\n\t            } else {\n\t                common=COMMON_BOTH;\n\t            }\n\t        } else {\n\t            if (options.common) {\n\t                common=COMMON_BOTH;\n\t            } else {\n\t                common=COMMON_NO;\n\t            }\n\t\n\t        }\n\t        commonFactor=options.commonFactor || commonFactor || 4;\n\t\n\t        if (options.widthBottom==undefined) {\n\t            options.widthBottom=widthBottom || 2;\n\t        }\n\t        if (options.widthTop==undefined) {\n\t            options.widthTop=widthTop || 1;\n\t        }\n\t        setTrapezoid(options.widthBottom, options.widthTop);\n\t        setFromTo(options.from || from, options.to || to);\n\t    }\n\t\n\t    function setPeaks1(anArray) {\n\t        array1=checkArray(anArray);\n\t        if (common) {\n\t            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n\t            array1Extract=extracts.data1;\n\t            array1ExtractInfo=extracts.info1;\n\t            array2Extract=extracts.data2;\n\t            array2ExtractInfo=extracts.info2;\n\t        } else {\n\t            var extract=extractAndNormalize(array1, from, to);\n\t            array1Extract=extract.data;\n\t            array1ExtractInfo=extract.info;\n\t        }\n\t    }\n\t    function setPeaks2(anArray) {\n\t        array2=checkArray(anArray);\n\t        if (common) {\n\t            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n\t            array1Extract=extracts.data1;\n\t            array1ExtractInfo=extracts.info1;\n\t            array2Extract=extracts.data2;\n\t            array2ExtractInfo=extracts.info2;\n\t        } else {\n\t            var extract = extractAndNormalize(array2, from, to);\n\t            array2Extract = extract.data;\n\t            array2ExtractInfo = extract.info;\n\t        }\n\t    }\n\t\n\t    function getExtract1() {\n\t        return array1Extract;\n\t    }\n\t\n\t    function getExtract2() {\n\t        return array2Extract;\n\t    }\n\t\n\t\n\t    function getExtractInfo1() {\n\t        return array1ExtractInfo;\n\t    }\n\t\n\t    function getExtractInfo2() {\n\t        return array2ExtractInfo;\n\t    }\n\t\n\t    function setTrapezoid(newWidthBottom, newWidthTop) {\n\t        widthTop=newWidthTop;\n\t        widthBottom=newWidthBottom;\n\t        widthSlope=(widthBottom-widthTop)/2;\n\t        if (widthBottom<widthTop) throw \"widthBottom has to be larger than widthTop\";\n\t    }\n\t\n\t    function setFromTo(newFrom, newTo) {\n\t        if (newFrom===from && newTo===to) return\n\t        from=newFrom;\n\t        to=newTo;\n\t        if (common) {\n\t            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common, commonFactor);\n\t            array1Extract=extracts.data1;\n\t            array1ExtractInfo=extracts.info1;\n\t            array2Extract=extracts.data2;\n\t            array2ExtractInfo=extracts.info2;\n\t        } else {\n\t            var extract=extractAndNormalize(array1, from, to);\n\t            array1Extract=extract.data;\n\t            array1ExtractInfo=extract.info;\n\t            var extract=extractAndNormalize(array2, from, to);\n\t            array2Extract=extract.data;\n\t            array2ExtractInfo=extract.info;\n\t        }\n\t    }\n\t\n\t\n\t    function getOverlap(x1, y1, x2, y2) {\n\t        if (y1===0 || y2===0) return 0;\n\t\n\t        // TAKE CARE !!! We multiply the diff by 2 !!!\n\t        var diff=Math.abs(x1-x2)*2;\n\t\n\t        if (diff>widthBottom) return 0;\n\t        if (diff<=widthTop) {\n\t            return Math.min(y1,y2);\n\t        }\n\t\n\t        var maxValue=Math.max(y1,y2)*(widthBottom-diff)/(widthBottom-widthTop);\n\t        return Math.min(y1, y2, maxValue);\n\t\n\t        return NaN;\n\t    }\n\t\n\t    // This is the old trapezoid similarity\n\t    function getOverlapTrapezoid(x1, y1, x2, y2) {\n\t        var factor=2/(widthTop+widthBottom); // correction for surface=1\n\t        if (y1===0 || y2===0) return 0;\n\t        if (x1===x2) { // they have the same position\n\t            return Math.min(y1,y2);\n\t        }\n\t\n\t        var diff=Math.abs(x1-x2);\n\t        if (diff>=widthBottom) return 0;\n\t        if (y1===y2) { // do they have the same height ???\n\t            // we need to find the common length\n\t            if (diff<=widthTop) {\n\t                return (((widthTop+widthBottom)/2-diff)*y1)*factor;\n\t            } else if (diff<=widthBottom) {\n\t                return (widthBottom-diff)*y1/2*(diff-widthTop)/(widthBottom-widthTop)*factor;\n\t            }\n\t            return 0;\n\t        } else { // the height are different and not the same position ...\n\t            // we need to consider only one segment to find its intersection\n\t\n\t            var small=Math.min(y1,y2);\n\t            var big=Math.max(y1,y2);\n\t\n\t            var targets=[\n\t                [[0,0],[widthSlope,small]],\n\t                [[widthSlope,small],[widthSlope+widthTop,small]],\n\t                [[widthTop+widthSlope,small],[widthBottom,0]]\n\t            ];\n\t            if ((x1>x2 && y1>y2) || (x1<x2 && y1<y2)) {\n\t                var segment=[[diff,0],[diff+widthSlope,big]];\n\t            } else {\n\t                var segment=[[diff+widthSlope,big],[diff,0]];\n\t            }\n\t\n\t\n\t\n\t            for (var i=0; i<3; i++) {\n\t                var intersection=getIntersection(targets[i],segment);\n\t                if (intersection) {\n\t                    switch (i) {\n\t                        case 0:\n\t                            return small-((diff*intersection.y/2))*factor;\n\t                        case 1: // to simplify ...\n\t                            //     console.log(\"           \",widthSlope,small,big,intersection.x)\n\t                            return ((widthSlope*small/(2*big))*small+\n\t                                (widthTop+widthSlope-intersection.x)*small+\n\t                                widthSlope*small/2)*factor;\n\t                        case 2:\n\t                            return ((widthBottom-diff)*intersection.y/2)*factor;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return NaN;\n\t    }\n\t\n\t\n\t\n\t    // this method calculates the total diff. The sum of positive value will yield to overlap\n\t    function calculateDiff() {\n\t        // we need to take 2 pointers\n\t        // and travel progressively between them ...\n\t        var newSecond=[];\n\t        for (var i=0; i<array2Extract.length; i++) {\n\t            newSecond.push([array2Extract[i][0],array2Extract[i][1]]);\n\t        }\n\t        var newFirst=[];\n\t        for (var i=0; i<array1Extract.length; i++) {\n\t            newFirst.push([array1Extract[i][0],array1Extract[i][1]]);\n\t        }\n\t\n\t        var pos1=0;\n\t        var pos2=0;\n\t        var previous2=0;\n\t        while (pos1<newFirst.length) {\n\t            var diff=newFirst[pos1][0]-array2Extract[pos2][0];\n\t            if (Math.abs(diff)<widthBottom) { // there is some overlap\n\t                if (options.trapezoid) {\n\t                    var overlap=getOverlapTrapezoid(newFirst[pos1][0], newFirst[pos1][1], newSecond[pos2][0], newSecond[pos2][1], widthTop, widthBottom);\n\t\n\t                } else {\n\t                    var overlap=getOverlap(newFirst[pos1][0], newFirst[pos1][1], newSecond[pos2][0], newSecond[pos2][1], widthTop, widthBottom);\n\t                }\n\t                newFirst[pos1][1]-=overlap;\n\t                newSecond[pos2][1]-=overlap;\n\t                if (pos2<(array2Extract.length-1)) {\n\t                    pos2++;\n\t                } else {\n\t                    pos1++;\n\t                    pos2=previous2;\n\t                }\n\t            } else {\n\t                if (diff>0 && pos2<(array2Extract.length-1)) {\n\t                    pos2++;\n\t                    previous2=pos2;\n\t                } else {\n\t                    pos1++;\n\t                    pos2=previous2;\n\t                }\n\t            }\n\t        }\n\t        return newSecond;\n\t    }\n\t\n\t\n\t    /*\n\t        This code requires the use of an array like  [[x1,y1],[x2,y2], ...]\n\t        If it is not the right format, we will just convert it\n\t        Otherwise we return the correct format\n\t     */\n\t    function checkArray(points) {\n\t        // if it is already a 2D array of points, we just return them\n\t        if (Array.isArray(points) && Array.isArray(points[0]) && points[0].length===2) return points;\n\t        var xs=points[0];\n\t        var ys=points[1];\n\t        var array=[];\n\t        for (var i=0; i<xs.length; i++) {\n\t            array.push([xs[i],ys[i]]);\n\t        }\n\t        return array;\n\t    }\n\t\n\t    function getSimilarity(newPeaks1, newPeaks2) {\n\t        if (newPeaks1) setPeaks1(newPeaks1);\n\t        if (newPeaks2) setPeaks2(newPeaks2);\n\t        var result={};\n\t        result.diff=calculateDiff();\n\t        result.extract1=getExtract1();\n\t        result.extract2=getExtract2();\n\t        result.extractInfo1=getExtractInfo1();\n\t        result.extractInfo2=getExtractInfo2();\n\t        result.similarity=calculateOverlapFromDiff(result.diff);\n\t        return result;\n\t    }\n\t\n\t    this.setPeaks1 = setPeaks1;\n\t    this.setPeaks2 = setPeaks2;\n\t    this.getExtract1 = getExtract1;\n\t    this.getExtract2 = getExtract2;\n\t    this.getExtractInfo1 = getExtractInfo1;\n\t    this.getExtractInfo2 = getExtractInfo2;\n\t    this.setFromTo = setFromTo;\n\t    this.setOptions = setOptions;\n\t    this.setTrapezoid = setTrapezoid;\n\t    this.getSimilarity = getSimilarity;\n\t    this.getCommonArray = getCommonArray;\n\t};\n\t\n\t\n\t// returns an new array based on array1 where there is a peak of array2 at a distance under width/2\n\tfunction getCommonArray(array1, array2, width) {\n\t    var newArray=[];\n\t    var pos2=0;\n\t    width/=2;\n\t    var j=0;\n\t\n\t    for (var i=0; i<array1.length; i++) {\n\t        while (pos2<array2.length && (array1[i][0]>(array2[pos2][0]+width))) {\n\t            pos2++;\n\t        }\n\t        if ((pos2<array2.length) && (array1[i][0]>array2[pos2][0]-width)) {\n\t            newArray[j++]=array1[i];\n\t        }\n\t    }\n\t    return newArray;\n\t}\n\t\n\t\n\t// Adapted from: http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect/1968345#1968345\n\tfunction getIntersection(segment1, segment2) {\n\t    var p0_x=segment1[0][0];\n\t    var p0_y=segment1[0][1];\n\t    var p1_x=segment1[1][0];\n\t    var p1_y=segment1[1][1];\n\t    var p2_x=segment2[0][0];\n\t    var p2_y=segment2[0][1];\n\t    var p3_x=segment2[1][0];\n\t    var p3_y=segment2[1][1];\n\t\n\t    var s1_x, s1_y, s2_x, s2_y;\n\t    s1_x = p1_x - p0_x;\n\t    s1_y = p1_y - p0_y;\n\t    s2_x = p3_x - p2_x;\n\t    s2_y = p3_y - p2_y;\n\t    var s, t;\n\t    s = (-s1_y * (p0_x - p2_x) + s1_x * (p0_y - p2_y)) / (-s2_x * s1_y + s1_x * s2_y);\n\t    t = ( s2_x * (p0_y - p2_y) - s2_y * (p0_x - p2_x)) / (-s2_x * s1_y + s1_x * s2_y);\n\t    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n\t        return {\n\t            x:p0_x + (t * s1_x),\n\t            y:p0_y + (t * s1_y)\n\t        }\n\t    }\n\t    return null; // No collision\n\t}\n\t\n\tfunction normalize(array) {\n\t    var sum=0;\n\t    var min=Number.MAX_VALUE;\n\t    var max=Number.MIN_VALUE;\n\t    for (var i=0; i<array.length; i++) {\n\t        sum+=array[i][1];\n\t        if (array[i][1]<min) min=array[i][1];\n\t        if (array[i][1]>max) max=array[i][1];\n\t    }\n\t    if (sum!=0) {\n\t        for (var i=0; i<array.length; i++) {\n\t            array[i][1]/=sum;\n\t        }\n\t    }\n\t    return {\n\t        sum: sum,\n\t        min: min,\n\t        max: max\n\t    };\n\t}\n\t\n\t// this method will systemtatically take care of both array\n\tfunction commonExtractAndNormalize(array1, array2, width, from, to, common) {\n\t    if (! (Array.isArray(array1)) || ! (Array.isArray(array2))) return {\n\t        info: undefined,\n\t        data: undefined\n\t    };\n\t    var extract1=extract(array1, from, to);\n\t    var extract2=extract(array2, from, to);\n\t    var common1, common2, info1, info2;\n\t    if (common & COMMON_SECOND) {\n\t        common1=getCommonArray(extract1, extract2, width);\n\t        info1=normalize(common1);\n\t    } else {\n\t        common1=extract1;\n\t        info1=normalize(common1);\n\t    }\n\t    if (common & COMMON_FIRST) {\n\t        common2=getCommonArray(extract2, extract1, width);\n\t        info2=normalize(common2);\n\t    } else {\n\t        common2=extract2;\n\t        info2=normalize(common2);\n\t    }\n\t\n\t    return {\n\t        info1: info1,\n\t        info2: info2,\n\t        data1: common1,\n\t        data2: common2\n\t    }\n\t}\n\t\n\tfunction extract(array, from, to) {\n\t    var newArray=[];\n\t    var j=0;\n\t    for (var i=0; i<array.length; i++) {\n\t        if ( (! from || array[i][0]>=from)  && (! to || array[i][0]<=to)) {\n\t            newArray[j++] = [array[i][0], array[i][1]];\n\t        }\n\t    }\n\t    return newArray;\n\t}\n\t\n\tfunction extractAndNormalize(array, from, to) {\n\t    if (! (Array.isArray(array))) return {\n\t        info: undefined,\n\t        data: undefined\n\t    };\n\t    var newArray=extract(array, from, to);\n\t    var info=normalize(newArray);\n\t    return {\n\t        info: info,\n\t        data: newArray\n\t    };\n\t}\n\t\n\tfunction calculateOverlapFromDiff(diffs) {\n\t    var sumPos=0;\n\t    for (var i=0; i<diffs.length; i++) {\n\t        sumPos+=Math.abs(diffs[i][1]);\n\t    }\n\t    return 1-sumPos;\n\t}\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Stat=__webpack_require__(10);\n\t\n\tmodule.exports=massPeakPicking;\n\t\n\t\n\tfunction massPeakPicking(x, y) {\n\t\n\t// we calculate the noise\n\t    var noiseLevel=Stat.array.median(y.filter(function(a) {return (a>0)}))*3;\n\t\n\t    console.log(noiseLevel);\n\t\n\t    return gsd(x, y, {\n\t        noiseLevel: noiseLevel\n\t    });\n\t}\n\t\n\tfunction gsd(x, y, options){\n\t    options=options || {};\n\t    if (options.minMaxRatio===undefined) options.minMaxRatio=0.00025;\n\t    if (options.noiseLevel===undefined) options.noiseLevel=0;;\n\t\n\t    if (options.noiseLevel>0) {\n\t        y=[].concat(y);\n\t        for (var i=0; i<y.length; i++){\n\t            if(Math.abs(y[i])<options.noiseLevel) {\n\t                y[i]=0;\n\t            }\n\t        }\n\t    }\n\t\n\t    // fill convolution frequency axis\n\t    var X = [];//x[2:(x.length-2)];\n\t\n\t    // fill Savitzky-Golay polynomes\n\t    var size= x.length-4;\n\t    var Y = new Array(size);\n\t    var dY = new Array(size);\n\t    var ddY = new Array(size);\n\t\n\t    //var dx = x[1]-x[0];\n\t\n\t    for (var j = 2; j < size+2; j++) {\n\t        var dx = x[j]-x[j-1];\n\t        Y[j-2]=(1/35.0)*(-3*y[j-2] + 12*y[j-1] + 17*y[j] + 12*y[j+1] - 3*y[j+2]);\n\t        X[j-2]=x[j];\n\t        dY[j-2]=(1/(12*dx))*(y[j-2] - 8*y[j-1] + 8*y[j+1] - y[j+2]);\n\t        ddY[j-2]=(1/(7*dx*dx))*(2*y[j-2] - y[j-1] - 2*y[j] - y[j+1] + 2*y[j+2]);\n\t    }\n\t\n\t    var maxDdy=0;\n\t    //console.log(Y.length);\n\t    for (var i = 0; i < Y.length ; i++){\n\t        if(Math.abs(ddY[i])>maxDdy){\n\t            maxDdy = Math.abs(ddY[i]);\n\t        }\n\t    }\n\t    //console.log(maxY+\"x\"+maxDy+\"x\"+maxDdy);\n\t    var minddY = [];\n\t    var intervals = [];\n\t    var stackInt = [];\n\t    for (var i = 1; i < Y.length -1 ; i++){\n\t        if ((dY[i] < dY[i-1]) && (dY[i] <= dY[i+1])||\n\t            (dY[i] <= dY[i-1]) && (dY[i] < dY[i+1])) {\n\t            console.log(X[i])\n\t            stackInt.push(X[i]);\n\t        }\n\t\n\t        if ((dY[i] >= dY[i-1]) && (dY[i] > dY[i+1])||\n\t            (dY[i] > dY[i-1]) && (dY[i] >= dY[i+1])) {\n\t            try{\n\t                intervals.push( [X[i] , stackInt.pop()] );\n\t            }\n\t            catch(e){\n\t                console.log(\"Error I don't know why \"+e);\n\t            }\n\t        }\n\t\n\t        if ((ddY[i] < ddY[i-1]) && (ddY[i] < ddY[i+1])) {\n\t            minddY.push( [X[i], Y[i], i] );  // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n\t        }\n\t    }\n\t\n\t\n\t    var signals = [];\n\t\n\t    Y.sort(function(a, b){return b-a});\n\t\n\t    for (var j = 0; j < minddY.length; j++){\n\t        var f = minddY[j];\n\t        var frequency = f[0];\n\t        var possible = [];\n\t        for (var k=0; k<intervals.length; k++){\n\t            var i = intervals[k];\n\t            if(Math.abs(frequency-(i[0]+i[1])/2)<Math.abs(i[0]-i[1])/2)\n\t                possible.push(i);\n\t        }\n\t        console.log(possible);\n\t        //console.log(\"possible \"+possible.length);\n\t        if (possible.length > 0)\n\t            if (possible.length == 1)\n\t            {\n\t                var inter = possible[0];\n\t                var linewidth = Math.abs(inter[1] - inter[0]);\n\t                var height = f[1];\n\t                console.log(height, options.minMaxRatio, Y[0]);\n\t                if (Math.abs(height) > options.minMaxRatio*Y[0]) {\n\t                    signals.push({\n\t                        x: frequency,\n\t                        y: height,\n\t                        width: linewidth\n\t                    })\n\t                }\n\t            }\n\t            else\n\t            {\n\t                //TODO: nested peaks\n\t                console.log(\"Nested \"+possible);\n\t            }\n\t    }\n\t\n\t    signals.sort(function (a, b) {\n\t        return a.x - b.x;\n\t    });\n\t\n\t    return signals;\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.array = __webpack_require__(11);\n\texports.matrix = __webpack_require__(12);\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction compareNumbers(a, b) {\n\t    return a - b;\n\t}\n\t\n\t/**\n\t * Computes the sum of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.sum = function sum(values) {\n\t    var sum = 0;\n\t    for (var i = 0; i < values.length; i++) {\n\t        sum += values[i];\n\t    }\n\t    return sum;\n\t};\n\t\n\t/**\n\t * Computes the maximum of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.max = function max(values) {\n\t    var max = -Infinity;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] > max) max = values[i];\n\t    }\n\t    return max;\n\t};\n\t\n\t/**\n\t * Computes the minimum of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.min = function min(values) {\n\t    var min = Infinity;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] < min) min = values[i];\n\t    }\n\t    return min;\n\t};\n\t\n\t/**\n\t * Computes the min and max of the given values\n\t * @param {Array} values\n\t * @returns {{min: number, max: number}}\n\t */\n\texports.minMax = function minMax(values) {\n\t    var min = Infinity;\n\t    var max = -Infinity;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] < min) min = values[i];\n\t        if (values[i] > max) max = values[i];\n\t    }\n\t    return {\n\t        min: min,\n\t        max: max\n\t    };\n\t};\n\t\n\t/**\n\t * Computes the arithmetic mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.arithmeticMean = function arithmeticMean(values) {\n\t    var sum = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        sum += values[i];\n\t    }\n\t    return sum / l;\n\t};\n\t\n\t/**\n\t * {@link arithmeticMean}\n\t */\n\texports.mean = exports.arithmeticMean;\n\t\n\t/**\n\t * Computes the geometric mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.geometricMean = function geometricMean(values) {\n\t    var mul = 1;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        mul *= values[i];\n\t    }\n\t    return Math.pow(mul, 1 / l);\n\t};\n\t\n\t/**\n\t * Computes the mean of the log of the given values\n\t * If the return value is exponentiated, it gives the same result as the\n\t * geometric mean.\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.logMean = function logMean(values) {\n\t    var lnsum = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        lnsum += Math.log(values[i]);\n\t    }\n\t    return lnsum / l;\n\t};\n\t\n\t/**\n\t * Computes the weighted grand mean for a list of means and sample sizes\n\t * @param {Array} means - Mean values for each set of samples\n\t * @param {Array} samples - Number of original values for each set of samples\n\t * @returns {number}\n\t */\n\texports.grandMean = function grandMean(means, samples) {\n\t    var sum = 0;\n\t    var n = 0;\n\t    var l = means.length;\n\t    for (var i = 0; i < l; i++) {\n\t        sum += samples[i] * means[i];\n\t        n += samples[i];\n\t    }\n\t    return sum / n;\n\t};\n\t\n\t/**\n\t * Computes the truncated mean of the given values using a given percentage\n\t * @param {Array} values\n\t * @param {number} percent - The percentage of values to keep (range: [0,1])\n\t * @param {boolean} [alreadySorted=false]\n\t * @returns {number}\n\t */\n\texports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n\t    if (alreadySorted === undefined) alreadySorted = false;\n\t    if (!alreadySorted) {\n\t        values = values.slice().sort(compareNumbers);\n\t    }\n\t    var l = values.length;\n\t    var k = Math.floor(l * percent);\n\t    var sum = 0;\n\t    for (var i = k; i < (l - k); i++) {\n\t        sum += values[i];\n\t    }\n\t    return sum / (l - 2 * k);\n\t};\n\t\n\t/**\n\t * Computes the harmonic mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.harmonicMean = function harmonicMean(values) {\n\t    var sum = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] === 0) {\n\t            throw new RangeError('value at index ' + i + 'is zero');\n\t        }\n\t        sum += 1 / values[i];\n\t    }\n\t    return l / sum;\n\t};\n\t\n\t/**\n\t * Computes the contraharmonic mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.contraHarmonicMean = function contraHarmonicMean(values) {\n\t    var r1 = 0;\n\t    var r2 = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        r1 += values[i] * values[i];\n\t        r2 += values[i];\n\t    }\n\t    if (r2 < 0) {\n\t        throw new RangeError('sum of values is negative');\n\t    }\n\t    return r1 / r2;\n\t};\n\t\n\t/**\n\t * Computes the median of the given values\n\t * @param {Array} values\n\t * @param {boolean} [alreadySorted=false]\n\t * @returns {number}\n\t */\n\texports.median = function median(values, alreadySorted) {\n\t    if (alreadySorted === undefined) alreadySorted = false;\n\t    if (!alreadySorted) {\n\t        values = values.slice().sort(compareNumbers);\n\t    }\n\t    var l = values.length;\n\t    var half = Math.floor(l / 2);\n\t    if (l % 2 === 0) {\n\t        return (values[half - 1] + values[half]) * 0.5;\n\t    } else {\n\t        return values[half];\n\t    }\n\t};\n\t\n\t/**\n\t * Computes the variance of the given values\n\t * @param {Array} values\n\t * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n\t * @returns {number}\n\t */\n\texports.variance = function variance(values, unbiased) {\n\t    if (unbiased === undefined) unbiased = true;\n\t    var theMean = exports.mean(values);\n\t    var theVariance = 0;\n\t    var l = values.length;\n\t\n\t    for (var i = 0; i < l; i++) {\n\t        var x = values[i] - theMean;\n\t        theVariance += x * x;\n\t    }\n\t\n\t    if (unbiased) {\n\t        return theVariance / (l - 1);\n\t    } else {\n\t        return theVariance / l;\n\t    }\n\t};\n\t\n\t/**\n\t * Computes the standard deviation of the given values\n\t * @param {Array} values\n\t * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n\t * @returns {number}\n\t */\n\texports.standardDeviation = function standardDeviation(values, unbiased) {\n\t    return Math.sqrt(exports.variance(values, unbiased));\n\t};\n\t\n\texports.standardError = function standardError(values) {\n\t    return exports.standardDeviation(values) / Math.sqrt(values.length);\n\t};\n\t\n\texports.quartiles = function quartiles(values, alreadySorted) {\n\t    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n\t    if (!alreadySorted) {\n\t        values = values.slice();\n\t        values.sort(compareNumbers);\n\t    }\n\t\n\t    var quart = values.length / 4;\n\t    var q1 = values[Math.ceil(quart) - 1];\n\t    var q2 = exports.median(values, true);\n\t    var q3 = values[Math.ceil(quart * 3) - 1];\n\t\n\t    return {q1: q1, q2: q2, q3: q3};\n\t};\n\t\n\texports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n\t    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n\t};\n\t\n\texports.pooledVariance = function pooledVariance(samples, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var sum = 0;\n\t    var length = 0, l = samples.length;\n\t    for (var i = 0; i < l; i++) {\n\t        var values = samples[i];\n\t        var vari = exports.variance(values);\n\t\n\t        sum += (values.length - 1) * vari;\n\t\n\t        if (unbiased)\n\t            length += values.length - 1;\n\t        else\n\t            length += values.length;\n\t    }\n\t    return sum / length;\n\t};\n\t\n\texports.mode = function mode(values) {\n\t    var l = values.length,\n\t        itemCount = new Array(l),\n\t        i;\n\t    for (i = 0; i < l; i++) {\n\t        itemCount[i] = 0;\n\t    }\n\t    var itemArray = new Array(l);\n\t    var count = 0;\n\t\n\t    for (i = 0; i < l; i++) {\n\t        var index = itemArray.indexOf(values[i]);\n\t        if (index >= 0)\n\t            itemCount[index]++;\n\t        else {\n\t            itemArray[count] = values[i];\n\t            itemCount[count] = 1;\n\t            count++;\n\t        }\n\t    }\n\t\n\t    var maxValue = 0, maxIndex = 0;\n\t    for (i = 0; i < count; i++) {\n\t        if (itemCount[i] > maxValue) {\n\t            maxValue = itemCount[i];\n\t            maxIndex = i;\n\t        }\n\t    }\n\t\n\t    return itemArray[maxIndex];\n\t};\n\t\n\texports.covariance = function covariance(vector1, vector2, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var mean1 = exports.mean(vector1);\n\t    var mean2 = exports.mean(vector2);\n\t\n\t    if (vector1.length !== vector2.length)\n\t        throw \"Vectors do not have the same dimensions\";\n\t\n\t    var cov = 0, l = vector1.length;\n\t    for (var i = 0; i < l; i++) {\n\t        var x = vector1[i] - mean1;\n\t        var y = vector2[i] - mean2;\n\t        cov += x * y;\n\t    }\n\t\n\t    if (unbiased)\n\t        return cov / (l - 1);\n\t    else\n\t        return cov / l;\n\t};\n\t\n\texports.skewness = function skewness(values, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var theMean = exports.mean(values);\n\t\n\t    var s2 = 0, s3 = 0, l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        var dev = values[i] - theMean;\n\t        s2 += dev * dev;\n\t        s3 += dev * dev * dev;\n\t    }\n\t    var m2 = s2 / l;\n\t    var m3 = s3 / l;\n\t\n\t    var g = m3 / (Math.pow(m2, 3 / 2.0));\n\t    if (unbiased) {\n\t        var a = Math.sqrt(l * (l - 1));\n\t        var b = l - 2;\n\t        return (a / b) * g;\n\t    }\n\t    else {\n\t        return g;\n\t    }\n\t};\n\t\n\texports.kurtosis = function kurtosis(values, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var theMean = exports.mean(values);\n\t    var n = values.length, s2 = 0, s4 = 0;\n\t\n\t    for (var i = 0; i < n; i++) {\n\t        var dev = values[i] - theMean;\n\t        s2 += dev * dev;\n\t        s4 += dev * dev * dev * dev;\n\t    }\n\t    var m2 = s2 / n;\n\t    var m4 = s4 / n;\n\t\n\t    if (unbiased) {\n\t        var v = s2 / (n - 1);\n\t        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n\t        var b = s4 / (v * v);\n\t        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\t\n\t        return a * b - 3 * c;\n\t    }\n\t    else {\n\t        return m4 / (m2 * m2) - 3;\n\t    }\n\t};\n\t\n\texports.entropy = function entropy(values, eps) {\n\t    if (typeof(eps) === 'undefined') eps = 0;\n\t    var sum = 0, l = values.length;\n\t    for (var i = 0; i < l; i++)\n\t        sum += values[i] * Math.log(values[i] + eps);\n\t    return -sum;\n\t};\n\t\n\texports.weightedMean = function weightedMean(values, weights) {\n\t    var sum = 0, l = values.length;\n\t    for (var i = 0; i < l; i++)\n\t        sum += values[i] * weights[i];\n\t    return sum;\n\t};\n\t\n\texports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n\t    return Math.sqrt(exports.weightedVariance(values, weights));\n\t};\n\t\n\texports.weightedVariance = function weightedVariance(values, weights) {\n\t    var theMean = exports.weightedMean(values, weights);\n\t    var vari = 0, l = values.length;\n\t    var a = 0, b = 0;\n\t\n\t    for (var i = 0; i < l; i++) {\n\t        var z = values[i] - theMean;\n\t        var w = weights[i];\n\t\n\t        vari += w * (z * z);\n\t        b += w;\n\t        a += w * w;\n\t    }\n\t\n\t    return vari * (b / (b * b - a));\n\t};\n\t\n\texports.center = function center(values, inPlace) {\n\t    if (typeof(inPlace) === 'undefined') inPlace = false;\n\t\n\t    var result = values;\n\t    if (!inPlace)\n\t        result = values.slice();\n\t\n\t    var theMean = exports.mean(result), l = result.length;\n\t    for (var i = 0; i < l; i++)\n\t        result[i] -= theMean;\n\t};\n\t\n\texports.standardize = function standardize(values, standardDev, inPlace) {\n\t    if (typeof(standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n\t    if (typeof(inPlace) === 'undefined') inPlace = false;\n\t    var l = values.length;\n\t    var result = inPlace ? values : new Array(l);\n\t    for (var i = 0; i < l; i++)\n\t        result[i] = values[i] / standardDev;\n\t    return result;\n\t};\n\t\n\texports.cumulativeSum = function cumulativeSum(array) {\n\t    var l = array.length;\n\t    var result = new Array(l);\n\t    result[0] = array[0];\n\t    for (var i = 1; i < l; i++)\n\t        result[i] = result[i - 1] + array[i];\n\t    return result;\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar arrayStat = __webpack_require__(11);\n\t\n\t// https://github.com/accord-net/framework/blob/development/Sources/Accord.Statistics/Tools.cs\n\t\n\tfunction entropy(matrix, eps) {\n\t    if (typeof(eps) === 'undefined') {\n\t        eps = 0;\n\t    }\n\t    var sum = 0,\n\t        l1 = matrix.length,\n\t        l2 = matrix[0].length;\n\t    for (var i = 0; i < l1; i++) {\n\t        for (var j = 0; j < l2; j++) {\n\t            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n\t        }\n\t    }\n\t    return -sum;\n\t}\n\t\n\tfunction mean(matrix, dimension) {\n\t    if (typeof(dimension) === 'undefined') {\n\t        dimension = 0;\n\t    }\n\t    var rows = matrix.length,\n\t        cols = matrix[0].length,\n\t        theMean, N, i, j;\n\t\n\t    if (dimension === -1) {\n\t        theMean = [0];\n\t        N = rows * cols;\n\t        for (i = 0; i < rows; i++) {\n\t            for (j = 0; j < cols; j++) {\n\t                theMean[0] += matrix[i][j];\n\t            }\n\t        }\n\t        theMean[0] /= N;\n\t    } else if (dimension === 0) {\n\t        theMean = new Array(cols);\n\t        N = rows;\n\t        for (j = 0; j < cols; j++) {\n\t            theMean[j] = 0;\n\t            for (i = 0; i < rows; i++) {\n\t                theMean[j] += matrix[i][j];\n\t            }\n\t            theMean[j] /= N;\n\t        }\n\t    } else if (dimension === 1) {\n\t        theMean = new Array(rows);\n\t        N = cols;\n\t        for (j = 0; j < rows; j++) {\n\t            theMean[j] = 0;\n\t            for (i = 0; i < cols; i++) {\n\t                theMean[j] += matrix[j][i];\n\t            }\n\t            theMean[j] /= N;\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t    return theMean;\n\t}\n\t\n\tfunction standardDeviation(matrix, means, unbiased) {\n\t    var vari = variance(matrix, means, unbiased), l = vari.length;\n\t    for (var i = 0; i < l; i++) {\n\t        vari[i] = Math.sqrt(vari[i]);\n\t    }\n\t    return vari;\n\t}\n\t\n\tfunction variance(matrix, means, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') {\n\t        unbiased = true;\n\t    }\n\t    means = means || mean(matrix);\n\t    var rows = matrix.length;\n\t    if (rows === 0) return [];\n\t    var cols = matrix[0].length;\n\t    var vari = new Array(cols);\n\t\n\t    for (var j = 0; j < cols; j++) {\n\t        var sum1 = 0, sum2 = 0, x = 0;\n\t        for (var i = 0; i < rows; i++) {\n\t            x = matrix[i][j] - means[j];\n\t            sum1 += x;\n\t            sum2 += x * x;\n\t        }\n\t        if (unbiased) {\n\t            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n\t        } else {\n\t            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n\t        }\n\t    }\n\t    return vari;\n\t}\n\t\n\tfunction median(matrix) {\n\t    var rows = matrix.length, cols = matrix[0].length;\n\t    var medians = new Array(cols);\n\t\n\t    for (var i = 0; i < cols; i++) {\n\t        var data = new Array(rows);\n\t        for (var j = 0; j < rows; j++) {\n\t            data[j] = matrix[j][i];\n\t        }\n\t        data.sort();\n\t        var N = data.length;\n\t        if (N % 2 === 0) {\n\t            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n\t        } else {\n\t            medians[i] = data[Math.floor(N / 2)];\n\t        }\n\t    }\n\t    return medians;\n\t}\n\t\n\tfunction mode(matrix) {\n\t    var rows = matrix.length,\n\t        cols = matrix[0].length,\n\t        modes = new Array(cols),\n\t        i, j;\n\t    for (i = 0; i < cols; i++) {\n\t        var itemCount = new Array(rows);\n\t        for (var k = 0; k < rows; k++) {\n\t            itemCount[k] = 0;\n\t        }\n\t        var itemArray = new Array(rows);\n\t        var count = 0;\n\t\n\t        for (j = 0; j < rows; j++) {\n\t            var index = itemArray.indexOf(matrix[j][i]);\n\t            if (index >= 0) {\n\t                itemCount[index]++;\n\t            } else {\n\t                itemArray[count] = matrix[j][i];\n\t                itemCount[count] = 1;\n\t                count++;\n\t            }\n\t        }\n\t\n\t        var maxValue = 0, maxIndex = 0;\n\t        for (j = 0; j < count; j++) {\n\t            if (itemCount[j] > maxValue) {\n\t                maxValue = itemCount[j];\n\t                maxIndex = j;\n\t            }\n\t        }\n\t\n\t        modes[i] = itemArray[maxIndex];\n\t    }\n\t    return modes;\n\t}\n\t\n\tfunction skewness(matrix, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var means = mean(matrix);\n\t    var n = matrix.length, l = means.length;\n\t    var skew = new Array(l);\n\t\n\t    for (var j = 0; j < l; j++) {\n\t        var s2 = 0, s3 = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var dev = matrix[i][j] - means[j];\n\t            s2 += dev * dev;\n\t            s3 += dev * dev * dev;\n\t        }\n\t\n\t        var m2 = s2 / n;\n\t        var m3 = s3 / n;\n\t        var g = m3 / Math.pow(m2, 3 / 2);\n\t\n\t        if (unbiased) {\n\t            var a = Math.sqrt(n * (n - 1));\n\t            var b = n - 2;\n\t            skew[j] = (a / b) * g;\n\t        } else {\n\t            skew[j] = g;\n\t        }\n\t    }\n\t    return skew;\n\t}\n\t\n\tfunction kurtosis(matrix, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var means = mean(matrix);\n\t    var n = matrix.length, m = matrix[0].length;\n\t    var kurt = new Array(m);\n\t\n\t    for (var j = 0; j < m; j++) {\n\t        var s2 = 0, s4 = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var dev = matrix[i][j] - means[j];\n\t            s2 += dev * dev;\n\t            s4 += dev * dev * dev * dev;\n\t        }\n\t        var m2 = s2 / n;\n\t        var m4 = s4 / n;\n\t\n\t        if (unbiased) {\n\t            var v = s2 / (n - 1);\n\t            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n\t            var b = s4 / (v * v);\n\t            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\t            kurt[j] = a * b - 3 * c;\n\t        } else {\n\t            kurt[j] = m4 / (m2 * m2) - 3;\n\t        }\n\t    }\n\t    return kurt;\n\t}\n\t\n\tfunction standardError(matrix) {\n\t    var samples = matrix.length;\n\t    var standardDeviations = standardDeviation(matrix), l = standardDeviations.length;\n\t    var standardErrors = new Array(l);\n\t    var sqrtN = Math.sqrt(samples);\n\t\n\t    for (var i = 0; i < l; i++) {\n\t        standardErrors[i] = standardDeviations[i] / sqrtN;\n\t    }\n\t    return standardErrors;\n\t}\n\t\n\tfunction covariance(matrix, dimension) {\n\t    return scatter(matrix, undefined, dimension);\n\t}\n\t\n\tfunction scatter(matrix, divisor, dimension) {\n\t    if (typeof(dimension) === 'undefined') {\n\t        dimension = 0;\n\t    }\n\t    if (typeof(divisor) === 'undefined') {\n\t        if (dimension === 0) {\n\t            divisor = matrix.length - 1;\n\t        } else if (dimension === 1) {\n\t            divisor = matrix[0].length - 1;\n\t        }\n\t    }\n\t    var means = mean(matrix, dimension),\n\t        rows = matrix.length;\n\t    if (rows === 0) {\n\t        return [[]];\n\t    }\n\t    var cols = matrix[0].length,\n\t        cov, i, j, s, k;\n\t\n\t    if (dimension === 0) {\n\t        cov = new Array(cols);\n\t        for (i = 0; i < cols; i++) {\n\t            cov[i] = new Array(cols);\n\t        }\n\t        for (i = 0; i < cols; i++) {\n\t            for (j = i; j < cols; j++) {\n\t                s = 0;\n\t                for (k = 0; k < rows; k++) {\n\t                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n\t                }\n\t                s /= divisor;\n\t                cov[i][j] = s;\n\t                cov[j][i] = s;\n\t            }\n\t        }\n\t    } else if (dimension === 1) {\n\t        cov = new Array(rows);\n\t        for (i = 0; i < rows; i++) {\n\t            cov[i] = new Array(rows);\n\t        }\n\t        for (i = 0; i < rows; i++) {\n\t            for (j = i; j < rows; j++) {\n\t                s = 0;\n\t                for (k = 0; k < cols; k++) {\n\t                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n\t                }\n\t                s /= divisor;\n\t                cov[i][j] = s;\n\t                cov[j][i] = s;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t\n\t    return cov;\n\t}\n\t\n\tfunction correlation(matrix) {\n\t    var means = mean(matrix),\n\t        standardDeviations = standardDeviation(matrix, true, means),\n\t        scores = zScores(matrix, means, standardDeviations),\n\t        rows = matrix.length,\n\t        cols = matrix[0].length,\n\t        i, j;\n\t\n\t    var cor = new Array(cols);\n\t    for (i = 0; i < cols; i++) {\n\t        cor[i] = new Array(cols);\n\t    }\n\t    for (i = 0; i < cols; i++) {\n\t        for (j = i; j < cols; j++) {\n\t            var c = 0;\n\t            for (var k = 0, l = scores.length; k < l; k++) {\n\t                c += scores[k][j] * scores[k][i];\n\t            }\n\t            c /= rows - 1;\n\t            cor[i][j] = c;\n\t            cor[j][i] = c;\n\t        }\n\t    }\n\t    return cor;\n\t}\n\t\n\tfunction zScores(matrix, means, standardDeviations) {\n\t    means = means || mean(matrix);\n\t    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix, true, means);\n\t    return standardize(center(matrix, means, false), standardDeviations, true);\n\t}\n\t\n\tfunction center(matrix, means, inPlace) {\n\t    means = means || mean(matrix);\n\t    var result = matrix,\n\t        l = matrix.length,\n\t        i, j, jj;\n\t\n\t    if (!inPlace) {\n\t        result = new Array(l);\n\t        for (i = 0; i < l; i++) {\n\t            result[i] = new Array(matrix[i].length);\n\t        }\n\t    }\n\t\n\t    for (i = 0; i < l; i++) {\n\t        var row = result[i];\n\t        for (j = 0, jj = row.length; j < jj; j++) {\n\t            row[j] = matrix[i][j] - means[j];\n\t        }\n\t    }\n\t    return result;\n\t}\n\t\n\tfunction standardize(matrix, standardDeviations, inPlace) {\n\t    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix);\n\t    var result = matrix,\n\t        l = matrix.length,\n\t        i, j, jj;\n\t\n\t    if (!inPlace) {\n\t        result = new Array(l);\n\t        for (i = 0; i < l; i++) {\n\t            result[i] = new Array(matrix[i].length);\n\t        }\n\t    }\n\t\n\t    for (i = 0; i < l; i++) {\n\t        var resultRow = result[i];\n\t        var sourceRow = matrix[i];\n\t        for (j = 0, jj = resultRow.length; j < jj; j++) {\n\t            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n\t                resultRow[j] = sourceRow[j] / standardDeviations[j];\n\t            }\n\t        }\n\t    }\n\t    return result;\n\t}\n\t\n\tfunction weightedVariance(matrix, weights) {\n\t    var means = mean(matrix);\n\t    var rows = matrix.length;\n\t    if (rows === 0) return [];\n\t    var cols = matrix[0].length;\n\t    var vari = new Array(cols);\n\t\n\t    for (var j = 0; j < cols; j++) {\n\t        var sum = 0;\n\t        var a = 0, b = 0;\n\t\n\t        for (var i = 0; i < rows; i++) {\n\t            var z = matrix[i][j] - means[j];\n\t            var w = weights[i];\n\t\n\t            sum += w * (z * z);\n\t            b += w;\n\t            a += w * w;\n\t        }\n\t\n\t        vari[j] = sum * (b / (b * b - a));\n\t    }\n\t\n\t    return vari;\n\t}\n\t\n\tfunction weightedMean(matrix, weights, dimension) {\n\t    if (typeof(dimension) === 'undefined') {\n\t        dimension = 0;\n\t    }\n\t    var rows = matrix.length;\n\t    if (rows === 0) return [];\n\t    var cols = matrix[0].length,\n\t        means, i, ii, j, w, row;\n\t\n\t    if (dimension === 0) {\n\t        means = new Array(cols);\n\t        for (i = 0; i < cols; i++) {\n\t            means[i] = 0;\n\t        }\n\t        for (i = 0; i < rows; i++) {\n\t            row = matrix[i];\n\t            w = weights[i];\n\t            for (j = 0; j < cols; j++) {\n\t                means[j] += row[j] * w;\n\t            }\n\t        }\n\t    } else if (dimension === 1) {\n\t        means = new Array(rows);\n\t        for (i = 0; i < rows; i++) {\n\t            means[i] = 0;\n\t        }\n\t        for (j = 0; j < rows; j++) {\n\t            row = matrix[j];\n\t            w = weights[j];\n\t            for (i = 0; i < cols; i++) {\n\t                means[j] += row[i] * w;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t\n\t    var weightSum = arrayStat.sum(weights);\n\t    if (weightSum !== 0) {\n\t        for (i = 0, ii = means.length; i < ii; i++) {\n\t            means[i] /= weightSum;\n\t        }\n\t    }\n\t    return means;\n\t}\n\t\n\tfunction weightedCovariance(matrix, weights, means, dimension) {\n\t    dimension = dimension || 0;\n\t    means = means || weightedMean(matrix, weights, dimension);\n\t    var s1 = 0, s2 = 0;\n\t    for (var i = 0, ii = weights.length; i < ii; i++) {\n\t        s1 += weights[i];\n\t        s2 += weights[i] * weights[i];\n\t    }\n\t    var factor = s1 / (s1 * s1 - s2);\n\t    return weightedScatter(matrix, weights, means, factor, dimension);\n\t}\n\t\n\tfunction weightedScatter(matrix, weights, means, factor, dimension) {\n\t    dimension = dimension || 0;\n\t    means = means || weightedMean(matrix, weights, dimension);\n\t    if (typeof(factor) === 'undefined') {\n\t        factor = 1;\n\t    }\n\t    var rows = matrix.length;\n\t    if (rows === 0) {\n\t        return [[]];\n\t    }\n\t    var cols = matrix[0].length,\n\t        cov, i, j, k, s;\n\t\n\t    if (dimension === 0) {\n\t        cov = new Array(cols);\n\t        for (i = 0; i < cols; i++) {\n\t            cov[i] = new Array(cols);\n\t        }\n\t        for (i = 0; i < cols; i++) {\n\t            for (j = i; j < cols; j++) {\n\t                s = 0;\n\t                for (k = 0; k < rows; k++) {\n\t                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n\t                }\n\t                cov[i][j] = s * factor;\n\t                cov[j][i] = s * factor;\n\t            }\n\t        }\n\t    } else if (dimension === 1) {\n\t        cov = new Array(rows);\n\t        for (i = 0; i < rows; i++) {\n\t            cov[i] = new Array(rows);\n\t        }\n\t        for (i = 0; i < rows; i++) {\n\t            for (j = i; j < rows; j++) {\n\t                s = 0;\n\t                for (k = 0; k < cols; k++) {\n\t                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n\t                }\n\t                cov[i][j] = s * factor;\n\t                cov[j][i] = s * factor;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t\n\t    return cov;\n\t}\n\t\n\tmodule.exports = {\n\t    entropy: entropy,\n\t    mean: mean,\n\t    standardDeviation: standardDeviation,\n\t    variance: variance,\n\t    median: median,\n\t    mode: mode,\n\t    skewness: skewness,\n\t    kurtosis: kurtosis,\n\t    standardError: standardError,\n\t    covariance: covariance,\n\t    scatter: scatter,\n\t    correlation: correlation,\n\t    zScores: zScores,\n\t    center: center,\n\t    standardize: standardize,\n\t    weightedVariance: weightedVariance,\n\t    weightedMean: weightedMean,\n\t    weightedCovariance: weightedCovariance,\n\t    weightedScatter: weightedScatter\n\t};\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** chemcalc-extended.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3375fc15ce8a72ecbd5b\n **/","'use strict';\n\n\nvar CC = require('chemcalc');\nvar PEP = require('peptide');\nvar MfProcessor = exports.MfProcessor = require('./MfProcessor');\n\nvar massPeakPicking = require('./massPeakPicking');\n\nvar CE = exports;\n\nCE.analyseMF = CC.analyseMF;\nCE.getInfo = CC.getInfo;\nCE.mfFromMonoisotopicMass = CC.mfFromMonoisotopicMass;\n\n/*\n mfFromMonoisotopicMassSimilarity\n We will extend mfFromMonoisotopicMass in order to include in the options:\n * experimental : an array of [[x1,y1],[x2,y2],...] or [[x1,x2,x3,...][y1,y2,y3,...]]\n * widthTop : top width of the trapezoid\n * widthBottom : bottom width of the trapezoid\n * from : mass \"from\" which calculate the similarity\n * to : mass \"to\" which calculate the similarity\n * As an alternative the from / to parameters can be calculated based target mass\n *\n * decimalsPPM : number of decimals for PPM\n * decimalsMass : number odecimals for the mass\n */\nCE.mfFromMonoisotopicMassSimilarity = function (mass, experimental, options) {\n    var mfResults = CC.mfFromMonoisotopicMass(mass, options);\n\n    var processor = new MfProcessor(experimental, options);\n\n\n    var results = mfResults.results;\n    for (var i = 0; i < results.length; i++) {\n        var result = results[i];\n        processor.process(result.mf.value, result);\n    }\n    mfResults.extractExperimental = processor.similarity.getExtract1();\n    return mfResults;\n};\n\n\nCE.matchMFs = function (mfsArray, experimental, options) {\n    options = options || {};\n    options.addExperimentalExtract = true;\n    options.maxResults = options.maxResults || 500;\n    options.minSimilarity = (isNaN(options.minSimilarity)) ? 50 : options.minSimilarity;\n\n    var processor = new MfProcessor(experimental, options);\n    var mfs = CE.combineMFs(mfsArray);\n\n    var results = [];\n    for (var i = 0; i < mfs.length; i++) {\n        var result = processor.process(mfs[i].mf);\n        results.push(result);\n        result.parts = mfs[i];\n        if (results.length > options.maxResults * 2) {\n            results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n        }\n    }\n    results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n    return {options: options, results: results};\n};\n\n/* we have 2 criteria to find the best results\n 1. best match per zone based on the bestOf parameter\n 2. maxResults : maximal number of results\n */\nCE.bestResults = function (results, bestOf, maxResults, minSimilarity) {\n    var newResults = [];\n\n    // in order to find the bestOf we will sort by similarity and take all of them for which there is nothing in a range\n    // of the bestOf range\n\n    results.sort(function (a, b) {\n        return b.similarity - a.similarity;\n    });\n\n    if (minSimilarity) {\n        for (var i = 0; i < results.length; i++) {\n            if (results[i].similarity < minSimilarity) {\n                results = results.slice(0, i);\n                break;\n            }\n        }\n    }\n\n    if (bestOf) {\n        for (var i = 0; i < results.length && newResults.length < maxResults; i++) {\n            for (var j = 0; j < newResults.length; j++) {\n                if (Math.abs(newResults[j].msem - results[i].msem) < (bestOf / (results[i].charge || 1))) {\n                    break;\n                }\n            }\n            if (j == newResults.length) {\n                newResults.push(results[i]);\n            }\n        }\n    } else {\n        newResults = results.slice(0, maxResults);\n    }\n\n    return newResults;\n};\n\n\nCE.getEutrophicationPotential = function (mf) {\n    var chemcalc = CC.analyseMF(mf);\n    var atoms = chemcalc.parts[0].ea;\n    var mw = chemcalc.mw;\n    var nC = 0, nO = 0, nN = 0, nP = 0, nH = 0;\n    for (var i = 0; i < atoms.length; i++) {\n        var atom = atoms[i];\n        switch (atom.element) {\n            case 'C':\n                nC = atom.number;\n                break;\n            case 'N':\n                nN = atom.number;\n                break;\n            case 'O':\n                nO = atom.number;\n                break;\n            case 'H':\n                nH = atom.number;\n                break;\n            case 'P':\n                nP = atom.number;\n                break;\n            default:\n                return {log: 'EP can not be calculated because the MF contains the element: ' + atom.element};\n        }\n    }\n\n    var vRef = 1;\n    var mwRef = 94.97;\n\n    var thOD = nC + (nH - 3 * nN) / 4 - nO / 2;\n    var v = nP + nN / 16 + thOD / 138;\n    var ep = (v / mw) / (vRef / mwRef);\n\n    return {\n        v: v,\n        thOD: thOD,\n        ep: ep,\n        mf: {type: 'mf', value: mf},\n        mw: chemcalc.mw,\n        log: 'Successful calculation'\n    };\n};\n\n\nCE.convertAASequence = function (sequence) {\n    return PEP.convertAASequence(sequence);\n}\n\nCE.chargePeptide = function (sequence) {\n    return PEP.chargePeptide(sequence);\n}\n\n\nCE.generatePeptideFragments = function (sequence, options) {\n    return PEP.generatePeptideFragments(sequence, options);\n}\n\nCE.combineMFs = function (keys) {\n    function appendResult(results, currents, keys) {\n        // this script is designed to combine molecular formula\n        // that may contain comments after a \"$\" sign\n        // therefore we should put all the comments at the ned\n        var result = {mf: ''};\n        var comments = [];\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i][currents[i]];\n            if (key) {\n                result['part' + (i + 1)] = key;\n                if (key.indexOf('$') > -1) {\n                    comments.push(key.replace(/^[^$]*\\$/, ''));\n                    key = key.replace(/\\$.*/, '');\n                }\n                result.mf += key;\n            }\n        }\n\n        if (comments.length > 0) result.mf += '$' + comments.join(' ');\n\n        results.push(result);\n    }\n\n    if (!Array.isArray(keys)) return [];\n    if (!Array.isArray(keys[0])) keys = [keys];\n    var results = [];\n    var sizes = new Array(keys.length);\n    var currents = new Array(keys.length);\n    for (var i = 0; i < keys.length; i++) {\n        sizes[i] = keys[i].length - 1;\n        currents[i] = 0;\n    }\n    var position = 0;\n    var evolution = 0;\n\n    while (position < currents.length) {\n        if (currents[position] < sizes[position]) {\n            evolution++;\n            appendResult(results, currents, keys);\n            currents[position]++;\n            for (var i = 0; i < position; i++) {\n                currents[i] = 0;\n            }\n            position = 0;\n        } else {\n            position++;\n        }\n    }\n    appendResult(results, currents, keys);\n    return results;\n};\n\n\nCE.massPeakPicking = massPeakPicking;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * chemcalc - Analyse molecular formula\n * @version v3.0.4\n * @date 2015-09-02T14:38:40.161Z\n * @link http://www.chemcalc.org\n * @license BSD\n*/\n(function () {\n    'use strict';\n\n    function getExports($wnd) {\n\n        var $doc = $wnd.document;\n        var $gwt = {};\n        var navigator = {\n            userAgent: 'webkit'\n        };\n\n        function noop(){}\n\n        var __gwtModuleFunction = noop;\n        __gwtModuleFunction.__moduleStartupDone = noop;\n        var $sendStats = noop;\n        var $moduleName, $moduleBase;\n\n        // Start GWT code \nfunction Qg(){}\nfunction Lg(){}\nfunction db(){}\nfunction dd(){}\nfunction hc(){}\nfunction qc(){}\nfunction qp(){}\nfunction Xp(){}\nfunction cq(){}\nfunction eq(){}\nfunction Hr(){}\nfunction Hs(){}\nfunction il(a){}\nfunction yc(){tc()}\nfunction sb(){mb(this)}\nfunction Xo(){Oo(this)}\nfunction Xh(a){this.a=a}\nfunction Pc(a){this.a=a}\nfunction Yc(a){this.a=a}\nfunction hd(a){this.a=a}\nfunction ud(a){this.a=a}\nfunction fi(a){this.a=a}\nfunction Ri(a){this.a=a}\nfunction fj(a){this.a=a}\nfunction qn(a){this.a=a}\nfunction Nn(a){this.a=a}\nfunction Sn(a){this.a=a}\nfunction Wn(a){this.a=a}\nfunction _n(a){this.a=a}\nfunction In(a){this.c=a}\nfunction Bo(a){this.a=a}\nfunction Go(a){this.a=a}\nfunction Lo(a){this.a=a}\nfunction bu(a){this.a=a}\nfunction Oc(){this.a=[]}\nfunction pu(){this.nb()}\nfunction Oh(){return Kb}\nfunction Od(a){return a.a}\nfunction nd(a){return a.a}\nfunction zd(a){return a.a}\nfunction Uc(a){return a.a}\nfunction _c(a){return a.a}\nfunction gd(){return null}\nfunction Gd(){return null}\nfunction bn(a){++a.b;up(a)}\nfunction cn(a){--a.b;up(a)}\nfunction bh(a,b){a.h=b}\nfunction dh(a,b){a.l=b}\nfunction eh(a,b){a.m=b}\nfunction $h(){sb.call(this)}\nfunction dj(){sb.call(this)}\nfunction Bj(){sb.call(this)}\nfunction xk(){sb.call(this)}\nfunction vp(){sb.call(this)}\nfunction wp(){sb.call(this)}\nfunction Oq(){sb.call(this)}\nfunction Cq(){mq.call(this)}\nfunction Lq(){mq.call(this)}\nfunction dr(){Sq.call(this)}\nfunction ai(){$h.call(this)}\nfunction Pp(){Hp.call(this)}\nfunction Fs(){tr.call(this)}\nfunction Xb(){Tb();Ub(this)}\nfunction vb(){vb=Lg;ub=new db}\nfunction cd(){cd=Lg;bd=new dd}\nfunction ec(){ec=Lg;dc=new hc}\nfunction pp(){pp=Lg;op=new qp}\nfunction ku(){ku=Lg;ju=new zp}\nfunction Gu(){this.a=new Oc}\nfunction Mu(){this.a=new td}\nfunction Sq(){this.a=new Xo}\nfunction $r(){this.g=new tr}\nfunction Hp(){this.a=this.$()}\nfunction ad(a){tb.call(this,a)}\nfunction Zh(a){tb.call(this,a)}\nfunction _h(a){tb.call(this,a)}\nfunction bi(a){tb.call(this,a)}\nfunction cj(a){tb.call(this,a)}\nfunction Cj(a){tb.call(this,a)}\nfunction tb(a){rb.call(this,a)}\nfunction Dj(a){cj.call(this,a)}\nfunction nk(a){Xh.call(this,a)}\nfunction uk(a){Xh.call(this,a)}\nfunction yk(a){tb.call(this,a)}\nfunction mk(){Xh.call(this,'')}\nfunction sk(){Xh.call(this,'')}\nfunction tk(){Xh.call(this,'')}\nfunction td(){ud.call(this,{})}\nfunction Fr(a){Bo.call(this,a)}\nfunction wt(a){_r.call(this,a)}\nfunction It(a){rb.call(this,a)}\nfunction Xi(a){return isNaN(a)}\nfunction lr(a){return !!a&&a.b}\nfunction sj(a){return a<0?-a:a}\nfunction fe(a){return a<<24>>24}\nfunction Dd(a){return new hd(a)}\nfunction Fd(a){return new Id(a)}\nfunction Rd(a,b){return Di(a,b)}\nfunction Jj(a,b){return a===b}\nfunction wj(a,b){return a>b?a:b}\nfunction xj(a,b){return a<b?a:b}\nfunction Bp(b,a){return b.a[a]}\nfunction Qh(a){return a.tM===Qg}\nfunction qh(a,b){return !ph(a,b)}\nfunction rh(a,b){return !oh(a,b)}\nfunction mc(a,b){lc();kc.o(a,b)}\nfunction lq(c,a,b){c.a[a]=b}\nfunction lk(a,b){a.a+=b;return a}\nfunction pk(a,b){a.a+=b;return a}\nfunction qk(a,b){a.a+=b;return a}\nfunction ui(a){ti(a);return a.k}\nfunction _r(a){this.g=new ur(a)}\nfunction mq(){this.a=this.eb()}\nfunction rb(a){this.f=a;mb(this)}\nfunction Mh(){Kh==null&&(Kh=[])}\nfunction _p(){_p=Lg;$p=bq()}\nfunction hk(){hk=Lg;ek={};gk={}}\nfunction Qb(){Eb!=0&&(Eb=0);Hb=-1}\nfunction rj(a){return a<=0?0-a:a}\nfunction zr(a){return a.b=Gn(a.a)}\nfunction Us(a){return a.a.e*a.a.c}\nfunction Vs(a){return a.a.e*a.a.d}\nfunction Fn(a){return a.a<a.c.G()}\nfunction Ch(a){return a.l|a.m<<22}\nfunction Cd(a){return Xc(),a?Wc:Vc}\nfunction vo(a){return uo(a,fr(a))}\nfunction vj(a){return Math.log(a)}\nfunction tj(a){return Math.ceil(a)}\nfunction Aj(a){return Math.sqrt(a)}\nfunction ce(a){return be(a)&&Qh(a)}\nfunction so(a,b){return !!a.X(b)}\nfunction to(a,b){return Xm(a.X(b))}\nfunction Rq(a,b){return Qo(a.a,b)}\nfunction Cp(b,a){return b.a[a]||[]}\nfunction Wm(a){return !a?null:a.c}\nfunction tr(){ur.call(this,null)}\nfunction Or(a,b){Zi.call(this,a,b)}\nfunction Gm(a,b){Zi.call(this,a,b)}\nfunction lo(a,b){eo.call(this,a,b)}\nfunction eo(a,b){this.c=a;this.d=b}\nfunction Zi(a,b){this.a=a;this.b=b}\nfunction yq(a,b){this.a=a;this.b=b}\nfunction vq(a,b){this.b=a;this.c=b}\nfunction tp(a,b){a._gwt_modCount=b}\nfunction dp(a,b,c){a.splice(b,c)}\nfunction ej(a,b){return gj(a.a,b.a)}\nfunction $d(a){return !be(a)&&Qh(a)}\nfunction uj(a){return Math.floor(a)}\nfunction zj(a){return Math.round(a)}\nfunction Xm(a){return !a?null:a.U()}\nfunction ee(a){return a==null?null:a}\nfunction Lj(b,a){return b.indexOf(a)}\nfunction Pb(a){$wnd.clearTimeout(a)}\nfunction Cl(a){hl();Dl.call(this,a)}\nfunction mo(a){eo.call(this,a.c,a.d)}\nfunction Sr(){Or.call(this,'Head',1)}\nfunction Xr(){Or.call(this,'Tail',3)}\nfunction Oo(a){a.b=Sd($e,Ru,1,0,3,1)}\nfunction Rt(a){a.b=a.d.b;a.c=new Fs}\nfunction Dc(a){if(!a){throw new Oq}}\nfunction Ic(a){if(!a){throw new dj}}\nfunction cr(a,b){Qo(a.a,b);return b}\nfunction ok(a,b){a.a+=Zd(b);return a}\nfunction ep(a,b,c,d){a.splice(b,c,d)}\nfunction kh(a,b){return Vg(a,b,false)}\nfunction Tg(a){return Ug(a.l,a.m,a.h)}\nfunction Qq(a){return a!=null?jb(a):0}\nfunction gj(a,b){return a<b?-1:a>b?1:0}\nfunction gi(a,b){return a==b?0:a?1:-1}\nfunction yj(a,b){return Math.pow(a,b)}\nfunction be(a){return Array.isArray(a)}\nfunction fh(a){return a.l+a.m*Vu+a.h*Wu}\nfunction Nb(a){return a.$H||(a.$H=++Fb)}\nfunction Vj(a){return Sd(ef,Ru,2,a,4,1)}\nfunction Ij(b,a){return b.charCodeAt(a)}\nfunction Wj(a,b,c){return a.substr(b,c)}\nfunction Ug(a,b,c){return {l:a,m:b,h:c}}\nfunction Ju(a,b,c){rd(a.a,b,c);return a}\nfunction sh(a,b){Vg(a,b,true);return Rg}\nfunction yp(a){var b;b=jb(a);return ~~b}\nfunction Jg(a){var b=Ig;return Og(b[a])}\nfunction Jq(a){this.a=a;Xo.call(this)}\nfunction Vp(a){this.a=a;Xo.call(this)}\nfunction Rk(a){this.e=5;Lk(this,Fc(a))}\nfunction Br(a){Cr.call(this,a,(Nr(),Jr))}\nfunction Ur(){Or.call(this,'Range',2)}\nfunction Rh(){$wnd.setTimeout(Nu(Sh))}\nfunction Vo(a){return Pd(a.b,a.b.length)}\nfunction Rj(a,b){return Wj(a,b,a.length-b)}\nfunction Sj(a,b,c){return a.substr(b,c-b)}\nfunction Mj(b,a){return b.lastIndexOf(a)}\nfunction an(a,b){return a.c.Z(b)||a.a.Z(b)}\nfunction Qi(a,b){return _d(b,7)&&b.a==a.a}\nfunction pi(a){return a>=56320&&a<=57343}\nfunction de(a){return typeof a==='string'}\nfunction nj(a,b){return (a>>>0).toString(b)}\nfunction pc(a){lc();return parseInt(a)||-1}\nfunction ti(a){if(a.k!=null){return}Hi(a)}\nfunction Rn(a){var b;b=vn(a.a);return b.T()}\nfunction $n(a){var b;b=vn(a.a);return b.U()}\nfunction Ko(a){var b;b=zr(a.a);return b.T()}\nfunction co(a,b){var c;c=a.d;a.d=b;return c}\nfunction mb(a){a.g=null;mc(a,a.f);return a}\nfunction Ar(a){Hn(a.a);or(a.c,a.b);a.b=null}\nfunction Ac(a,b){if(!a){throw new bi(''+b)}}\nfunction Bc(a,b){if(!a){throw new cj(''+b)}}\nfunction Th(a,b){this.e=b;this.f=a;mb(this)}\nfunction Zt(a,b){this.d=a;Rt(this);this.c=b}\nfunction gt(a,b,c){ht.call(this,a,b,c,true)}\nfunction Ps(a,b,c,d){Os.call(this,a,0,b,c,d)}\nfunction Ib(a,b,c){return a.apply(b,c);var d}\nfunction $j(a,b){return de(a)?Zj(a,b):a.t(b)}\nfunction Nj(c,a,b){return c.lastIndexOf(a,b)}\nfunction Zd(a){return String.fromCharCode(a)}\nfunction ck(a){return String.fromCharCode(a)}\nfunction Wi(a){return !isFinite(a)&&!isNaN(a)}\nfunction ae(a){return a!=null&&!de(a)&&!Qh(a)}\nfunction Ai(){var a;a=xi(null);a.e=2;return a}\nfunction yi(a){var b;b=xi(a);Li(a,b);return b}\nfunction Qo(a,b){a.b[a.b.length]=b;return true}\nfunction Ro(a,b){Ec(b,a.b.length);return a.b[b]}\nfunction Ao(a){if(!a){throw new Oq}return a.c}\nfunction Fc(a){if(a==null){throw new Bj}return a}\nfunction Gc(a,b){if(a==null){throw new Cj(''+b)}}\nfunction Id(a){if(a==null){throw new Bj}this.a=a}\nfunction Vq(a,b){if(a<0||a>=b){throw new ai}}\nfunction Fu(a,b){Mc(a.a,a.a.a.length,b);return a}\nfunction Bi(a){var b;b=xi(a);b.j=a;b.e=1;return b}\nfunction Pk(a){this.f=a;this.e=5;this.a=Sk(a)}\nfunction qj(){qj=Lg;pj=Sd(We,Ru,19,256,0,1)}\nfunction tc(){tc=Lg;Error.stackTraceLimit=64}\nfunction ut(a,b,c){vt.call(this,a,b,c,1,true)}\nfunction Td(a,b,c,d,e,f){return Ud(a,b,c,d,e,0,f)}\nfunction Po(a,b,c){Hc(b,a.b.length);ep(a.b,b,0,c)}\nfunction _m(a,b){return de(b)?fn(a,b):!!Dp(a.a,b)}\nfunction Rm(a,b){return b===a?'(this Map)':''+b}\nfunction gs(a){return a.a!=0?'['+a.a+a.i+']':a.i}\nfunction cb(a){return ui(hb(a))+'@'+nj(jb(a),16)}\nfunction vn(a){return sp(a.c,a),Dc(un(a)),a.a.O()}\nfunction Zr(a,b){return mr(a.g,b,(ei(),ci))==null}\nfunction Mg(a){return a instanceof Array?a[0]:null}\nfunction dn(a,b){return de(b)?en(a,b):Xm(Dp(a.a,b))}\nfunction lh(a,b){return a.l==b.l&&a.m==b.m&&a.h==b.h}\nfunction vh(a,b){return a.l!=b.l||a.m!=b.m||a.h!=b.h}\nfunction Yt(a,b){b<1.0E-10&&(b=1.0E-10);a.b=b}\nfunction Xt(a,b,c,d){us(a.c,d);ts(a.c,c);ys(a.c,b)}\nfunction nr(a,b){var c;c=new Hr;pr(a,b,c);return c.d}\nfunction Mc(a,b,c){var d;d=Lc(a,b);Nc(a,b,c);return d}\nfunction rd(a,b,c){var d;d=pd(a,b);sd(a,b,c);return d}\nfunction ic(a,b){!a&&(a=[]);a[a.length]=b;return a}\nfunction Zj(a,b){if(a==b){return 0}return a<b?-1:1}\nfunction Ap(c,a){var b=c.a;return b[a]||(b[a]=[])}\nfunction up(a){var b;b=a._gwt_modCount|0;tp(a,b+1)}\nfunction Ep(a){return Object.getOwnPropertyNames(a.a)}\nfunction iq(a){return Object.getOwnPropertyNames(a.a)}\nfunction hb(a){return de(a)?ef:$d(a)?a.cZ:ce(a)?a.cZ:me}\nfunction gn(a,b,c){return de(b)?hn(a,b,c):Fp(a.a,b,c)}\nfunction jh(a,b){return {l:a.l&b.l,m:a.m&b.m,h:a.h&b.h}}\nfunction wh(a,b){return {l:a.l|b.l,m:a.m|b.m,h:a.h|b.h}}\nfunction Eh(a,b){return {l:a.l^b.l,m:a.m^b.m,h:a.h^b.h}}\nfunction xp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\nfunction Pq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\nfunction uo(a,b){!!b&&or(a,b);return !b?null:new mo(b)}\nfunction Gn(a){Dc(a.a<a.c.G());return a.c.R(a.b=a.a++)}\nfunction Hn(a){Ic(a.b!=-1);a.c.S(a.b);a.a=a.b;a.b=-1}\nfunction Lk(a,b){a.c=b;a.a=Ml(b);a.a<54&&(a.f=Bh(ql(b)))}\nfunction rk(a,b,c){a.a=Sj(a.a,0,b)+c+Rj(a.a,b);return a}\nfunction fu(a){if(fn(du,a)){return en(du,a)}return null}\nfunction pd(a,b){if(b==null){throw new Bj}return qd(a,b)}\nfunction Cc(a,b){if(!a){throw new cj(Jc('%s > %s',b))}}\nfunction kk(){if(fk==256){ek=gk;gk={};fk=0}++fk}\nfunction ei(){ei=Lg;ci=new fi(false);di=new fi(true)}\nfunction Xc(){Xc=Lg;Vc=new Yc(false);Wc=new Yc(true)}\nfunction Fo(a){var b;b=(new Fr(a.a)).a.W();return new Lo(b)}\nfunction zi(a,b){var c;c=xi(a);Li(a,c);c.e=b?8:0;return c}\nfunction Ln(a){In.call(this,a);Hc(0,a.b.length);this.a=0}\nfunction Ct(a,b,c,d){this.c=a;this.b=b;this.d=c;this.a=d}\nfunction Du(a,b,c,d){this.a=a;this.c=b;this.b=d;this.d=c}\nfunction zl(a,b,c){hl();il(this);this.e=a;this.d=b;this.a=c}\nfunction ur(a){this.c=null;!a&&(a=(pp(),pp(),op));this.b=a}\nfunction en(a,b){return b==null?Xm(Dp(a.a,null)):a.c.gb(b)}\nfunction hn(a,b,c){return b==null?Fp(a.a,null,c):a.c.jb(b,c)}\nfunction Oj(b,a){return (new RegExp('^('+a+')$')).test(b)}\nfunction tu(){return qu(vu(new zp,(Ht(),Ht(),Gt),(null,Ft)))}\nfunction ge(a){return ~~Math.max(Math.min(a,Ou),-2147483648)}\nfunction ni(a){return null!=String.fromCharCode(a).match(/\\d/)}\nfunction vk(a){_h.call(this,'String index out of range: '+a)}\nfunction Ob(a){$wnd.setTimeout(function(){throw a},0)}\nfunction Sh(){var a;a=Vh();if(!Jj('safari',a)){throw new Uh(a)}}\nfunction Mn(a){var b;b=new wn((new qn(a.a)).a);return new Sn(b)}\nfunction Vn(a){var b;b=new wn((new qn(a.a)).a);return new _n(b)}\nfunction rr(a,b){var c;c=1-b;a.a[c]=sr(a.a[c],c);return sr(a,b)}\nfunction dk(a,b,c){var d;d=b+c;Uj(a.length,b,d);return Yj(a,b,d)}\nfunction Bb(a,b){var c=Ab[a.charCodeAt(0)];return c==null?a:c}\nfunction Di(a,b){var c=a.a=a.a||[];return c[b]||(c[b]=a.u(b))}\nfunction _d(a,b){return a!=null&&(de(a)&&!!Yd[b]||a.cM&&!!a.cM[b])}\nfunction jb(a){return de(a)?jk(a):$d(a)?a.hC():ce(a)?Nb(a):Nb(a)}\nfunction oi(a){return null!=String.fromCharCode(a).match(/[A-Z]/i)}\nfunction sm(a,b){mm();return b<lm.length?rm(a,lm[b]):rl(a,vm(b))}\nfunction Pj(c,a,b){b=Xj(b);return c.replace(RegExp(a,'g'),b)}\nfunction Rr(){Nr();return Vd(Rd(ig,1),Ru,26,0,[Jr,Kr,Lr,Mr])}\nfunction Fi(a){if(a.C()){return null}var b=a.j;var c=Ig[b];return c}\nfunction Og(a){function b(){}\n;b.prototype=a||{};return new b}\nfunction _b(a,b,c,d,e,f,g){a+=e+g+(b^c^d);a=a<<f|a>>>-f;return a+b}\nfunction Wh(a,b,c,d){b==null&&(b='null');a.a+=b.substr(c,d-c)}\nfunction Ej(a,b,c){this.a='Unknown';this.d=a;this.b=b;this.c=c}\nfunction Mp(a){this.f=a;this.d=Ep(this.f);this.a=Sd($f,Ru,27,0,0,1)}\nfunction kl(a){while(a.d>0&&a.a[--a.d]==0);a.a[a.d++]==0&&(a.e=0)}\nfunction ob(a){var b,c;b=ui(a.cZ);c=a.n();return c!=null?b+': '+c:b}\nfunction ro(a,b){var c,d;c=b.T();d=a.X(c);return !!d&&Pq(d.d,b.U())}\nfunction Lb(a,b,c){var d;d=Jb();try{return Ib(a,b,c)}finally{Mb(d)}}\nfunction Kb(b){return function(){return Lb(b,this,arguments);var a}}\nfunction fb(a,b){return de(a)?Jj(a,b):$d(a)?a.eQ(b):ce(a)?a===b:a===b}\nfunction sd(d,a,b){if(b){var c=b.r();d.a[a]=c(b)}else{delete d.a[a]}}\nfunction Nc(d,a,b){if(b){var c=b.r();b=c(b)}else{b=undefined}d.a[a]=b}\nfunction sp(a,b){if(b._gwt_modCount!=a._gwt_modCount){throw new vp}}\nfunction Hc(a,b){if(a<0||a>b){throw new _h('Index: '+a+', Size: '+b)}}\nfunction Ec(a,b){if(a<0||a>=b){throw new _h('Index: '+a+', Size: '+b)}}\nfunction tl(a,b){if(b==0||a.e==0){return a}return b>0?Nl(a,b):Ql(a,-b)}\nfunction vl(a,b){if(b==0||a.e==0){return a}return b>0?Ql(a,b):Nl(a,-b)}\nfunction nl(a,b){var c;for(c=a.d-1;c>=0&&a.a[c]==b[c];c--);return c<0}\nfunction Uo(a,b,c){var d;d=(Ec(b,a.b.length),a.b[b]);a.b[b]=c;return d}\nfunction hm(a,b,c,d){var e;e=Sd(ke,Ru,0,b,7,1);im(e,a,b,c,d);return e}\nfunction cm(a,b,c,d){var e;e=Sd(ke,Ru,0,b+1,7,1);dm(e,a,b,c,d);return e}\nfunction Sd(a,b,c,d,e,f){var g;g=Wd(e,d);Vd(Rd(a,f),b,c,e,g);return g}\nfunction ac(a,b,c,d,e,f,g){a+=e+g+(c^(b|~d));a=a<<f|a>>>-f;return a+b}\nfunction $b(a,b,c,d,e,f,g){a+=e+g+(c^d&(b^c));a=a<<f|a>>>-f;return a+b}\nfunction Zb(a,b,c,d,e,f,g){a+=e+g+(d^b&(c^d));a=a<<f|a>>>-f;return a+b}\nfunction Sg(a){var b,c,d;b=a&Su;c=a>>22&Su;d=a<0?Tu:0;return Ug(b,c,d)}\nfunction or(a,b){var c;c=new Hr;c.c=true;c.d=b.U();return pr(a,b.T(),c)}\nfunction To(a,b){var c;c=(Ec(b,a.b.length),a.b[b]);dp(a.b,b,1);return c}\nfunction Gr(a,b){lo.call(this,a,b);this.a=Sd(dg,Ru,40,2,0,1);this.b=true}\nfunction Qt(a,b,c,d){this.g=new zp;this.c=a;this.d=b;this.b=c;this.a=d}\nfunction xb(a){vb();this.e=null;this.f=null;this.a='';this.b=a;this.a=''}\nfunction fn(a,b){return b==null?!!Dp(a.a,null):!(a.c.gb(b)===undefined)}\nfunction Lu(a,b,c){return c==null?Ju(a,b,(cd(),cd(),bd)):Ju(a,b,new Id(c))}\nfunction Hm(){Fm();return Vd(Rd(kf,1),Ru,24,0,[Em,ym,xm,zm,Cm,Am,Bm,Dm])}\nfunction rl(a,b){if(b.e==0){return gl}if(a.e==0){return gl}return mm(),nm(a,b)}\nfunction zb(){if(Date.now){return Date.now()}return (new Date).getTime()}\nfunction Yo(){Oo(this);Bc(true,'Initial capacity must not be negative')}\nfunction Mb(a){a&&gc((ec(),dc));--Eb;if(a){if(Hb!=-1){Pb(Hb);Hb=-1}}}\nfunction Nr(){Nr=Lg;Jr=new Or('All',0);Kr=new Sr;Lr=new Ur;Mr=new Xr}\nfunction Jh(){Jh=Lg;Fh=Ug(Su,Su,524287);Gh=Ug(0,0,Uu);Hh=nh(1);nh(2);Ih=nh(0)}\nfunction Qk(a,b){this.e=b;this.a=Tk(a);this.a<54?(this.f=Bh(a)):(this.c=Ll(a))}\nfunction Os(a,b,c,d,e){this.b=new zp;this.c=a;this.d=b;this.g=c;this.e=d;this.a=e}\nfunction yl(a,b){hl();il(this);this.e=a;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[b])}\nfunction Hu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,new hd(a[b]))}}\nfunction su(a){var b=new zp;if(a){for(var c in a){b.M(c,String(a[c]))}}return b}\nfunction er(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[0]){c=b}return c}\nfunction fr(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[1]){c=b}return c}\nfunction fc(a){var b,c;if(a.a){c=null;do{b=a.a;a.a=null;c=jc(b,c)}while(a.a);a.a=c}}\nfunction gc(a){var b,c;if(a.b){c=null;do{b=a.b;a.b=null;c=jc(b,c)}while(a.b);a.b=c}}\nfunction Cu(a,b){var c;c=Si(rj(a.a),rj(b.a));if(c!=0)return c;return Zj(a.b,b.b)}\nfunction So(a,b,c){for(;c<a.b.length;++c){if(Pq(b,a.b[c])){return c}}return -1}\nfunction kq(a,b){var c;c=a.a[b];if(!(c===undefined)){delete a.a[b];cn(a.b)}return c}\nfunction Lc(d,a){var b=d.a[a];var c=(Bd(),Ad)[typeof b];return c?c(b):Hd(typeof b)}\nfunction Li(a,b){var c;if(!a){return}b.j=a;var d=Fi(b);if(!d){Ig[a]=[b];return}d.cZ=b}\nfunction hq(d,a){var b=d.a;for(var c in b){if(d.fb(a,b[c])){return true}}return false}\nfunction al(a){if(lh(a,{l:0,m:0,h:0})&&5<Fk.length){return Fk[5]}return new Qk(a,5)}\nfunction Mk(a){if(a.a<54){return a.f<0?-1:a.f>0?1:0}return (!a.c&&(a.c=Kl(a.f)),a.c).e}\nfunction Xs(a){this.a=a;if(a.d>a.c)throw new It('Error: minCount>maxCount')}\nfunction Dl(a){Fc(a);if(!a.length){throw new Dj('Zero length BigInteger')}Il(this,a)}\nfunction qi(a){return String.fromCharCode(a).toLowerCase().charCodeAt(0)==a&&oi(a)}\nfunction ri(a){return String.fromCharCode(a).toUpperCase().charCodeAt(0)==a&&oi(a)}\nfunction wn(a){this.c=a;this.b=this.c.c._();this.a=this.b;tp(this,a._gwt_modCount)}\nfunction Iu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,(new Hu(a[b])).a)}}\nfunction Lh(){Mh();var a=Kh;for(var b=0;b<arguments.length;b++){a.push(arguments[b])}}\nfunction od(e,a){var b=e.a;var c=0;for(var d in b){b.hasOwnProperty(d)&&(a[c++]=d)}return a}\nfunction lj(a){var b,c;if(a==0){return 32}else{c=0;for(b=1;(b&a)==0;b<<=1){++c}return c}}\nfunction xi(a){var b;b=new vi;b.k='Class$'+(a?'S'+a:''+b.g);b.b=b.k;b.i=b.k;return b}\nfunction sr(a,b){var c,d;c=1-b;d=a.a[c];a.a[c]=d.a[b];d.a[b]=a;a.b=true;d.b=false;return d}\nfunction es(a,b){var c;if(_d(b,32)){c=b;if(Jj(a.i,c.i)&&a.a==c.a)return true}return false}\nfunction ru(a,b){var c;c=su(b);c.c.jb('mf',a);return qu(wu(c,(Ht(),Ht(),Gt),(null,Ft)))}\nfunction np(a,b){var c,d;d=a.a.b.length;for(c=0;c<d;c++){Vq(c,a.a.b.length);Uo(a.a,c,b[c])}}\nfunction Pl(a,b,c){var d,e,f;d=0;for(e=0;e<c;e++){f=b[e];a[e]=f<<1|d;d=f>>>31}d!=0&&(a[c]=d)}\nfunction lp(a){var b,c,d;d=0;for(c=a.D();c.N();){b=c.O();d=d+(b!=null?jb(b):0);d=~~d}return d}\nfunction Cr(a,b){var c;this.c=a;c=new Xo;ir(a,c,b,a.c,null,false,null,false);this.a=new Ln(c)}\nfunction ks(a){this.i=a.i;this.b=a.b;this.d=a.d;this.c=a.c;this.e=a.e;this.f=a.f;this.a=a.a}\nfunction fs(a){if(a.d==a.c)return a.d;throw new tb('Atoms.getCount(): undefined (min!=max)')}\nfunction qu(a){if('error' in a.a.a){throw new xb(pd(a.a,'error').s().a)}else{return a.a.a}}\nfunction Ot(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Ds(a.e.c)}\nfunction Pt(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Es(a.e.c)}\nfunction Ut(a,b){if(a.d.f==0){return Vt(a,b)}else if(a.d.f==Jt){return Wt(a,b)}return Vt(a,b)}\nfunction un(a){if(a.a.N()){return true}if(a.a!=a.b){return false}a.a=a.c.a._();return a.a.N()}\nfunction ol(a){var b;if(a.b==-2){if(a.e==0){b=-1}else{for(b=0;a.a[b]==0;b++);}a.b=b}return a.b}\nfunction Km(a,b){var c,d;Fc(b);for(d=b.D();d.N();){c=d.O();if(!a.F(c)){return false}}return true}\nfunction ct(b){try{Pi(b);return true}catch(a){a=Hg(a);if(_d(a,20)){return false}else throw Gg(a)}}\nfunction Ku(a,b){return !b?Ju(a,'unsaturation',(cd(),cd(),bd)):Ju(a,'unsaturation',new hd(b.a))}\nfunction Uj(a,b,c){if(b<0){throw new vk(b)}if(c<b){throw new vk(c-b)}if(c>a){throw new vk(c)}}\nfunction Fg(b,c){if(b&&typeof b=='object'){try{b.__gwt$exception=c}catch(a){}}}\nfunction Ph(a,b){typeof window==='object'&&typeof window['$gwt']==='object'&&(window['$gwt'][a]=b)}\nfunction jq(a,b,c){var d;d=a.a[b];d===undefined&&bn(a.b);lq(a,b,c===undefined?null:c);return d}\nfunction mu(a){ku();var b,c;b='61-'+a;if(fn(ju,b))return en(ju,b);c=new iu(a);hn(ju,b,c);return c}\nfunction mt(a,b){var c,d;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);if(Jj(c.i,b))return c}return null}\nfunction lt(a){var b,c,d;d=nt(a);for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);b.g=rt(b.b*fs(b)*100/d)}}\nfunction us(a,b){var c,d,e;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.U().a;e<b&&Ar(c)}}\nfunction uh(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;return Ug(b,c,d)}\nfunction br(a){var b;b=a.a.b.length;if(b>0){return Vq(b-1,a.a.b.length),a.a.S(b-1)}else{throw new wp}}\nfunction oc(a){var b=/function(?:\\s+([\\w$]+))?\\s*\\(/;var c=b.exec(a);return c&&c[1]||'anonymous'}\nfunction Si(a,b){if(a<b){return -1}if(a>b){return 1}if(a==b){return 0}return isNaN(a)?isNaN(b)?0:1:-1}\nfunction Bh(a){if(lh(a,(Jh(),Gh))){return Xu}if(!ph(a,Ih)){return -fh(uh(a))}return a.l+a.m*Vu+a.h*Wu}\nfunction Ok(a){Hk();if(Wi(a)||isNaN(a)){throw new Dj('Infinite or NaN')}Jk(this,a.toPrecision(20))}\nfunction zp(){_p();this.a=$p.cb();this.a.b=this;this.c=$p.db();this.c.b=this;this.b=0;up(this)}\nfunction Bd(){Bd=Lg;Ad={'boolean':Cd,number:Dd,string:Fd,object:Ed,'function':Ed,undefined:Gd}}\nfunction lc(){lc=Lg;var a,b;b=!(!!Error.stackTraceLimit||'stack' in new Error);a=new yc;kc=b?new qc:a}\nfunction mr(a,b,c){var d,e;d=new Gr(b,c);e=new Hr;a.c=kr(a,a.c,d,e);e.b||++a.d;a.c.b=false;return e.d}\nfunction _g(a){var b,c;c=kj(a.h);if(c==32){b=kj(a.m);return b==32?kj(a.l)+32:b+20-10}else{return c-12}}\nfunction Qd(a,b){var c;c=Wd(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\nfunction Pd(a,b){var c;c=a.slice(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\nfunction Vd(a,b,c,d,e){e.cZ=a;e.cM=b;e.tM=Qg;e.__elementTypeId$=c;e.__elementTypeCategory$=d;return e}\nfunction Xg(a,b,c,d,e){var f;f=yh(a,b);c&&$g(f);if(e){a=Zg(a,b);d?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h))}return f}\nfunction Im(a,b){var c,d,e;Fc(b);c=false;for(e=b.D();e.N();){d=e.O();c=c|mr(a.g,d,(ei(),ci))==null}return c}\nfunction gp(a){var b,c,d,e;e=1;for(c=0,d=a.length;c<d;++c){b=a[c];e=31*e+(b!=null?jb(b):0);e=~~e}return e}\nfunction Gg(a){var b;if(_d(a,38)){b=a;if(ee(b.b)!==ee((vb(),ub))){return ee(b.b)===ee(ub)?null:b.b}}return a}\nfunction Hg(a){var b;if(_d(a,9)){return a}b=a&&a.__gwt$exception;if(!b){b=new xb(a);mc(b,a);Fg(a,b)}return b}\nfunction rt(a){var b;b=isNaN(a*cv)?a*cv:Wi(a*cv)?a*cv:a*cv==0?a*cv:Bh(mh(Math.round(a*cv)));return b/cv}\nfunction lb(a){return de(a)?a:$d(a)?a.tS():ce(a)?cb(a):a.toString?a.toString():'[JavaScriptObject]'}\nfunction ih(a,b){var c,d,e;c=a.l+b.l;d=a.m+b.m+(c>>22);e=a.h+b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\nfunction Ah(a,b){var c,d,e;c=a.l-b.l;d=a.m-b.m+(c>>22);e=a.h-b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\nfunction $g(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;dh(a,b);eh(a,c);bh(a,d)}\nfunction uu(a,b){var c;c=su(b);c.c.jb('monoisotopicMass',''+a);return qu(zu(c,(Ht(),Ht(),Gt),(null,Ft)))}\nfunction ml(a,b){var c;if(a===b){return true}if(_d(b,5)){c=b;return a.e==c.e&&a.d==c.d&&nl(a,c.a)}return false}\nfunction Kl(a){hl();if(a<0){if(a!=-1){return new xl(-1,-a)}return bl}else return a<=10?dl[ge(a)]:new xl(1,a)}\nfunction Hd(a){Bd();throw new ad(\"Unexpected typeof result '\"+a+\"'; please report this bug to the GWT team\")}\nfunction js(a,b,c,d){if(c>d)throw new It('Error: minCount>maxCount');this.i=a;this.b=b;this.d=c;this.c=d}\nfunction vi(){this.g=si++;this.k=null;this.i=null;this.f=null;this.d=null;this.b=null;this.j=null;this.a=null}\nfunction _t(a,b,c){this.d=a;Rt(this);this.a=c;Tt(this,b);if(b.a!=0){ss(this.c,-b.a*nv);ws(this.c,1/sj(b.a))}}\nfunction Ws(a,b,c,d,e,f){a.d=wj(ge(uj((c-f-b-e)/a.a.e)),a.a.d);a.c=xj(ge(tj((c+f-b-d)/a.a.e)),a.a.c);a.b=a.d-1}\nfunction pl(a){var b;if(a.c!=0){return a.c}for(b=0;b<a.a.length;b++){a.c=a.c*33+(a.a[b]&-1)}a.c=a.c*a.e;return a.c}\nfunction mi(a){if(a>=48&&a<58){return a-48}if(a>=97&&a<97){return a-97+10}if(a>=65&&a<65){return a-65+10}return -1}\nfunction Zk(a){var b=Gk;!b&&(b=Gk=/^[+-]?\\d*$/i);if(b.test(a)){return parseInt(a,10)}else{return Number.NaN}}\nfunction jk(a){hk();var b=':'+a;var c=gk[b];if(c!=null){return c}c=ek[b];c==null&&(c=ik(a));kk();return gk[b]=c}\nfunction Jm(a,b){var c,d;for(d=a.D();d.N();){c=d.O();if(ee(b)===ee(c)||b!=null&&fb(b,c)){return true}}return false}\nfunction oj(a){var b,c;if(a>-129&&a<128){b=a+128;c=(qj(),pj)[b];!c&&(c=pj[b]=new fj(a));return c}return new fj(a)}\nfunction ul(a){var b,c,d,e;return a.e==0?a:(b=a.d,c=b+1,d=Sd(ke,Ru,0,c,7,1),Pl(d,a.a,b),e=new zl(a.e,c,d),kl(e),e)}\nfunction om(a,b,c,d,e){if(b==0||d==0){return}b==1?(e[d]=qm(e,c,d,a[0])):d==1?(e[b]=qm(e,a,b,c[0])):pm(a,c,e,b,d)}\nfunction ip(a,b,c,d,e,f,g,h){var i;i=c;while(f<g){i>=d||b<c&&h.Y(a[b],a[i])<=0?(e[f++]=a[b++]):(e[f++]=a[i++])}}\nfunction hp(a,b,c,d){var e,f,g;for(e=b+1;e<c;++e){for(f=e;f>b&&d.Y(a[f-1],a[f])>0;--f){g=a[f];a[f]=a[f-1];a[f-1]=g}}}\nfunction Yb(a,b){var c,d;for(c=0,d=0;d<16;d++){b[d]=a[c++]&255|(a[c++]&255)<<8|(a[c++]&255)<<16|(a[c++]&255)<<24}}\nfunction xs(a,b){var c,d,e,f;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();f=d.U();mr(a,e,new Ri(f.a*b))}}\nfunction Qm(a,b){var c,d,e;for(d=a.K().D();d.N();){c=d.O();e=c.T();if(ee(b)===ee(e)||b!=null&&fb(b,e)){return c}}return null}\nfunction As(a){var b,c;b=new Ok(a);c=Nk(Kk(b,(Fm(),Fm(),Cm)));if(c.indexOf('.')!=-1){return Pj(c,'\\\\.?0+$','')}return c}\nfunction Wo(a,b){var c,d;d=a.b.length;b.length<d&&(b=Qd(b,d));for(c=0;c<d;++c){b[c]=a.b[c]}b.length>d&&(b[d]=null);return b}\nfunction st(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,hs(b))}return d.a}\nfunction Js(a){var b,c,d;if(a.b.b==0){return}d=0;for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+=b.b*b.d/100}if(d==0)return;a.c=d}\nfunction Ml(a){var b,c,d;if(a.e==0){return 0}b=a.d<<5;c=a.a[a.d-1];if(a.e<0){d=ol(a);if(d==a.d-1){--c;c=~~c}}b-=kj(c);return b}\nfunction Gl(a){var b,c,d;if(a<fl.length){return fl[a]}c=a>>5;b=a&31;d=Sd(ke,Ru,0,c+1,7,1);d[c]=1<<b;return new zl(1,c+1,d)}\nfunction Lp(a){if(a.c<a.a.length){return true}if(a.b<a.d.length-1){a.a=Bp(a.f,a.d[++a.b]);a.c=0;return true}return false}\nfunction Ls(a){if(a.d==0)throw new tb('Exact mass of '+a.g+' is unknown. Run calculateExactMass() first.');return a.d}\nfunction Kj(b,a){if(a==null){return false}if(b==a){return true}return b.length==a.length&&b.toLowerCase()==a.toLowerCase()}\nfunction Ng(){!Array.isArray&&(Array.isArray=function(a){return Object.prototype.toString.call(a)==='[object Array]'})}\nfunction Wg(a,b){if(a.h==Uu&&a.m==0&&a.l==0){b&&(Rg=Ug(0,0,0));return Tg((Jh(),Hh))}b&&(Rg=Ug(a.l,a.m,a.h));return Ug(0,0,0)}\nfunction Nl(a,b){var c,d,e,f;c=b>>5;b&=31;e=a.d+c+(b==0?0:1);d=Sd(ke,Ru,0,e,7,1);Ol(d,a.a,c,b);f=new zl(a.e,e,d);kl(f);return f}\nfunction gr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c>=0){e=e.a[1]}else{d=e;e=e.a[0]}}return d}\nfunction hr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c<=0){e=e.a[0]}else{d=e;e=e.a[1]}}return d}\nfunction nc(a){var b,c,d;b='mc';d=xj(a.length,5);for(c=0;c<d;c++){if(Jj(a[c].d,b)){return a.length>=c+1&&a.splice(0,c+1),a}}return a}\nfunction mp(a){var b,c,d;d=1;for(c=a.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=31*d+(b!=null?jb(b):0);d=~~d}return d}\nfunction Mt(a){var b,c,d;b=mv;for(d=new In(a.d.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));c.f>b&&(b=c.f)}Xt(a.e,b,a.b,a.a)}\nfunction vs(a){var b,c,d,e,f,g;b=mv;f=0;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();g=d.U().a;if(g>b){b=g;f=e.a}}return f}\nfunction nb(a){var b,c,d,e,f;for(e=a;e;e=e.e){for(b=(e.g==null&&(e.g=(lc(),f=kc.p(e),nc(f))),e.g),c=0,d=b.length;c<d;++c);}}\nfunction Dp(a,b){var c,d,e,f;for(d=Cp(a,b==null?'0':''+yp(b)),e=0,f=d.length;e<f;++e){c=d[e];if(xp(b,c.T())){return c}}return null}\nfunction nh(a){var b,c;if(a>-129&&a<128){b=a+128;hh==null&&(hh=Sd(Fe,Ru,141,256,0,1));c=hh[b];!c&&(c=hh[b]=Sg(a));return c}return Sg(a)}\nfunction Jb(){var a;if(Eb!=0){a=zb();if(a-Gb>2000){Gb=a;Hb=$wnd.setTimeout(Qb,10)}}if(Eb++==0){fc((ec(),dc));return true}return false}\nfunction Tj(a){if(a.length==0||a[0]>' '&&a[a.length-1]>' '){return a}return a.replace(/^[\\u0000-\\u0020]*|[\\u0000-\\u0020]*$/g,'')}\nfunction Tk(a){var b;qh(a,{l:0,m:0,h:0})&&(a={l:~a.l&Su,m:~a.m&Su,h:~a.h&Tu});return 64-(b=Ch(yh(a,32)),b!=0?kj(b):kj(Ch(a))+32)}\nfunction li(a,b,c){var d,e;d=Ij(a,b++);if(d>=55296&&d<=56319&&b<c&&pi(e=a.charCodeAt(b))){return Zu+((d&1023)<<10)+(e&1023)}return d}\nfunction Yj(a,b,c){var d='';for(var e=b;e<c;){var f=Math.min(e+10000,c);d+=String.fromCharCode.apply(null,a.slice(e,f));e=f}return d}\nfunction Ki(a,b){var c=0;while(!b[c]||b[c]==''){c++}var d=b[c++];for(;c<b.length;c++){if(!b[c]||b[c]==''){continue}d+=a+b[c]}return d}\nfunction Kt(a,b,c){var d,e,f;f=lu(Pt(a),b,c);e=new Fs;for(d=0;d<f.length;d++){mr(e,new Ri(f[d][0]),new Ri(f[d][1]))}a.e.c=e;a.e.c.a=cv}\nfunction jl(a,b){if(a.e>b.e){return 1}if(a.e<b.e){return -1}if(a.d>b.d){return a.e}if(a.d<b.d){return -b.e}return a.e*em(a.a,b.a,a.d)}\nfunction qd(f,a){var b=f.a;var c;a=String(a);b.hasOwnProperty(a)&&(c=b[a]);var d=(Bd(),Ad)[typeof c];var e=d?d(c):Hd(typeof c);return e}\nfunction ql(a){var b;b=a.d>1?wh(xh(nh(a.a[1]),32),jh(nh(a.a[0]),{l:Su,m:1023,h:0})):jh(nh(a.a[0]),{l:Su,m:1023,h:0});return th(nh(a.e),b)}\nfunction em(a,b,c){var d;for(d=c-1;d>=0&&a[d]==b[d];d--);return d<0?0:qh(jh(nh(a[d]),{l:Su,m:1023,h:0}),jh(nh(b[d]),{l:Su,m:1023,h:0}))?-1:1}\nfunction xl(a,b){this.e=a;if(b<fv){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[~~b])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[~~(b%fv),~~(b/fv)])}}\nfunction Bl(a){hl();il(this);if(a.length==0){this.e=0;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[0])}else{this.e=1;this.d=a.length;this.a=a;kl(this)}}\nfunction $s(a){var b,c,d,e;c='';b=new Xb;d=Rb(b,bk(a));for(e=0;e<5;e++){e==0?(c+=Zd(sj(d[0]%26)+65&_u)):(c+=Zd(sj(d[e]%26)+97&_u))}return c}\nfunction ss(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a+b),g);Ar(c)}rs(a,d)}\nfunction ws(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a*b),g);Ar(c)}rs(a,d)}\nfunction rs(a,b){var c,d,e,f,g;e=(new Fr(b)).a.W();while(Fn(e.a)){c=e.b=Gn(e.a);f=c.T();g=c.U();d=to(a,f);!!d&&(g=new Ri(d.a+g.a));mr(a,f,g)}}\nfunction bc(a,b){var c,d;for(c=0,d=0;c<4;c++){b[d++]=fe(a[c]&255);b[d++]=fe(a[c]>>>8&255);b[d++]=fe(a[c]>>>16&255);b[d++]=fe(a[c]>>>24&255)}}\nfunction ak(a){var b,c;if(a>=Zu){b=55296+(a-Zu>>10&1023)&_u;c=56320+(a-Zu&1023)&_u;return ck(b)+ck(c)}else{return String.fromCharCode(a&_u)}}\nfunction ht(a,b,c,d){this.a=b;this.b=c;this.d=new Yo;dt(this,a,d);if(this.d.b.length==0)throw new It('Cannot parse: empty formula: ->'+a+'<-')}\nfunction ir(a,b,c,d,e,f,g,h){var i,j;if(!d){return}i=d.a[0];!!i&&ir(a,b,c,i,e,f,g,h);jr(a,c,d.c,e,f,g,h)&&b.Q(d);j=d.a[1];!!j&&ir(a,b,c,j,e,f,g,h)}\nfunction Xj(a){var b;b=0;while(0<=(b=a.indexOf('\\\\',b))){a.charCodeAt(b+1)==36?(a=a.substr(0,b)+'$'+Rj(a,++b)):(a=a.substr(0,b)+Rj(a,++b))}return a}\nfunction Pm(a,b){var c,d,e;c=b.T();e=b.U();d=a.L(c);if(!(ee(e)===ee(d)||e!=null&&fb(e,d))){return false}if(d==null&&!a.J(c)){return false}return true}\nfunction jr(a,b,c,d,e,f,g){var h,i;if(b.lb()&&(h=a.b.Y(c,d),h<0||!e&&h==0)){return false}if(b.mb()&&(i=a.b.Y(c,f),i>0||!g&&i==0)){return false}return true}\nfunction ms(a,b,c){if(b>c)throw new It('Error: minCount>maxCount');this.d=b;this.c=c;this.e=ot(a.a);this.f=pt(a.a);this.a=0;this.i=a.b;this.b=nt(a.a)}\nfunction Zg(a,b){var c,d,e;if(b<=22){c=a.l&(1<<b)-1;d=e=0}else if(b<=44){c=a.l;d=a.m&(1<<b-22)-1;e=0}else{c=a.l;d=a.m;e=a.h&(1<<b-44)-1}return Ug(c,d,e)}\nfunction yu(a){var b,c,d;d=Ll({l:1,m:0,h:0});for(c=new In(a.a);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=rl(d,Ll(nh(b.a.c-b.a.d+1)))}return d}\nfunction zs(a){var b,c,d,e,f;e=~~(a.a/2);if(a.d<e)return;f=new _r(new Hs);Im(f,new Fr(a));c=0;for(d=Fo(new Go(f.g));Fn(d.a.a);){b=Ko(d);c++>e&&nr(a,b.T())}}\nfunction nt(a){var b,c,d;if(a.e)throw new It('Cannot calculate mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.b*fs(b)}return rt(d)}\nfunction pt(a){var b,c,d;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.f*fs(b)}return d}\nfunction qt(a){var b,c,d;if(a.e)throw new It('Cannot get the number of atoms: this is a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=fs(b)}return d}\nfunction Lm(a){var b,c,d,e;e=new uk('[');b=false;for(d=a.D();d.N();){c=d.O();b?(e.a+=', ',e):(b=true);e.a+=c===a?'(this Collection)':''+c}e.a+=']';return e.a}\nfunction Wk(a,b,c){var d,e,f,g,h;e=(h=a/b,h>0?uj(h):tj(h));f=a%b;g=Si(a*b,0);if(f!=0){d=Si((f<=0?0-f:f)*2,b<=0?0-b:b);e+=$k(ge(e)&1,g*(5+d),c)}return new Pk(e)}\nfunction Ll(a){hl();if(qh(a,{l:0,m:0,h:0})){if(vh(a,{l:Su,m:Su,h:Tu})){return new Al(-1,uh(a))}return bl}else return rh(a,{l:10,m:0,h:0})?dl[Ch(a)]:new Al(1,a)}\nfunction au(a,b,c){var d,e;d=b.a!=0?fs(b):yj(en(a.a.a,b.i).b.b-1,fs(b));e=c.a!=0?fs(c):yj(en(a.a.a,c.i).b.b-1,fs(c));if(d==e)return Si(b.b,c.b);return -Si(d,e)}\nfunction gh(a,b){var c,d,e;e=a.h-b.h;if(e<0){return false}c=a.l-b.l;d=a.m-b.m+(c>>22);e+=d>>22;if(e<0){return false}dh(a,c&Su);eh(a,d&Su);bh(a,e&Tu);return true}\nfunction Rb(a,b){var c,d;Vb(a,b,0,b.length);return c=cc(xh(a.b,3)),d=Sd(he,Ru,0,16,7,1),a.c>8?Vb(a,Sb,0,a.c-8):Vb(a,Sb,0,64+(a.c-8)),Vb(a,c,0,8),bc(a.d,d),Ub(a),d}\nfunction $t(a,b,c){var d,e,f;this.d=a;Rt(this);this.a=c;d=b.b.b;Yt(this,a.b/(d*4));for(f=Vn(new Wn(b.b));un(f.a);){e=$n(f);mr(this.c,new Ri(e.b),new Ri(e.d/100))}}\nfunction Ud(a,b,c,d,e,f,g){var h,i,j,k,l;k=e[f];j=f==g-1;h=j?d:0;l=Wd(h,k);Vd(Rd(a,g-f),b[f],c[f],h,l);if(!j){++f;for(i=0;i<k;++i){l[i]=Ud(a,b,c,d,e,f,g)}}return l}\nfunction Nh(b,c,d,e){Mh();var f=Kh;$moduleName=c;$moduleBase=d;Eg=e;function g(){for(var a=0;a<f.length;a++){f[a]()}}\nif(b){try{Nu(g)()}catch(a){b(c,a)}}else{Nu(g)()}}\nfunction fm(a,b,c){var d,e;d=jh(nh(c),{l:Su,m:1023,h:0});for(e=0;vh(d,{l:0,m:0,h:0})&&e<b;e++){d=ih(d,jh(nh(a[e]),{l:Su,m:1023,h:0}));a[e]=Ch(d);d=yh(d,32)}return Ch(d)}\nfunction um(a,b){mm();var c,d;d=(hl(),cl);c=a;for(;b>1;b>>=1){(b&1)!=0&&(d=rl(d,c));c.d==1?(c=rl(c,c)):(c=new Bl(wm(c.a,c.d,Sd(ke,Ru,0,c.d<<1,7,1))))}d=rl(d,c);return d}\nfunction Fp(a,b,c){var d,e,f,g;d=Ap(a,b==null?'0':''+yp(b));for(f=0,g=d.length;f<g;++f){e=d[f];if(xp(b,e.T())){return e.V(c)}}d[d.length]=new lo(b,c);bn(a.b);return null}\nfunction jp(a,b,c,d){var e,f,g,h;!d&&(d=(pp(),pp(),op));e=(f=(g=c-b,Cc(g>=0,Vd(Rd($e,1),Ru,1,3,[oj(b),oj(c)])),g),h=Qd(a,f),wk(a,b,h,0,xj(a.length-b,f)),h);kp(e,a,b,c,-b,d)}\nfunction gu(a,b){eu();var c,d,e,f;f=2;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);e=fu(c.i);if(!e){if(!b){return null}else{f+=b.a*fs(c)}}else{f+=e.a*fs(c)}}return new Ri(f/2)}\nfunction Wd(a,b){var c=new Array(b);var d;switch(a){case 6:d={l:0,m:0,h:0};break;case 7:d=0;break;case 8:d=false;break;default:return c;}for(var e=0;e<b;++e){c[e]=d}return c}\nfunction hs(a){var b;a.a!=0?(b='<sup>'+a.a+'<\\/sup>'+a.i):(b=a.i);if(a.c==1&&a.d==1)return b;if(a.c==a.d)return b+'<sub>'+a.c+'<\\/sub>';return b+'<sub>'+a.d+'-'+a.c+'<\\/sub>'}\nfunction Tb(){Tb=Lg;Sb=Vd(Rd(he,1),Ru,0,7,[-128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])}\nfunction iu(a){var b,c,d;this.b=61;this.a=a;c=a/(2*Aj(2*vj(2)));this.c=Sd(je,av,0,61,7,1);for(b=0;b<61;b++){d=b-30;this.c[b]=1/(c*Aj(6.283185307179586))*Math.exp(-d*d/(2*c*c))}}\nfunction xu(a,b,c){var d,e;for(d=0;d<a.a.b.length;d++){for(e=d+1;e<a.a.b.length;e++){b[d]=b[d]+Vs((Vq(e,a.a.b.length),Ro(a.a,e)));c[d]=c[d]+Us((Vq(e,a.a.b.length),Ro(a.a,e)))}}}\nfunction Ub(a){a.a=Sd(he,Ru,0,64,7,1);a.d=Sd(ke,Ru,0,4,7,1);a.e=Sd(ke,Ru,0,16,7,1);a.d[0]=1732584193;a.d[1]=-271733879;a.d[2]=-1732584194;a.d[3]=271733878;a.b={l:0,m:0,h:0};a.c=64}\nfunction Ol(a,b,c,d){var e,f,g;if(d==0){wk(b,0,a,c,a.length-c)}else{g=32-d;a[a.length-1]=0;for(f=a.length-1;f>c;f--){a[f]|=b[f-c-1]>>>g;a[f-1]=b[f-c-1]<<d}}for(e=0;e<c;e++){a[e]=0}}\nfunction Sk(a){var b,c;if(a>-140737488355328&&a<140737488355328){if(a==0){return 0}b=a<0;b&&(a=-a);c=ge(uj(vj(a)/0.6931471805599453));(!b||a!=yj(2,c))&&++c;return c}return Tk(mh(a))}\nfunction tt(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,is(b,a.c))}a.a!=0&&(a.a>0?lk(d,'(+'+a.a+')'):lk(d,'('+a.a+')'));return d.a}\nfunction Xd(a,b,c,d,e,f){if(a===c){a=a.slice(b,b+e);b=0}for(var g=b,h=b+e;g<h;){var i=Math.min(g+10000,h);e=i-g;Array.prototype.splice.apply(c,[d,f?e:0].concat(a.slice(g,i)));g=i;d+=e}}\nfunction oh(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<=b.l)}\nfunction ph(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>=b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<b.l)}\nfunction qr(a,b,c,d){var e,f;f=b;e=f.c==null||a.b.Y(c.c,f.c)>0?1:0;while(f.a[e]!=c){f=f.a[e];e=a.b.Y(c.c,f.c)>0?1:0}f.a[e]=d;d.b=c.b;d.a[0]=c.a[0];d.a[1]=c.a[1];c.a[0]=null;c.a[1]=null}\nfunction At(b){var c,d;d=new Mu;Lu(d,'name',b.c);Lu(d,'symbol',b.b);Lu(d,'mf',tt(b.a));try{Ju(d,'mass',new hd(nt(b.a)))}catch(a){a=Hg(a);if(_d(a,4)){c=a;nb(c)}else throw Gg(a)}return d}\nfunction bq(){var a;if(Object.create&&Object.getOwnPropertyNames&&aq()){return (a=Object.create(null),a['__proto__']=42,Object.getOwnPropertyNames(a).length==0)?new cq:new Xp}return new eq}\nfunction kt(a,b){var c;if(b.c<b.d)throw new It('Syntax error: maxCount<minCount');c=mt(a,b.i);if(c)if(c.a==b.a){c.d+=b.d;c.c+=b.c;return}b.c==0&&b.d==0&&(a.e=true);mr(a.g,b,(ei(),ci))==null}\nfunction Oi(a){var b;if(!(b=Ni,!b&&(b=Ni=/^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$/),b.test(a))){throw new Dj('For input string: \"'+a+'\"')}return parseFloat(a)}\nfunction Al(a,b){il(this);this.e=a;if(lh(jh(b,{l:0,m:4193280,h:Tu}),{l:0,m:0,h:0})){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b)])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b),Ch(yh(b,32))])}}\nfunction Rl(a,b,c,d,e){var f,g,h;f=true;for(g=0;g<d;g++){f=f&c[g]==0}if(e==0){wk(c,d,a,0,b)}else{h=32-e;f=f&c[g]<<h==0;for(g=0;g<b-1;g++){a[g]=c[g+d]>>>e|c[g+d+1]<<h}a[g]=c[g+d]>>>e;++g}return f}\nfunction Cs(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f='';d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;h>-1.0E100&&(f+=g+', '+h+'\\r\\n')}return f}\nfunction Ds(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f=new mk;d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;lk(f,As(g)+', '+As(h*100)+'\\r\\n')}return f}\nfunction xh(a,b){var c,d,e;b&=63;if(b<22){c=a.l<<b;d=a.m<<b|a.l>>22-b;e=a.h<<b|a.m>>22-b}else if(b<44){c=0;d=a.l<<b-22;e=a.m<<b-22|a.l>>44-b}else{c=0;d=0;e=a.l<<b-44}return {l:c&Su,m:d&Su,h:e&Tu}}\nfunction zh(a,b){var c,d,e,f;b&=63;c=a.h&Tu;if(b<22){f=c>>>b;e=a.m>>b|c<<22-b;d=a.l>>b|a.m<<22-b}else if(b<44){f=0;e=c>>>b-22;d=a.m>>b-22|a.h<<44-b}else{f=0;e=0;d=c>>>b-44}return {l:d&Su,m:e&Su,h:f&Tu}}\nfunction Es(a){var b,c,d,e,f;c=a.d;c>~~(a.a/2)&&(c=~~(a.a/2));d=Td(je,[Ru,av],[28,0],7,[c,2],2);b=0;for(f=Fo(new Go(a));Fn(f.a.a);){e=Ko(f);d[b][0]=e.a;d[b][1]=to(a,e).a;++b;if(b==c)break}return d}\nfunction hu(a,b){eu();var c,d,e,f;f=2;for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=fu(c.a.i);if(!e){if(!b){return null}else{f+=b.a*c.b}}else{f+=e.a*c.b}}return new Ri(f/2)}\nfunction Fm(){Fm=Lg;Em=new Gm('UP',0);ym=new Gm('DOWN',1);xm=new Gm('CEILING',2);zm=new Gm('FLOOR',3);Cm=new Gm('HALF_UP',4);Am=new Gm('HALF_DOWN',5);Bm=new Gm('HALF_EVEN',6);Dm=new Gm('UNNECESSARY',7)}\nfunction ys(a,b){var c,d,e,f,g;c=mv;d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);e.T();g=e.U().a;g>c&&(c=g)}d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);f=e.T();g=e.U();mr(a,f,new Ri(g.a/c*b))}}\nfunction qm(a,b,c,d){mm();var e,f;e={l:0,m:0,h:0};for(f=0;f<c;f++){e=ih(th(jh(nh(b[f]),{l:Su,m:1023,h:0}),jh(nh(d),{l:Su,m:1023,h:0})),jh(nh(Ch(e)),{l:Su,m:1023,h:0}));a[f]=Ch(e);e=zh(e,32)}return Ch(e)}\nfunction St(a,b){var c;if(b<=0)throw new tb('Error: power='+b);if(b==1)return a;if(b==2){a.c=Ut(a,a);return a}--b;c=new Zt(a.d,a.c);while(b!=0){(b&1)!=0&&(a.c=Ut(a,c));b>>=1;b!=0&&(c.c=Ut(c,c))}return a}\nfunction wb(a){var b;if(a.c==null){b=ee(a.b)===ee(ub)?null:a.b;a.d=b==null?'null':ae(b)?b==null?null:b.name:de(b)?'String':ui(hb(b));a.a=a.a+': '+(ae(b)?b==null?null:b.message:b+'');a.c='('+a.d+') '+a.a}}\nfunction aq(){var a='__proto__';var b=Object.create(null);if(b[a]!==undefined){return false}var c=Object.getOwnPropertyNames(b);if(c.length!=0){return false}b[a]=42;if(b[a]!==42){return false}return true}\nfunction kp(a,b,c,d,e,f){var g,h,i,j;g=d-c;if(g<7){hp(b,c,d,f);return}i=c+e;h=d+e;j=i+(h-i>>1);kp(b,a,i,j,-e,f);kp(b,a,j,h,-e,f);if(f.Y(a[j-1],a[j])<=0){while(c<d){b[c++]=a[i++]}return}ip(a,i,j,h,b,c,d,f)}\nfunction jc(b,c){var d,e,f,g;for(e=0,f=b.length;e<f;e++){g=b[e];try{g[1]?g[0].ob()&&(c=ic(c,g)):g[0].ob()}catch(a){a=Hg(a);if(_d(a,9)){d=a;Ob(_d(d,38)?ee(d.b)===ee(ub)?null:d.b:d)}else throw Gg(a)}}return c}\nfunction Gp(a,b){var c,d,e,f;e=b==null?'0':''+yp(b);c=Cp(a,e);for(f=0;f<c.length;f++){d=c[f];if(xp(b,d.T())){c.length==1?(delete a.a[e],undefined):(c.splice(f,1),undefined);cn(a.b);return d.U()}}return null}\nfunction ik(a){var b,c,d,e;b=0;d=a.length;e=d-4;c=0;while(c<e){b=a.charCodeAt(c+3)+31*(a.charCodeAt(c+2)+31*(a.charCodeAt(c+1)+31*(a.charCodeAt(c)+31*b)));b=~~b;c+=4}while(c<d){b=b*31+Ij(a,c++)}b=~~b;return b}\nfunction sl(a,b){var c;if(b<0){throw new Zh('Negative exponent')}if(b==0){return cl}else if(b==1||ml(a,cl)||ml(a,gl)){return a}if(!wl(a,0)){c=1;while(!wl(a,c)){++c}return rl(Gl(c*b),sl(vl(a,c),b))}return um(a,b)}\nfunction Ks(a){var b,c,d,e,f;if(a.b.b==0){a.d=a.c;a.f=Ch(mh(zj(a.c)));return}b=1.7976931348623157E308;f=mv;c=true;for(e=Vn(new Wn(a.b));un(e.a);){d=$n(e);if(d.d>f||c){c=false;b=d.b;f=d.d}}a.d=b;a.f=Ch(mh(zj(b)))}\nfunction Kg(a,b,c){var d=Ig;var e=Jg;var f=Mg;var g=d[a];var h=f(g);if(g&&!h){_=g}else{_=d[a]=!b?{}:e(b);_.cM=c;_.constructor=_;!b&&(_.tM=Qg)}for(var i=3;i<arguments.length;++i){arguments[i].prototype=_}h&&(_.cZ=h)}\nfunction is(a,b){var c,d;c=a.i;!!b&&fn(b,a.i)&&Oj(en(b,a.i).e,'^[A-Z][a-z]?\\\\{.*\\\\}$')&&(c=en(b,a.i).e);d='';a.a!=0?(d+='['+a.a+c+']'):(d+=c);if(a.c==1&&a.d==1)return d;if(a.c==a.d)return d+a.c;return d+a.d+'-'+a.c}\nfunction Ed(a){if(!a){return cd(),bd}var b=a.valueOf?a.valueOf():a;if(b!==a){var c=Ad[typeof b];return c?c(b):Hd(typeof b)}else if(a instanceof Array||a instanceof $wnd.Array){return new Pc(a)}else{return new ud(a)}}\nfunction Vb(a,b,c,d){while(true){if(d>=a.c){wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),a.c);Wb(a,a.a);a.b=ih(a.b,nh(a.c));c+=a.c;d-=a.c;a.c=64}else{wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),d);a.b=ih(a.b,nh(d));a.c-=d;break}}}\nfunction kj(a){var b,c,d;if(a<0){return 0}else if(a==0){return 32}else{d=-(a>>16);b=d>>16&16;c=16-b;a=a>>b;d=a-256;b=d>>16&8;c+=b;a<<=b;d=a-4096;b=d>>16&4;c+=b;a<<=b;d=a-16384;b=d>>16&2;c+=b;a<<=b;d=a>>14;b=d&~(d>>1);return c+2-b}}\nfunction Cb(b){var c=(!Ab&&(Ab=Db()),Ab);var d=b.replace(/[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]/g,function(a){return Bb(a,c)});return '\"'+d+'\"'}\nfunction wl(a,b){var c,d,e;if(b==0){return (a.a[0]&1)!=0}if(b<0){throw new Zh('Negative bit address')}e=b>>5;if(e>=a.d){return a.e<0}c=a.a[e];b=1<<(b&31);if(a.e<0){d=ol(a);if(e<d){return false}else d==e?(c=-c):(c=~c)}return (c&b)!=0}\nfunction Bu(b,c){var d,e,f,g;f=new Sq;try{for(e=Fo(new Go(b.g));Fn(e.a.a);){d=Ko(e);d.c=xj(d.c,ge(c/d.e));if(d.d>d.c)return null;Rq(f,new Xs(d))}g=Vo(f.a);jp(g,0,g.length,null);np(f,g)}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}return f}\nfunction im(a,b,c,d,e){var f,g;f={l:0,m:0,h:0};for(g=0;g<e;g++){f=ih(f,Ah(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}\nfunction ot(a){var b,c,d,e;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.e*fs(b)}return e=isNaN(d*dv)?d*dv:Wi(d*dv)?d*dv:d*dv==0?d*dv:Bh(mh(Math.round(d*dv))),e/dv}\nfunction cc(a){var b;b=Sd(he,Ru,0,8,7,1);b[0]=fe(Ch(a));a=zh(a,8);b[1]=fe(Ch(a));a=zh(a,8);b[2]=fe(Ch(a));a=zh(a,8);b[3]=fe(Ch(a));a=zh(a,8);b[4]=fe(Ch(a));a=zh(a,8);b[5]=fe(Ch(a));a=zh(a,8);b[6]=fe(Ch(a));a=zh(a,8);b[7]=fe(Ch(a));return b}\nfunction yh(a,b){var c,d,e,f,g;b&=63;c=a.h;d=(c&Uu)!=0;d&&(c|=-1048576);if(b<22){g=c>>b;f=a.m>>b|c<<22-b;e=a.l>>b|a.m<<22-b}else if(b<44){g=d?Tu:0;f=c>>b-22;e=a.m>>b-22|c<<44-b}else{g=d?Tu:0;f=d?Su:0;e=c>>b-44}return {l:e&Su,m:f&Su,h:g&Tu}}\nfunction Hi(a){if(a.B()){var b=a.c;b.C()?(a.k='['+b.j):!b.B()?(a.k='[L'+b.w()+';'):(a.k='['+b.w());a.b=b.v()+'[]';a.i=b.A()+'[]';return}var c=a.f;var d=a.d;d=d.split('/');a.k=Ki('.',[c,Ki('$',d)]);a.b=Ki('.',[c,Ki('.',d)]);a.i=d[d.length-1]}\nfunction bt(a){var b,c,d;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=ge(d+pt(b)*b.f)}return d}\nfunction ft(a){var b,c,d;c=new In(a.d);d=new nk('');c.a<c.c.G()&&(d=new nk((Dc(c.a<c.c.G()),lb(c.c.R(c.b=c.a++)))));while(c.a<c.c.G()){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));b.f==1?lk(d,'.'+tt(b)):b.f==0?lk(d,'.n'+tt(b)):lk(d,'.'+b.f+tt(b))}return d.a}\nfunction ts(a,b){var c,d,e,f,g,h;e=new Fs;d=(new Fr(a)).a.W();while(Fn(d.a)){f=d.b=Gn(d.a);g=f.T().a;h=f.U().a;Ar(d);g=(isNaN(g/b)?g/b:Wi(g/b)?g/b:g/b==0?g/b:Bh(mh(Math.round(g/b))))*b;c=to(e,new Ri(g));!!c&&(h+=c.a);mr(e,new Ri(g),new Ri(h))}rs(a,e)}\nfunction mh(a){var b,c,d,e,f;if(isNaN(a)){return Jh(),Ih}if(a<Xu){return Jh(),Gh}if(a>=9223372036854775807){return Jh(),Fh}e=false;if(a<0){e=true;a=-a}d=0;if(a>=Wu){d=ge(a/Wu);a-=d*Wu}c=0;if(a>=Vu){c=ge(a/Vu);a-=c*Vu}b=ge(a);f=Ug(b,c,d);e&&$g(f);return f}\nfunction bk(a){var b,c,d,e,f,g,h;g=a.length;b=0;for(f=0;f<g;){d=li(a,f,a.length);f+=d>=Zu?2:1;d<128?++b:d<2048?(b+=2):d<Zu?(b+=3):d<2097152?(b+=4):d<67108864&&(b+=5)}c=Sd(he,Ru,0,b,7,1);h=0;for(e=0;e<g;){d=li(a,e,a.length);e+=d>=Zu?2:1;h+=_j(c,h,d)}return c}\nfunction Qs(a,b,c){var d,e,f,g,h,i,j;this.e=c;this.g=b;this.a=a.a;this.b=new zp;g=Pj(c,'[^0-9,\\\\.]','');i=Qj(g,',',0);d=0;for(f=Vn(new Wn(a.b));un(f.a);){e=$n(f);j=0;i.length>d&&(j=Oi(i[d]));h=new Ct(e.c,e.b,j,e.a);gn(this.b,oj(e.c),h);++d}Js(this);Ks(this)}\nfunction Bt(b,c,d,e,f){var g;this.b=b;this.c=c;try{this.a=new ut(d,e,f)}catch(a){a=Hg(a);if(_d(a,6)){g=a;\"Group creation error: '\"+b+\"'='\"+d+\"': \"+ob(g);this.a=new ut('',e,f)}else throw Gg(a)}if(this.a.e)throw new It('Range formulas not allowed for groups')}\nfunction Vl(a){var b,c,d;if(ph(a,{l:0,m:0,h:0})){c=kh(a,{l:1755648,m:238,h:0});d=sh(a,{l:1755648,m:238,h:0})}else{b=zh(a,1);c=kh(b,{l:877824,m:119,h:0});d=sh(b,{l:877824,m:119,h:0});d=ih(xh(d,1),jh(a,{l:1,m:0,h:0}))}return wh(xh(d,32),jh(c,{l:Su,m:1023,h:0}))}\nfunction ds(a,b){if(es(a,b))return 0;if(Jj(a.i,'C')){if(Jj(b.i,'C'))return a.a-b.a;return -1}if(Jj(a.i,'H')){if(Jj(b.i,'C'))return 1;if(Jj(b.i,'H'))return a.a-b.a;return -1}if(Jj(b.i,'H')||Jj(b.i,'C')){return 1}if(Jj(a.i,b.i))return a.a-b.a;return Zj(a.i,b.i)}\nfunction nm(a,b){mm();var c,d,e,f,g,h,i,j,k;if(b.d>a.d){h=a;a=b;b=h}if(b.d<63){return tm(a,b)}g=(a.d&-2)<<4;j=vl(a,g);k=vl(b,g);d=gm(a,tl(j,g));e=gm(b,tl(k,g));i=nm(j,k);c=nm(d,e);f=nm(gm(j,d),gm(e,k));f=bm(bm(f,i),c);f=tl(f,g);i=tl(i,g<<1);return bm(bm(i,f),c)}\nfunction ah(a){var b,c,d;c=a.l;if((c&c-1)!=0){return -1}d=a.m;if((d&d-1)!=0){return -1}b=a.h;if((b&b-1)!=0){return -1}if(b==0&&d==0&&c==0){return -1}if(b==0&&d==0&&c!=0){return lj(c)}if(b==0&&d!=0&&c==0){return lj(d)+22}if(b!=0&&d==0&&c==0){return lj(b)+44}return -1}\nfunction Pg(a){var b=this;if(a=='$wnd'){return $wnd}else if(a===''){return b}if(a.substring(0,5)=='$wnd.'){b=$wnd;a=a.substring(5)}var c=a.split('.');!(c[0] in b)&&b.execScript&&b.execScript('var '+c[0]);for(var d;c.length&&(d=c.shift());){b[d]?(b=b[d]):(b=b[d]={})}return b}\nfunction Kk(a,b){var c;Fc(b);c=5-a.e;if(c==0){return a}if(c>0){if(c<Dk.length&&a.a+Ek[ge(c)]<54){return new Pk(a.f*Dk[ge(c)])}return new Rk(sm((!a.c&&(a.c=Kl(a.f)),a.c),ge(c)))}if(a.a<54&&-c<Dk.length){return Wk(a.f,Dk[ge(-c)],b)}return Vk((!a.c&&(a.c=Kl(a.f)),a.c),vm(-c),b)}\nfunction Ns(a){var b,c,d;d='Element: '+a.a+' - symbol: '+a.g+' - exact mass: '+a.d+' - mass: '+a.c+' - name: '+a.e+' - nb isotope: '+a.b.b+'\\r\\n';for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+='Number: '+b.c+' - mass: '+b.b+' - percentage: '+b.d+' - symbol: '+b.a+'\\r\\n'}return d}\nfunction ls(a,b,c,d){var e;if(c>d)throw new It('Error: minCount>maxCount');if(b==0){this.d=c;this.c=d;this.e=Ls(a);this.f=a.f;this.a=0;this.i=a.g;this.b=a.c;return}e=dn(a.b,new fj(b));if(!e)throw new It('Isotope not found');this.a=b;this.i=a.g;this.b=e.b;this.e=e.b;this.d=c;this.c=d}\nfunction Ql(a,b){var c,d,e,f,g;d=b>>5;b&=31;if(d>=a.d){return a.e<0?(hl(),bl):(hl(),gl)}f=a.d-d;e=Sd(ke,Ru,0,f+1,7,1);Rl(e,f,a.a,d,b);if(a.e<0){for(c=0;c<d&&a.a[c]==0;c++);if(c<d||b>0&&a.a[c]<<32-b!=0){for(c=0;c<f&&e[c]==-1;c++){e[c]=0}c==f&&++f;++e[c]}}g=new zl(a.e,f,e);kl(g);return g}\nfunction kr(a,b,c,d){var e,f;if(!b){return c}else{e=a.b.Y(c.c,b.c);if(e==0){d.d=co(b,c.d);d.b=true;return b}f=e<0?0:1;b.a[f]=kr(a,b.a[f],c,d);if(lr(b.a[f])){if(lr(b.a[1-f])){b.b=true;b.a[0].b=false;b.a[1].b=false}else{lr(b.a[f].a[f])?(b=sr(b,1-f)):lr(b.a[f].a[1-f])&&(b=rr(b,1-f))}}}return b}\nfunction Jc(a,b){var c,d,e,f;a=''+a;c=new tk(a.length+16*b.length);f=0;d=0;while(d<b.length){e=a.indexOf('%s',f);if(e==-1){break}qk(c,a.substr(f,e-f));pk(c,b[d++]);f=e+2}qk(c,Wj(a,f,a.length-f));if(d<b.length){c.a+=' [';pk(c,b[d++]);while(d<b.length){c.a+=', ';pk(c,b[d++])}c.a+=']'}return c.a}\nfunction hl(){hl=Lg;var a;cl=new yl(1,1);el=new yl(1,10);gl=new yl(0,0);bl=new yl(-1,1);dl=Vd(Rd(jf,1),Ru,5,0,[gl,cl,new yl(1,2),new yl(1,3),new yl(1,4),new yl(1,5),new yl(1,6),new yl(1,7),new yl(1,8),new yl(1,9),el]);fl=Sd(jf,Ru,5,32,0,1);for(a=0;a<fl.length;a++){fl[a]=Ll(xh({l:1,m:0,h:0},a))}}\nfunction eu(){eu=Lg;du=new zp;hn(du,'O',oj(0));hn(du,'N',oj(1));hn(du,'H',oj(-1));hn(du,'C',oj(2));hn(du,'F',oj(-1));hn(du,'Cl',oj(-1));hn(du,'Br',oj(-1));hn(du,'I',oj(-1));hn(du,'S',oj(0));hn(du,'P',oj(1));hn(du,'Li',oj(-1));hn(du,'Na',oj(-1));hn(du,'K',oj(-1));hn(du,'Ca',oj(0));hn(du,'Mg',oj(0))}\nfunction vu(a,b,c){var d,e,f,g,h,i,j,k;h=new Mu;k=a.c.gb('referenceVersion');k!=null&&!Jj(k,'')&&(c=(Ht(),Ht(),Ft));if(c){i=new Gu;Ju(h,'elements',i.a);for(e=Vn(new Wn(c));un(e.a);){d=$n(e);Fu(i,Ms(d).a)}}if(b){j=new Gu;Ju(h,'groups',j.a);for(g=Vn(new Wn(b));un(g.a);){f=$n(g);Fu(j,At(f).a)}}return h}\nfunction et(b){var c,d,e;e=Qj(b,'/',0);if(e.length!=2)throw new It('Syntax error: bad fraction syntax: '+b);try{c=Pi(e[1]);if(c==0)throw new It('Syntax error: divide by zero: '+b);d=Pi(e[0]);return d/c}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad fraction syntax: '+b)}else throw Gg(a)}}\nfunction mm(){mm=Lg;var a,b;jm=Sd(jf,Ru,5,32,0,1);km=Sd(jf,Ru,5,32,0,1);lm=Vd(Rd(ke,1),Ru,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu]);a={l:1,m:0,h:0};for(b=0;b<=18;b++){jm[b]=Ll(a);km[b]=Ll(xh(a,b));a=th(a,{l:5,m:0,h:0})}for(;b<km.length;b++){jm[b]=rl(jm[b-1],jm[1]);km[b]=rl(km[b-1],(hl(),el))}}\nfunction pm(a,b,c,d,e){var f,g,h,i;if(ee(a)===ee(b)&&d==e){wm(a,d,c);return}for(h=0;h<d;h++){g={l:0,m:0,h:0};f=a[h];for(i=0;i<e;i++){g=ih(ih(th(jh(nh(f),{l:Su,m:1023,h:0}),jh(nh(b[i]),{l:Su,m:1023,h:0})),jh(nh(c[h+i]),{l:Su,m:1023,h:0})),jh(nh(Ch(g)),{l:Su,m:1023,h:0}));c[h+i]=Ch(g);g=zh(g,32)}c[h+e]=Ch(g)}}\nfunction _s(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d+=nt(b)*b.f}return e=isNaN(d*cv)?d*cv:Wi(d*cv)?d*cv:d*cv==0?d*cv:Bh(mh(Math.round(d*cv))),e/cv}\nfunction at(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');b=0;for(d=new In(a.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));b+=ot(c)*c.f}return e=isNaN(b*dv)?b*dv:Wi(b*dv)?b*dv:b*dv==0?b*dv:Bh(mh(Math.round(b*dv))),e/dv}\nfunction rm(a,b){var c,d,e,f,g,h,i,j,k;j=a.e;if(j==0){return hl(),gl}d=a.d;c=a.a;if(d==1){e=th(jh(nh(c[0]),{l:Su,m:1023,h:0}),jh(nh(b),{l:Su,m:1023,h:0}));i=Ch(e);g=Ch(zh(e,32));return g==0?new yl(j,i):new zl(j,2,Vd(Rd(ke,1),Ru,0,7,[i,g]))}h=d+1;f=Sd(ke,Ru,0,h,7,1);f[d]=qm(f,c,d,b);k=new zl(j,h,f);kl(k);return k}\nfunction tm(a,b){var c,d,e,f,g,h,i,j,k,l,m;d=a.d;f=b.d;h=d+f;i=a.e!=b.e?-1:1;if(h==2){k=th(jh(nh(a.a[0]),{l:Su,m:1023,h:0}),jh(nh(b.a[0]),{l:Su,m:1023,h:0}));m=Ch(k);l=Ch(zh(k,32));return l==0?new yl(i,m):new zl(i,2,Vd(Rd(ke,1),Ru,0,7,[m,l]))}c=a.a;e=b.a;g=Sd(ke,Ru,0,h,7,1);om(c,d,e,f,g);j=new zl(i,h,g);kl(j);return j}\nfunction Il(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;m=b.length;i=m;if(b.charCodeAt(0)==45){k=-1;l=1;--m}else{k=1;l=0}f=(Ul(),Tl)[10];e=~~(m/f);p=m%f;p!=0&&++e;h=Sd(ke,Ru,0,e,7,1);c=Sl[8];g=0;n=l+(p==0?f:p);for(o=l;o<i;o=n,n=n+f){d=Pi(b.substr(o,n-o));j=(mm(),qm(h,h,g,c));j+=fm(h,g,d);h[g++]=j}a.e=k;a.d=g;a.a=h;kl(a)}\nfunction Dh(a){var b,c,d,e,f;if(a.l==0&&a.m==0&&a.h==0){return '0'}if(a.h==Uu&&a.m==0&&a.l==0){return '-9223372036854775808'}if(a.h>>19!=0){return '-'+Dh(uh(a))}c=a;d='';while(!(c.l==0&&c.m==0&&c.h==0)){e=nh(Yu);c=Vg(c,e,true);b=''+Ch(Rg);if(!(c.l==0&&c.m==0&&c.h==0)){f=9-b.length;for(;f>0;f--){b='0'+b}}d=b+d}return d}\nfunction Ms(a){var b,c,d,e,f,g;d=new Mu;Lu(d,'symbol',a.g);Ju(d,'monoisotopicMass',new hd(a.d));Ju(d,'mass',new hd(a.c));Lu(d,'name',a.e);Ju(d,'atomicNumber',new hd(a.a));f=new Gu;Ju(d,'isotopes',f.a);for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);e=(g=new Mu,Ju(g,'mass',new hd(b.b)),Ju(g,'percentage',new hd(b.d)),g);Fu(f,e.a)}return d}\nfunction Au(a,b){var c,d,e,f;f='';for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=gs(c.a);(e==null?!!Dp(b.a,null):!(b.c.gb(e)===undefined))&&(Jj((e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c.substr(0,1),'{')?(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c):(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).b));c.b>1?(f+=e+c.b):c.b>0&&(f+=e)}return f}\nfunction Lt(a){var b,c,d,e,f;c=true;for(e=new In(a.d.d);e.a<e.c.G();){d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(c){a.e=new _t(a,d,a.c);xs(a.e.c,d.f);b=a.e;c=false}else{b=new _t(a,d,a.c);xs(b.c,d.f);rs(a.e.c,b.c)}if(d.b!=''){f=new Ri(vs(b.c));_m(a.g,f)?gn(a.g,f,dn(a.g,f)+','+d.b):gn(a.g,f,d.b)}}if(a.e.c.d==0)throw new It('Isotopic distribution: empty table')}\nfunction Pi(a){var b,c,d,e,f;if(a==null){throw new Dj('null')}d=a.length;e=d>0&&(a.charCodeAt(0)==45||a.charCodeAt(0)==43)?1:0;for(b=e;b<d;b++){if(mi(a.charCodeAt(b))==-1){throw new Dj('For input string: \"'+a+'\"')}}f=parseInt(a,10);c=f<$u;if(isNaN(f)){throw new Dj('For input string: \"'+a+'\"')}else if(c||f>Ou){throw new Dj('For input string: \"'+a+'\"')}return f}\nfunction ll(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;f=b.e;if(f==0){throw new Zh('BigInteger divide by zero')}e=b.d;d=b.a;if(e==1){return Zl(a,d[0],f)}m=a.a;n=a.d;c=n!=e?n>e?1:-1:em(m,d,n);if(c<0){return Vd(Rd(jf,1),Ru,5,0,[gl,a])}o=a.e;h=n-e+1;i=o==f?1:-1;g=Sd(ke,Ru,0,h,7,1);j=Yl(g,h,m,n,d,e);k=new zl(i,h,g);l=new zl(o,e,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\nfunction Ik(a,b){var c,d,e,f,g,h;e=Mk(a);h=Mk(b);if(e==h){if(a.e==b.e&&a.a<54&&b.a<54){return a.f<b.f?-1:a.f>b.f?1:0}d=a.e-b.e;c=(a.d>0?a.d:uj((a.a-1)*ev)+1)-(b.d>0?b.d:uj((b.a-1)*ev)+1);if(c>d+1){return e}else if(c<d-1){return -e}else{f=(!a.c&&(a.c=Kl(a.f)),a.c);g=(!b.c&&(b.c=Kl(b.f)),b.c);d<0?(f=rl(f,vm(-d))):d>0&&(g=rl(g,vm(d)));return jl(f,g)}}else return e<h?-1:1}\nfunction Zl(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;m=a.a;n=a.d;o=a.e;if(n==1){d=jh(nh(m[0]),{l:Su,m:1023,h:0});e=jh(nh(b),{l:Su,m:1023,h:0});f=kh(d,e);i=sh(d,e);o!=c&&(f=uh(f));o<0&&(i=uh(i));return Vd(Rd(jf,1),Ru,5,0,[Ll(f),Ll(i)])}h=o==c?1:-1;g=Sd(ke,Ru,0,n,7,1);j=Vd(Rd(ke,1),Ru,0,7,[$l(g,m,n,b)]);k=new zl(h,n,g);l=new zl(o,1,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\nfunction am(a,b,c,d,e){var f,g,h;f={l:0,m:0,h:0};g={l:0,m:0,h:0};for(h=0;h<d;h++){f=(mm(),ih(th(jh(nh(c[h]),{l:Su,m:1023,h:0}),jh(nh(e),{l:Su,m:1023,h:0})),jh(nh(Ch(f)),{l:Su,m:1023,h:0})));g=ih(Ah(jh(nh(a[b+h]),{l:Su,m:1023,h:0}),jh(f,{l:Su,m:1023,h:0})),g);a[b+h]=Ch(g);g=yh(g,32);f=zh(f,32)}g=ih(Ah(jh(nh(a[b+d]),{l:Su,m:1023,h:0}),f),g);a[b+d]=Ch(g);return Ch(yh(g,32))}\nfunction _l(a,b){var c,d,e,f,g;d=jh(nh(b),{l:Su,m:1023,h:0});if(ph(a,{l:0,m:0,h:0})){f=kh(a,d);g=sh(a,d)}else{c=zh(a,1);e=nh(b>>>1);f=kh(c,e);g=sh(c,e);g=ih(xh(g,1),jh(a,{l:1,m:0,h:0}));if((b&1)!=0){if(rh(f,g)){g=Ah(g,f)}else{if(rh(Ah(f,g),d)){g=ih(g,Ah(d,f));f=Ah(f,{l:1,m:0,h:0})}else{g=ih(g,Ah(xh(d,1),f));f=Ah(f,{l:2,m:0,h:0})}}}}return wh(xh(g,32),jh(f,{l:Su,m:1023,h:0}))}\nfunction lu(a,b,c){ku();var d,e,f,g,h,i,j,k,l,m,n,o;i=~~(~~((b.b-1)/b.a)/2);h=a[0][0];g=a[a.length-1][0];k=Ch(mh(zj((g-h)/c*b.a)))+2*b.a*i+1;o=Sd(je,av,0,k,7,1);for(m=0,n=a.length;m<n;++m){l=a[m];d=Ch(mh(zj((l[0]-h)/c*b.a+b.a*i)));for(f=0;f<b.c.length;f++){o[d+f-b.a*i]+=b.c[f]*l[1]}}j=Td(je,[Ru,av],[28,0],7,[k,2],2);for(e=0;e<k;e++){j[e][0]=(e/b.a-i)*c+h;j[e][1]=o[e]}return j}\nfunction $k(a,b,c){var d;d=0;switch(c.b){case 7:if(b!=0){throw new Zh('Rounding necessary')}break;case 0:d=b==0?0:b<0?-1:1;break;case 2:d=(b==0?0:b<0?-1:1)>0?b==0?0:b<0?-1:1:0;break;case 3:d=(b==0?0:b<0?-1:1)<0?b==0?0:b<0?-1:1:0;break;case 4:(b<0?-b:b)>=5&&(d=b==0?0:b<0?-1:1);break;case 5:(b<0?-b:b)>5&&(d=b==0?0:b<0?-1:1);break;case 6:(b<0?-b:b)+a>5&&(d=b==0?0:b<0?-1:1);}return d}\nfunction zt(a,b,c,d){var e,f,g,h,i,j,k,l,m;if(b.indexOf(',')==-1)throw new It('Syntax error: combinatorial');if(c!=d)throw new It('Combinatorial range formulae are not allowed');j=Qj(b,',',0);i=0;h=j.length;m=new nk('{');for(g=0;g<h-1;g++){l=Tj(j[g]);f=new ut(l,a.c,a.d);lk(m,st(f)+',');i+=nt(f)}k=Tj(j[h-1]);e=new ut(k,a.c,a.d);lk(m,st(e)+'}');i+=nt(e);i/=h;kt(a,new js(m.a,i,c,d))}\nfunction Yg(a,b,c,d,e,f){var g,h,i,j,k,l,m;j=_g(b)-_g(a);g=xh(b,j);i=Ug(0,0,0);while(j>=0){h=gh(a,g);if(h){j<22?(i.l|=1<<j,undefined):j<44?(i.m|=1<<j-22,undefined):(i.h|=1<<j-44,undefined);if(a.l==0&&a.m==0&&a.h==0){break}}k=g.m;l=g.h;m=g.l;bh(g,l>>>1);g.m=k>>>1|(l&1)<<21;g.l=m>>>1|(k&1)<<21;--j}c&&$g(i);if(f){if(d){Rg=uh(a);e&&(Rg=Ah(Rg,(Jh(),Hh)))}else{Rg=Ug(a.l,a.m,a.h)}}return i}\nfunction Vh(){var a=navigator.userAgent.toLowerCase();var b=$doc.documentMode;if(function(){return a.indexOf('webkit')!=-1}())return 'safari';if(function(){return a.indexOf('msie')!=-1&&b>=10&&b<11}())return 'ie10';if(function(){return a.indexOf('msie')!=-1&&b>=9&&b<11}())return 'ie9';if(function(){return a.indexOf('msie')!=-1&&b>=8&&b<11}())return 'ie8';if(function(){return a.indexOf('gecko')!=-1||b>=11}())return 'gecko1_8';return 'unknown'}\nfunction vm(a){mm();var b,c,d,e;b=ge(a);if(a<km.length){return km[b]}else if(a<=50){return sl((hl(),el),b)}else if(a<=1000){return tl(sl(jm[1],b),b)}if(a>cv){throw new Zh('power of ten too big')}if(a<=Ou){return tl(sl(jm[1],b),b)}d=sl(jm[1],Ou);e=d;c=mh(a-Ou);b=ge(a%Ou);while(oh(c,{l:Su,m:511,h:0})){e=rl(e,d);c=Ah(c,{l:Su,m:511,h:0})}e=rl(e,sl(jm[1],b));e=tl(e,Ou);c=mh(a-Ou);while(oh(c,{l:Su,m:511,h:0})){e=tl(e,Ou);c=Ah(c,{l:Su,m:511,h:0})}e=tl(e,b);return e}\nfunction Qj(l,a,b){var c=new RegExp(a,'g');var d=[];var e=0;var f=l;var g=null;while(true){var h=c.exec(f);if(h==null||f==''||e==b-1&&b>0){d[e]=f;break}else{d[e]=f.substring(0,h.index);f=f.substring(h.index+h[0].length,f.length);c.lastIndex=0;if(g==f){d[e]=f.substring(0,1);f=f.substring(1)}g=f;e++}}if(b==0&&l.length>0){var i=d.length;while(i>0&&d[i-1]==''){--i}i<d.length&&d.splice(i,d.length-i)}var j=Vj(d.length);for(var k=0;k<d.length;++k){j[k]=d[k]}return j}\nfunction gm(a,b){var c,d,e,f,g,h,i,j,k,l;g=a.e;i=b.e;if(i==0){return a}if(g==0){return b.e==0?b:new zl(-b.e,b.d,b.a)}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});g<0&&(c=uh(c));i<0&&(d=uh(d));return Ll(Ah(c,d))}e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==-1){l=-i;k=g==i?hm(b.a,h,a.a,f):cm(b.a,h,a.a,f)}else{l=g;if(g==i){if(e==0){return hl(),gl}k=hm(a.a,f,b.a,h)}else{k=cm(a.a,f,b.a,h)}}j=new zl(l,k.length,k);kl(j);return j}\nfunction $l(a,b,c,d){var e,f,g,h,i,j,k;j={l:0,m:0,h:0};f=jh(nh(d),{l:Su,m:1023,h:0});for(h=c-1;h>=0;h--){k=wh(xh(j,32),jh(nh(b[h]),{l:Su,m:1023,h:0}));if(ph(k,{l:0,m:0,h:0})){i=kh(k,f);j=sh(k,f)}else{e=zh(k,1);g=nh(d>>>1);i=kh(e,g);j=sh(e,g);j=ih(xh(j,1),jh(k,{l:1,m:0,h:0}));if((d&1)!=0){if(rh(i,j)){j=Ah(j,i)}else{if(rh(Ah(i,j),f)){j=ih(j,Ah(f,i));i=Ah(i,{l:1,m:0,h:0})}else{j=ih(j,Ah(xh(f,1),i));i=Ah(i,{l:2,m:0,h:0})}}}}a[h]=Ch(jh(i,{l:Su,m:1023,h:0}))}return Ch(j)}\nfunction wk(a,b,c,d,e){var f,g,h,i,j,k,l,m,n;Gc(a,'src');Gc(c,'dest');m=hb(a);i=hb(c);Ac((m.e&4)!=0,'srcType is not an array');Ac((i.e&4)!=0,'destType is not an array');l=m.c;g=i.c;Ac((l.e&1)!=0?l==g:(g.e&1)==0,\"Array types don't match\");n=a.length;j=c.length;if(b<0||d<0||e<0||b+e>n||d+e>j){throw new $h}if(((l.e&1)==0||(l.e&4)!=0)&&m!=i){k=a;f=c;if(ee(a)===ee(c)&&b<d){b+=e;for(h=d+e;h-->d;){f[h]=k[--b]}}else{for(h=d+e;d<h;){f[d++]=k[b++]}}}else e>0&&Xd(a,b,c,d,e,true)}\nfunction Ul(){Ul=Lg;Sl=Vd(Rd(ke,1),Ru,0,7,[$u,1162261467,gv,1220703125,362797056,1977326743,gv,387420489,Yu,214358881,429981696,815730721,1475789056,170859375,268435456,410338673,612220032,893871739,1280000000,1801088541,113379904,148035889,191102976,244140625,308915776,387420489,481890304,594823321,729000000,887503681,gv,1291467969,1544804416,1838265625,60466176]);Tl=Vd(Rd(ke,1),Ru,0,7,[-1,-1,31,19,15,13,11,11,10,9,9,8,8,8,8,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5])}\nfunction Nk(a){var b,c,d,e,f;if(a.g!=null){return a.g}if(a.a<32){a.g=Wl(mh(a.f),ge(a.e));return a.g}e=Xl((!a.c&&(a.c=Kl(a.f)),a.c),0);if(a.e==0){return e}b=(!a.c&&(a.c=Kl(a.f)),a.c).e<0?2:1;c=e.length;d=-a.e+c-b;f=new sk;f.a+=e;if(a.e>0&&d>=-6){if(d>=0){rk(f,c-ge(a.e),'.')}else{f.a=Sj(f.a,0,b-1)+'0.'+Rj(f.a,b-1);rk(f,b+1,dk(Ak,0,-ge(d)-1))}}else{if(c-b>=1){f.a=Sj(f.a,0,b)+'.'+Rj(f.a,b);++c}f.a=Sj(f.a,0,c)+'E'+Rj(f.a,c);d>0&&rk(f,++c,'+');rk(f,++c,''+Dh(mh(d)))}a.g=f.a;return a.g}\nfunction Nt(b){var c,d,e;if(b.e.c.d==0)throw new tb('No isotopic distribution data');mr(b.e.c,new Ri(Ao(er(b.e.c)).a-2),new Ri(0));mr(b.e.c,new Ri(Ao(fr(b.e.c)).a+2),new Ri(0));d=new zp;hn(d,'FWHM',b.b+'');hn(d,'Threshold',b.a+'');try{if(b.d.d.b.length==1){e=Ro(b.d.d,0);hn(d,'Monoisotopic mass',ot(e)+'');hn(d,'Molecular weight',nt(e)+'');!!gu(e,null)&&hn(d,'Unsaturation',gu(e,null)+'')}}catch(a){a=Hg(a);if(_d(a,6)){c=a;nb(c)}else throw Gg(a)}return Bs(b.e.c,b.d+' - fwhm: '+b.b,b.g,d)}\nfunction Vk(a,b,c){var d,e,f,g,h,i,j;f=ll(a,b);g=f[0];i=f[1];if(i.e==0){return new Rk(g)}j=a.e*b.e;if(Ml(b)<54){h=ql(i);e=ql(b);d=qh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?-1:oh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?1:0;d=$k(wl(g,0)?1:0,j*(5+d),c)}else{d=jl(ul(i.e<0?new zl(1,i.d,i.a):i),b.e<0?new zl(1,b.d,b.a):b);d=$k(wl(g,0)?1:0,j*(5+d),c)}if(d!=0){if(Ml(g)<54){return al(ih(ql(g),nh(d)))}g=bm(g,Ll(nh(d)));return new Rk(g)}return new Rk(g)}\nfunction _j(a,b,c){if(c<128){a[b]=fe(c&127);return 1}else if(c<2048){a[b++]=fe(c>>6&31|192);a[b]=fe(c&63|128);return 2}else if(c<Zu){a[b++]=fe(c>>12&15|224);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 3}else if(c<2097152){a[b++]=fe(c>>18&7|240);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 4}else if(c<67108864){a[b++]=fe(c>>24&3|248);a[b++]=fe(c>>18&63|128);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 5}throw new cj('Character out of range: '+c)}\nfunction bm(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;g=a.e;i=b.e;if(g==0){return b}if(i==0){return a}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});if(g==i){k=ih(c,d);o=Ch(k);n=Ch(zh(k,32));return n==0?new yl(g,o):new zl(g,2,Vd(Rd(ke,1),Ru,0,7,[o,n]))}return Ll(g<0?Ah(d,c):Ah(c,d))}else if(g==i){m=g;l=f>=h?cm(a.a,f,b.a,h):cm(b.a,h,a.a,f)}else{e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==0){return hl(),gl}if(e==1){m=g;l=hm(a.a,f,b.a,h)}else{m=i;l=hm(b.a,h,a.a,f)}}j=new zl(m,l.length,l);kl(j);return j}\nfunction dm(a,b,c,d,e){var f,g;f=ih(jh(nh(b[0]),{l:Su,m:1023,h:0}),jh(nh(d[0]),{l:Su,m:1023,h:0}));a[0]=Ch(f);f=yh(f,32);if(c>=e){for(g=1;g<e;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}else{for(g=1;g<c;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<e;g++){f=ih(f,jh(nh(d[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}vh(f,{l:0,m:0,h:0})&&(a[g]=Ch(f))}\nfunction wm(a,b,c){var d,e,f,g,h;for(f=0;f<b;f++){d={l:0,m:0,h:0};for(h=f+1;h<b;h++){d=ih(ih(th(jh(nh(a[f]),{l:Su,m:1023,h:0}),jh(nh(a[h]),{l:Su,m:1023,h:0})),jh(nh(c[f+h]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[f+h]=Ch(d);d=zh(d,32)}c[f+b]=Ch(d)}Pl(c,c,b<<1);d={l:0,m:0,h:0};for(e=0,g=0;e<b;++e,g++){d=ih(ih(th(jh(nh(a[e]),{l:Su,m:1023,h:0}),jh(nh(a[e]),{l:Su,m:1023,h:0})),jh(nh(c[g]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32);++g;d=ih(d,jh(nh(c[g]),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32)}return c}\nfunction th(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;c=a.l&8191;d=a.l>>13|(a.m&15)<<9;e=a.m>>4&8191;f=a.m>>17|(a.h&255)<<5;g=(a.h&1048320)>>8;h=b.l&8191;i=b.l>>13|(b.m&15)<<9;j=b.m>>4&8191;k=b.m>>17|(b.h&255)<<5;l=(b.h&1048320)>>8;B=c*h;C=d*h;D=e*h;F=f*h;G=g*h;if(i!=0){C+=c*i;D+=d*i;F+=e*i;G+=f*i}if(j!=0){D+=c*j;F+=d*j;G+=e*j}if(k!=0){F+=c*k;G+=d*k}l!=0&&(G+=c*l);n=B&Su;o=(C&511)<<13;m=n+o;q=B>>22;r=C>>9;s=(D&262143)<<4;t=(F&31)<<17;p=q+r+s+t;v=D>>18;w=F>>5;A=(G&4095)<<8;u=v+w+A;p+=m>>22;m&=Su;u+=p>>22;p&=Su;u&=Tu;return Ug(m,p,u)}\nfunction jt(b,c,d,e,f,g){var h,i,j,k,l,m;if(Jj(c,'Zcharge')){b.a+=d;return}if(c.charCodeAt(0)==91){h=1;while(ni(c.charCodeAt(h)))++h;if(f==0){try{f=Pi(c.substr(1,h-1))}catch(a){a=Hg(a);if(_d(a,6)){throw new It('Bad isotope syntax')}else throw Gg(a)}}c=Sj(c,h,c.length-1)}i=en(b.c,c);if(!i){l=en(b.d,c);if(!l)throw new It('Unrecognized symbol: '+c);if(f!=0)throw new It('Syntax error: cannot specify isotopes for groups');if(g){k=Fo(new Go(l.a.g));while(Fn(k.a.a)){j=Ko(k);m=new ks(j);m.d*=d;m.c*=e;kt(b,m)}}else{kt(b,new ms(l,d,e))}}else{kt(b,new ls(i,f,d,e))}}\nfunction Uh(a){Th.call(this,''+('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.'),_d('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.',9)?'Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.':null)}\nfunction Tt(a,b){var c,d,e,f,g,h,i,j,k,l,m;m=new wt(new bu(a));Im(m,b);j=1;for(e=Fo(new Go(m.g));Fn(e.a.a);){c=Ko(e);h=en(a.a,c.i);h.b.b>j&&(j=h.b.b)}k=2*j*vj(qt(m)+1)/vj(2);l=a.d.b/(k*4);Yt(a,l);mr(a.c,new Ri(0),new Ri(1));for(d=Fo(new Go(m.g));Fn(d.a.a);){c=Ko(d);h=en(a.a,c.i);if(c.a!=0){f=new Os(c.b,c.b,h.g,h.e,h.a);h=f}if(h.b.b==0){i=new Ct(ge(h.c+0.5),h.c,1,h.g);gn(h.b,new fj(i.c),i)}if(fs(c)<0){throw new It('Number of element under 0')}else if(fs(c)==0);else if(fs(c)==1){a.c=Ut(a,new $t(a.d,h,a.a))}else{g=new $t(a.d,h,a.a);Yt(g,a.b);a.c=Ut(a,St(g,fs(c)))}}}\nfunction Vg(a,b,c){var d,e,f,g,h,i;if(b.l==0&&b.m==0&&b.h==0){throw new Zh('divide by zero')}if(a.l==0&&a.m==0&&a.h==0){c&&(Rg=Ug(0,0,0));return Ug(0,0,0)}if(b.h==Uu&&b.m==0&&b.l==0){return Wg(a,c)}i=false;if(b.h>>19!=0){b=uh(b);i=true}g=ah(b);f=false;e=false;d=false;if(a.h==Uu&&a.m==0&&a.l==0){e=true;f=true;if(g==-1){a=Tg((Jh(),Fh));d=true;i=!i}else{h=yh(a,g);i&&$g(h);c&&(Rg=Ug(0,0,0));return h}}else if(a.h>>19!=0){f=true;a=uh(a);d=true;i=!i}if(g!=-1){return Xg(a,g,i,f,c)}if(!ph(a,b)){c&&(f?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h)));return Ug(0,0,0)}return Yg(d?a:Ug(a.l,a.m,a.h),b,i,f,e,c)}\nfunction uc(a,b){var c,d,e,f,g,h,i,j,k;if(!b.length){return a.q('Unknown','anonymous',-1,-1)}k=Tj(b);Jj(k.substr(0,3),'at ')&&(k=Wj(k,3,k.length-3));k=k.replace(/\\[.*?\\]/g,'');g=k.indexOf('(');if(g==-1){g=k.indexOf('@');if(g==-1){j=k;k=''}else{j=Tj(Wj(k,g+1,k.length-(g+1)));k=Tj(k.substr(0,g))}}else{c=k.indexOf(')',g);j=k.substr(g+1,c-(g+1));k=Tj(k.substr(0,g))}g=Lj(k,ak(46));g!=-1&&(k=Wj(k,g+1,k.length-(g+1)));(!k.length||Jj(k,'Anonymous function'))&&(k='anonymous');h=Mj(j,ak(58));e=Nj(j,ak(58),h-1);i=-1;d=-1;f='Unknown';if(h!=-1&&e!=-1){f=j.substr(0,e);i=pc(j.substr(e+1,h-(e+1)));d=pc(Wj(j,h+1,j.length-(h+1)))}return a.q(f,k,i,d)}\nfunction pr(a,b,c){var d,e,f,g,h,i,j,k,l,m,n;if(!a.c){return false}g=null;m=null;i=new Gr(null,null);e=1;i.a[1]=a.c;l=i;while(l.a[e]){j=e;h=m;m=l;l=l.a[e];d=a.b.Y(b,l.c);e=d<0?0:1;d==0&&(!c.c||Pq(l.d,c.d))&&(g=l);if(!(!!l&&l.b)&&!lr(l.a[e])){if(lr(l.a[1-e])){m=m.a[j]=sr(l,e)}else if(!lr(l.a[1-e])){n=m.a[1-j];if(n){if(!lr(n.a[1-j])&&!lr(n.a[j])){m.b=false;n.b=true;l.b=true}else{f=h.a[1]==m?1:0;lr(n.a[j])?(h.a[f]=rr(m,j)):lr(n.a[1-j])&&(h.a[f]=sr(m,j));l.b=h.a[f].b=true;h.a[f].a[0].b=false;h.a[f].a[1].b=false}}}}}if(g){c.b=true;c.d=g.d;if(l!=g){k=new Gr(l.c,l.d);qr(a,i,g,k);m==g&&(m=k)}m.a[m.a[1]==l?1:0]=l.a[!l.a[0]?1:0];--a.d}a.c=i.a[1];!!a.c&&(a.c.b=false);return c.b}\nfunction Vt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);!!c&&!!d&&(rj(c.a-m)<rj(d.a-m)?(d=null):(c=null));if(c){if(to(k,c).a>l){l+=to(k,c).a;m=c.a}else{l+=to(k,c).a;nr(k,c)}}else if(d){if(to(k,d).a>l){l+=to(k,d).a;m=d.a}else{l+=to(k,d).a;nr(k,d)}}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\nfunction vt(a,b,c,d,e){var f,g,h,i,j,k,l;$r.call(this);this.c=b;this.d=c;this.f=d;h=a.indexOf('$');if(h>-1){this.b=Wj(a,h+1,a.length-(h+1));a=a.substr(0,h)}g=new RegExp('(\\\\([0-9]+[+-]\\\\))');for(j=g.exec(a);j;j=g.exec(a)){f=j[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9]+)([+-])$','$2$1'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('(\\\\([+-][0-9]+\\\\))');for(k=g.exec(a);k;k=g.exec(a)){f=k[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9])([+-])$','$1$2'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('([+-])(?![0-9])');for(i=g.exec(a);i;i=g.exec(a)){f=i[0];Jj(f,'+')?(a=a.replace(g,'Zcharge')):(a=a.replace(g,'(Zcharge-1)'))}Oj(a,'[a-zA-Z][0-9]+-[0-9]')&&(this.e=true);a.indexOf('}')!=-1;yt(this,a,e)}\nfunction Wt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);if(!!c&&!!d){m=(m*l+c.a*to(k,c).a+d.a*to(k,d).a)/(l+to(k,c).a+to(k,d).a);l+=to(k,c).a+to(k,d).a;nr(k,c);nr(k,d)}else if(c){m=(m*l+c.a*to(k,c).a)/(l+to(k,c).a);l+=to(k,c).a;nr(k,c)}else if(d){m=(m*l+d.a*to(k,d).a)/(l+to(k,d).a);l+=to(k,d).a;nr(k,d)}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\nfunction Hk(){Hk=Lg;var a,b,c;new Qk({l:1,m:0,h:0},0);new Qk({l:10,m:0,h:0},0);new Qk({l:0,m:0,h:0},0);zk=Sd(hf,Ru,14,11,0,1);Ak=Sd(ie,Ru,0,100,7,1);Bk=Vd(Rd(je,1),av,0,7,[1,5,25,125,625,3125,15625,78125,390625,1953125,9765625,48828125,244140625,1220703125,6103515625,30517578125,152587890625,762939453125,3814697265625,19073486328125,95367431640625,476837158203125,2384185791015625]);Ck=Sd(ke,Ru,0,Bk.length,7,1);Dk=Vd(Rd(je,1),av,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu,dv,100000000000,1000000000000,10000000000000,100000000000000,1000000000000000,10000000000000000]);Ek=Sd(ke,Ru,0,Dk.length,7,1);Fk=Sd(hf,Ru,14,11,0,1);a=0;for(;a<Fk.length;a++){zk[a]=new Qk(nh(a),0);Fk[a]=new Qk({l:0,m:0,h:0},a);Ak[a]=48}for(;a<Ak.length;a++){Ak[a]=48}for(c=0;c<Ck.length;c++){Ck[c]=Sk(Bk[c])}for(b=0;b<Ek.length;b++){Ek[b]=Sk(Dk[b])}mm()}\nfunction Jk(a,b){var c,d,e,f,g,h,i,j;c=0;g=0;f=b.length;j=new tk(b.length);if(0<f&&b.charCodeAt(0)==43){++g;++c;if(g<f&&(b.charCodeAt(g)==43||b.charCodeAt(g)==45)){throw new Dj('For input string: \"'+b+'\"')}}while(g<f&&b.charCodeAt(g)!=46&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}Wh(j,b,c,g);if(g<f&&b.charCodeAt(g)==46){++g;c=g;while(g<f&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}a.e=g-c;Wh(j,b,c,g)}else{a.e=0}if(g<f&&(b.charCodeAt(g)==101||b.charCodeAt(g)==69)){++g;c=g;if(g<f&&b.charCodeAt(g)==43){++g;g<f&&b.charCodeAt(g)!=45&&++c}h=b.substr(c,f-c);a.e=a.e-Pi(h);if(a.e!=ge(a.e)){throw new Dj('Scale out of range.')}}i=j.a;if(i.length<16){a.f=Zk(i);if(Xi(a.f)){throw new Dj('For input string: \"'+b+'\"')}a.a=Sk(a.f)}else{Lk(a,new Cl(i))}a.d=j.a.length;for(e=0;e<j.a.length;++e){d=Ij(j.a,e);if(d!=45&&d!=48){break}--a.d}a.d==0&&(a.d=1)}\nfunction Yl(a,b,c,d,e,f){var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;q=Sd(ke,Ru,0,d+1,7,1);r=Sd(ke,Ru,0,f+1,7,1);i=kj(e[f-1]);if(i!=0){Ol(r,e,0,i);Ol(q,c,0,i)}else{wk(c,0,q,0,d);wk(e,0,r,0,f)}j=r[f-1];l=b-1;m=d;while(l>=0){if(q[m]==j){k=-1}else{s=ih(xh(jh(nh(q[m]),{l:Su,m:1023,h:0}),32),jh(nh(q[m-1]),{l:Su,m:1023,h:0}));v=_l(s,j);k=Ch(v);u=Ch(yh(v,32));if(k!=0){t=false;++k;do{--k;if(t){break}o=th(jh(nh(k),{l:Su,m:1023,h:0}),jh(nh(r[f-2]),{l:Su,m:1023,h:0}));w=ih(xh(nh(u),32),jh(nh(q[m-2]),{l:Su,m:1023,h:0}));p=ih(jh(nh(u),{l:Su,m:1023,h:0}),jh(nh(j),{l:Su,m:1023,h:0}));kj(Ch(zh(p,32)))<32?(t=true):(u=Ch(p))}while(oh(Eh(o,{l:0,m:0,h:Uu}),Eh(w,{l:0,m:0,h:Uu})))}}if(k!=0){g=am(q,m-f,r,f,k);if(g!=0){--k;h={l:0,m:0,h:0};for(n=0;n<f;n++){h=ih(h,ih(jh(nh(q[m-f+n]),{l:Su,m:1023,h:0}),jh(nh(r[n]),{l:Su,m:1023,h:0})));q[m-f+n]=Ch(h);h=zh(h,32)}}}a[l]=k;--m;--l}if(i!=0){Rl(r,f,q,0,i);return r}wk(q,0,r,0,f);return q}\nfunction Db(){var a=['\\\\u0000','\\\\u0001','\\\\u0002','\\\\u0003','\\\\u0004','\\\\u0005','\\\\u0006','\\\\u0007','\\\\b','\\\\t','\\\\n','\\\\u000B','\\\\f','\\\\r','\\\\u000E','\\\\u000F','\\\\u0010','\\\\u0011','\\\\u0012','\\\\u0013','\\\\u0014','\\\\u0015','\\\\u0016','\\\\u0017','\\\\u0018','\\\\u0019','\\\\u001A','\\\\u001B','\\\\u001C','\\\\u001D','\\\\u001E','\\\\u001F'];a[34]='\\\\\"';a[92]='\\\\\\\\';a[173]='\\\\u00ad';a[1536]='\\\\u0600';a[1537]='\\\\u0601';a[1538]='\\\\u0602';a[1539]='\\\\u0603';a[1757]='\\\\u06dd';a[1807]='\\\\u070f';a[6068]='\\\\u17b4';a[6069]='\\\\u17b5';a[8203]='\\\\u200b';a[8204]='\\\\u200c';a[8205]='\\\\u200d';a[8206]='\\\\u200e';a[8207]='\\\\u200f';a[8232]='\\\\u2028';a[8233]='\\\\u2029';a[8234]='\\\\u202a';a[8235]='\\\\u202b';a[8236]='\\\\u202c';a[8237]='\\\\u202d';a[8238]='\\\\u202e';a[8288]='\\\\u2060';a[8289]='\\\\u2061';a[8290]='\\\\u2062';a[8291]='\\\\u2063';a[8292]='\\\\u2064';a[8298]='\\\\u206a';a[8299]='\\\\u206b';a[8300]='\\\\u206c';a[8301]='\\\\u206d';a[8302]='\\\\u206e';a[8303]='\\\\u206f';a[65279]='\\\\ufeff';a[65529]='\\\\ufff9';a[65530]='\\\\ufffa';a[65531]='\\\\ufffb';return a}\nfunction Wl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n;h=qh(a,{l:0,m:0,h:0});h&&(a=uh(a));if(lh(a,{l:0,m:0,h:0})){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:l=new sk;b<0?(l.a+='0E+',l):(l.a+='0E',l);l.a+=b==$u?'2147483648':''+-b;return l.a;}}j=Sd(ie,Ru,0,19,7,1);c=18;n=a;do{i=n;n=kh(n,{l:10,m:0,h:0});j[--c]=Ch(ih({l:48,m:0,h:0},Ah(i,th(n,{l:10,m:0,h:0}))))&_u}while(vh(n,{l:0,m:0,h:0}));d=Ah(Ah(Ah({l:18,m:0,h:0},nh(c)),nh(b)),{l:1,m:0,h:0});if(b==0){h&&(j[--c]=45);return dk(j,c,18-c)}if(b>0&&ph(d,{l:4194298,m:Su,h:Tu})){if(ph(d,{l:0,m:0,h:0})){e=c+Ch(d);for(g=17;g>=e;g--){j[g+1]=j[g]}j[++e]=46;h&&(j[--c]=45);return dk(j,c,18-c+1)}for(f=2;qh(nh(f),ih(uh(d),{l:1,m:0,h:0}));f++){j[--c]=48}j[--c]=46;j[--c]=48;h&&(j[--c]=45);return dk(j,c,18-c)}m=c+1;k=new tk;h&&(k.a+='-',k);if(18-m>=1){ok(k,j[c]);k.a+='.';k.a+=dk(j,c+1,18-c-1)}else{k.a+=dk(j,c,18-c)}k.a+='E';oh(d,{l:0,m:0,h:0})&&(k.a+='+',k);k.a+=''+Dh(d);return k.a}\nfunction dt(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;b=Pj(b,' ','');b=Pj(b,'^([0-9]+[A-Z][a-z]?)$','[$1]');Oj(b,'.*[a-zA-Z][0-9]+-[0-9].*')&&(a.c=true);r=new RegExp('([A-Z][a-z]?\\\\{[0-9.,]*\\\\})');for(t=r.exec(b);t;t=r.exec(b)){h=t[1];p=(v=$s(h),w=Pj(h,'\\\\{.*',''),an(a.a,v)||hn(a.a,v,new Qs(en(a.a,w),v,h)),v);b=b.replace(r,p)}r=new RegExp('(\\\\{[A-Za-z0-9]*\\\\})');for(s=r.exec(b);s;s=r.exec(b)){h=s[1];q=(A=$s(h),B=Pj(h,'[\\\\{\\\\}]',''),an(a.b,A)||hn(a.b,A,new Bt(A,h,B,a.a,a.b)),A);b=b.replace(r,q)}b.indexOf('}')!=-1;g=Qj(b,'\\\\.',0);n=1;o=false;for(e=0,f=g.length;e<f;++e){d=g[e];if(ct(d)){if(o)throw new It(\"Syntax error: 'number.number.'\");n=Oi(d);o=true;continue}u=d.indexOf('/');if(u!=-1){if(o)throw new It(\"Syntax error: 'number.number/number'\");k=u+1;l=d.length;while(ni(Ij(d,k++))){if(k>=l)break}k<l&&--k;n=et(d.substr(0,k));o=true;if(k>=l)continue;else d=Wj(d,k,d.length-k)}j=0;for(;j<d.length;j++){if(!ni(d.charCodeAt(j)))break}if(j>0){m=Oi(d.substr(0,j));d=Wj(d,j,d.length-j);o?(n+=m/yj(10,j)):(n=m)}i=new vt(d,a.a,a.b,n,c);i.f==0&&(a.e=true);i.e&&(a.c=true);Qo(a.d,i);n=1;o=false}}\nfunction Bs(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;t=new mk;s=a.d;s>~~(a.a/2)&&(s=~~(a.a/2));t.a+='##TITLE= '+b+'\\r\\n'+'##JCAMP-DX= 5.00\\r\\n'+'##DATA TYPE= MASS SPECTRUM\\r\\n'+'##DATA CLASS= PEAK TABLE\\r\\n'+'##ORIGIN= Generated spectrum based on ChemCalc www.chemcalc.org\\r\\n'+'##SPECTROMETER/DATA SYSTEM= Based on ChemCalc isotopic distribution calculator\\r\\n'+'##XUNITS= M/Z\\r\\n'+'##YUNITS= RELATIVE ABUNDANCE\\r\\n'+'##NPOINTS=         \\r\\n';e=t.a.length;t.a+='##MAXY= 100\\r\\n##MINY= 0\\r\\n';for(n=Mn(new Nn(d));un(n.a);){m=Rn(n);lk(t,'##$'+m+'='+(m==null?Xm(Dp(d.a,null)):d.c.gb(m))+'\\r\\n')}t.a+='##PEAK TABLE= (XY..XY)\\r\\n';p=0;l=(new Fr(a)).a.W();o=(new Nn(c)).H(Sd(Pe,Ru,7,(new Nn(c)).a.b,0,1));jp(o,0,o.length,(pp(),pp(),op));g=0;q=mv;j=true;f=0;r=false;w='';while(Fn(l.a)&&f<s){++f;h=l.b=Gn(l.a);u=h.T().a;v=h.U().a;v<1.0E-9&&(v=0);if(v!=0&&w.length>0){t.a+=w;++p;w=''}i=true;for(k=g;k<o.length;k++){if(!Fn(l.a)||rj(o[k].a-q)<rj(o[k].a-u)){if(i){t.a+='  $$ ';i=false}else{t.a+=','}lk(t,dn(c,o[k]));++g}else{break}}q=u;if(j){j=false;lk(t,As(u)+', '+As(v*100));++p}else{if(!r||v!=0){t.a+='\\r\\n';lk(t,As(u)+', '+As(v*100));++p}else{w='\\r\\n'+As(u)+', '+As(0)}v==0?(r=true):(r=false)}}t.a+='\\r\\n##END=\\r\\n';t.a=Sj(t.a,0,e-10)+(p+'')+Rj(t.a,e-2);return t}\nfunction Xl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;A=a.e;n=a.d;e=a.a;if(A==0){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:v=new sk;b<0?(v.a+='0E+',v):(v.a+='0E',v);v.a+=-b;return v.a;}}s=n*10+1+7;t=Sd(ie,Ru,0,s+1,7,1);c=s;if(n==1){g=e[0];if(g<0){G=jh(nh(g),{l:Su,m:1023,h:0});do{o=G;G=kh(G,{l:10,m:0,h:0});t[--c]=48+Ch(Ah(o,th(G,{l:10,m:0,h:0})))&_u}while(vh(G,{l:0,m:0,h:0}))}else{G=g;do{o=G;G=~~(G/10);t[--c]=48+(o-G*10)&_u}while(G!=0)}}else{C=Sd(ke,Ru,0,n,7,1);F=n;wk(e,0,C,0,n);H:while(true){w={l:0,m:0,h:0};for(i=F-1;i>=0;i--){D=ih(xh(w,32),jh(nh(C[i]),{l:Su,m:1023,h:0}));q=Vl(D);C[i]=Ch(q);w=nh(Ch(yh(q,32)))}r=Ch(w);p=c;do{t[--c]=48+r%10&_u}while((r=~~(r/10))!=0&&c!=0);d=9-p+c;for(h=0;h<d&&c>0;h++){t[--c]=48}k=F-1;for(;C[k]==0;k--){if(k==0){break H}}F=k+1}while(t[c]==48){++c}}m=A<0;f=s-c-b-1;if(b==0){m&&(t[--c]=45);return dk(t,c,s-c)}if(b>0&&f>=-6){if(f>=0){j=c+f;for(l=s-1;l>=j;l--){t[l+1]=t[l]}t[++j]=46;m&&(t[--c]=45);return dk(t,c,s-c+1)}for(k=2;k<-f+1;k++){t[--c]=48}t[--c]=46;t[--c]=48;m&&(t[--c]=45);return dk(t,c,s-c)}B=c+1;u=new tk;m&&(u.a+='-',u);if(s-B>=1){ok(u,t[c]);u.a+='.';u.a+=dk(t,c+1,s-c-1)}else{u.a+=dk(t,c,s-c)}u.a+='E';f>0&&(u.a+='+',u);u.a+=''+f;return u.a}\nfunction Wb(a,b){var c,d,e,f;Yb(b,a.e);c=a.d[0];d=a.d[1];e=a.d[2];f=a.d[3];c=Zb(c,d,e,f,a.e[0],7,-680876936);f=Zb(f,c,d,e,a.e[1],12,-389564586);e=Zb(e,f,c,d,a.e[2],17,606105819);d=Zb(d,e,f,c,a.e[3],22,-1044525330);c=Zb(c,d,e,f,a.e[4],7,-176418897);f=Zb(f,c,d,e,a.e[5],12,1200080426);e=Zb(e,f,c,d,a.e[6],17,-1473231341);d=Zb(d,e,f,c,a.e[7],22,-45705983);c=Zb(c,d,e,f,a.e[8],7,1770035416);f=Zb(f,c,d,e,a.e[9],12,-1958414417);e=Zb(e,f,c,d,a.e[10],17,-42063);d=Zb(d,e,f,c,a.e[11],22,-1990404162);c=Zb(c,d,e,f,a.e[12],7,1804603682);f=Zb(f,c,d,e,a.e[13],12,-40341101);e=Zb(e,f,c,d,a.e[14],17,-1502002290);d=Zb(d,e,f,c,a.e[15],22,1236535329);c=$b(c,d,e,f,a.e[1],5,-165796510);f=$b(f,c,d,e,a.e[6],9,-1069501632);e=$b(e,f,c,d,a.e[11],14,643717713);d=$b(d,e,f,c,a.e[0],20,-373897302);c=$b(c,d,e,f,a.e[5],5,-701558691);f=$b(f,c,d,e,a.e[10],9,38016083);e=$b(e,f,c,d,a.e[15],14,-660478335);d=$b(d,e,f,c,a.e[4],20,-405537848);c=$b(c,d,e,f,a.e[9],5,568446438);f=$b(f,c,d,e,a.e[14],9,-1019803690);e=$b(e,f,c,d,a.e[3],14,-187363961);d=$b(d,e,f,c,a.e[8],20,1163531501);c=$b(c,d,e,f,a.e[13],5,-1444681467);f=$b(f,c,d,e,a.e[2],9,-51403784);e=$b(e,f,c,d,a.e[7],14,1735328473);d=$b(d,e,f,c,a.e[12],20,-1926607734);c=_b(c,d,e,f,a.e[5],4,-378558);f=_b(f,c,d,e,a.e[8],11,-2022574463);e=_b(e,f,c,d,a.e[11],16,1839030562);d=_b(d,e,f,c,a.e[14],23,-35309556);c=_b(c,d,e,f,a.e[1],4,-1530992060);f=_b(f,c,d,e,a.e[4],11,1272893353);e=_b(e,f,c,d,a.e[7],16,-155497632);d=_b(d,e,f,c,a.e[10],23,-1094730640);c=_b(c,d,e,f,a.e[13],4,681279174);f=_b(f,c,d,e,a.e[0],11,-358537222);e=_b(e,f,c,d,a.e[3],16,-722521979);d=_b(d,e,f,c,a.e[6],23,76029189);c=_b(c,d,e,f,a.e[9],4,-640364487);f=_b(f,c,d,e,a.e[12],11,-421815835);e=_b(e,f,c,d,a.e[15],16,530742520);d=_b(d,e,f,c,a.e[2],23,-995338651);c=ac(c,d,e,f,a.e[0],6,-198630844);f=ac(f,c,d,e,a.e[7],10,1126891415);e=ac(e,f,c,d,a.e[14],15,-1416354905);d=ac(d,e,f,c,a.e[5],21,-57434055);c=ac(c,d,e,f,a.e[12],6,1700485571);f=ac(f,c,d,e,a.e[3],10,-1894986606);e=ac(e,f,c,d,a.e[10],15,-1051523);d=ac(d,e,f,c,a.e[1],21,-2054922799);c=ac(c,d,e,f,a.e[8],6,1873313359);f=ac(f,c,d,e,a.e[15],10,-30611744);e=ac(e,f,c,d,a.e[6],15,-1560198380);d=ac(d,e,f,c,a.e[13],21,1309151649);c=ac(c,d,e,f,a.e[4],6,-145523070);f=ac(f,c,d,e,a.e[11],10,-1120210379);e=ac(e,f,c,d,a.e[2],15,718787259);d=ac(d,e,f,c,a.e[9],21,-343485551);a.d[0]=~~(a.d[0]+c);a.d[1]=~~(a.d[1]+d);a.d[2]=~~(a.d[2]+e);a.d[3]=~~(a.d[3]+f)}\nfunction yt(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;c=Tj(c);c=Pj(c,'[=]','');if(c.indexOf('.')!=-1)throw new tb('Error: the formula \"'+c+'\"contains dots (error in parsing)');if(Jj(c,'')){return}if(ni(c.charCodeAt(0))){throw new tb('Error: the formula starts with a number')}c.charCodeAt(0)==120&&(c='X'+Sj(c,1,c.length));g=new dr;k=1;j=1;m=1;l=1;r=1;q=1;w=c.length-1;while(w>=0){if(ni(c.charCodeAt(w))){f=w;while(w>0&&ni(c.charCodeAt(w)))--w;e=c.substr(w+1,f+1-(w+1));u=Pi(e);if(c.charCodeAt(w)==45){--w;if(w<0)throw new It(\"Syntax error: the formula starts with '-': \"+c);f=w;while(w>0&&ni(c.charCodeAt(w)))--w;w==0&&ni(c.charCodeAt(0))&&--w;o=c.substr(w+1,f+1-(w+1));if(o.length==0){u=Pi('-'+e);v=u}else{v=Pi(o)}}else v=u;if(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l;l*=u;m*=v}else{k=v;j=u}}else{if(c.charCodeAt(w)==93){s=w;--w;if(w<=1)throw new It('Syntax error: bad isotope syntax');if(!oi(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');while(w>0&&qi(c.charCodeAt(w)))--w;if(!ri(c.charCodeAt(w)))throw new It('Syntax error: bad symbol (must start with uppercase)');t=c.substr(w,s-w);--w;if(w<0)throw new It('Syntax error: bad isotope syntax');if(!ni(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');f=w;while(w>0&&c.charCodeAt(w)!=91)--w;p=c.substr(w+1,f+1-(w+1));try{n=Pi(p)}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad isotope number '+p)}else throw Gg(a)}if(c.charCodeAt(w)!=91)throw new It(\"Isotope syntax error: no opening '['\");jt(b,t,k*m,j*l,n,d);j=1;k=1;if(w>0)--w;else return}else{if(oi(c.charCodeAt(w))){s=w;while(w>0&&qi(c.charCodeAt(w)))--w;if(s==0&&w==0&&c.charCodeAt(0)==110){b.f=0;return}if(!ri(c.charCodeAt(w)))throw new It('Syntax error: the symbol must start with uppercase');t=c.substr(w,s+1-w);if(Jj(t,'X')&&w==0){b.f=0;return}--w;jt(b,t,k*m,j*l,0,d);j=1;k=1}else{while(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l}if(w<0)break;while(c.charCodeAt(w)==40){l=q;m=r;if(g.a.b.length==0){q=1;r=1}else{q=br(g).a;r=br(g).a}--w;if(w<0)break}if(w<0)break;if(c.charCodeAt(w)==125){i=w;while(w>0&&c.charCodeAt(w)!=123)--w;if(c.charCodeAt(w)!=123)throw new It('Syntax error (combinatorial): no opening brace');zt(b,c.substr(w+1,i-(w+1)),k*m,j*l);--w}}}}if(w<0)break;h=c.charCodeAt(w);if(h==123)throw new It('Syntax error (combinatorial): no closing brace');if(h==91)throw new It('Syntax error (isotope): no closing bracket');if(!(null!=String.fromCharCode(h).match(/[A-Z\\d]/i))&&h!=40&&h!=91&&h!=123&&h!=93&&h!=41&&h!=125)throw new It(\"Syntax error: unrecognized character: '\"+Zd(h)+\"'\")}}\nfunction wu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N;u=new Mu;if(!b){Ju(u,'error',new Id('options is null'));return u}J=b.c.gb('referenceVersion');J!=null&&!Jj(J,'')&&(d=(Ht(),Ht(),Ft));C=b.c.gb('mf');r=b.c.gb('isotopomers');M=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;n=new Ri(0.001);try{n=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}L=new Ri(1.0E-5);try{L=new Ri(Oi(b.c.gb('threshold')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}p=0;try{p=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}h=null;try{h=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}t=0;!(b.c.gb('joiningAlgorithm')===undefined)&&Jj(b.c.gb('joiningAlgorithm').toLowerCase(),'center')&&(t=Jt);w=new Mu;C==null?Ju(w,'mf',(cd(),cd(),bd)):Ju(w,'mf',new Id(C));Ju(w,'threshold',new hd(L.a));Ju(w,'fwhm',new hd(n.a));Ju(w,'typedResult',(Xc(),M?Wc:Vc));r==null?Ju(w,'isotopomers',(cd(),cd(),bd)):Ju(w,'isotopomers',new Id(r));p>0&&Ju(w,'gaussianWidth',new hd(p));J==null?Ju(w,'referenceVersion',(cd(),cd(),bd)):Ju(w,'referenceVersion',new Id(J));Ju(u,'options',w.a);if(C!=null){C=Tj(C);Jj(C,'')&&(C=null)}if(C!=null){try{k=new gt(C,d,c);if(k.d.b.length>0){if(k.e){Ju(u,'error',new Id('mass not defined'))}else{if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',ft(k));Ju(u,'mf',D.a)}else{Lu(u,'mf',ft(k))}Ju(u,'mw',new hd(_s(k)));Ju(u,'em',new hd(at(k)));Ju(u,'nominalMass',new hd(bt(k)));if(r!=null&&!Jj(r,'')){K=new Qt(d,k,n.a,L.a);K.f=t;Lt(K);Mt(K);if(p>0){o=mu(p);Kt(K,o,n.a)}Ju(w,'numberLines',new hd(K.e.c.d));if(r.indexOf('jcamp')>-1){if(M){s=new Mu;Ju(s,'type',new Id('jcamp'));Lu(s,'value',Nt(K).a);Ju(u,'jcamp',s.a)}else{Lu(u,'jcamp',Nt(K).a)}}if(r.indexOf('xy')>-1){if(M){N=new Mu;Ju(N,'type',new Id('xy'));Lu(N,'value',Ot(K).a);Ju(u,'xy',N.a)}else{Lu(u,'xy',Ot(K).a)}}if(r.indexOf('array')>-1&&r.indexOf('arrayX')==-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'spectrum',v.a)}if(r.indexOf('arrayXXYY')>-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'arrayXXYY',v.a)}if(r.indexOf('arrayXYXY')>-1){e=Pt(K);Ju(u,'arrayXYXY',(new Iu(e)).a)}}I=new Gu;Ju(u,'parts',I.a);for(m=new In(k.d);m.a<m.c.G();){l=(Dc(m.a<m.c.G()),m.c.R(m.b=m.a++));H=new Mu;Fu(I,H.a);if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',tt(l));Ju(H,'mf',D.a)}else{Lu(H,'mf',tt(l))}Ju(H,'mw',new hd(nt(l)));Ju(H,'em',new hd(ot(l)));l.b.length>0&&Lu(H,'comment',l.b);Ku(H,gu(l,h));G=ot(l)-l.a*nv;if(l.a!=0){Ju(H,'charge',new hd(l.a));G=G/sj(l.a)}Ju(H,'msem',new hd(G));lt(l);i=new Gu;for(g=Fo(new Go(l.g));Fn(g.a.a);){f=Ko(g);j=new Mu;Lu(j,'element',f.i);Ju(j,'number',new hd(fs(f)));Ju(j,'percentage',new hd(f.g));Fu(i,j.a)}Ju(H,'ea',i.a)}}}else{Ju(u,'error',new Id('there is no part in the molecule'))}}catch(a){a=Hg(a);if(_d(a,4)){F=a;Lu(u,'error',F.f)}else throw Gg(a)}}else{Ju(u,'error',new Id('parameter mf not specified'))}return u}\nfunction zu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb;F=0.5;Q=0;K=50;I=1000;s=false;bb=false;R=false;v=b.c.gb('jcampLink')!=null&&(ei(),Kj('true',b.c.gb('jcampLink'))?di:ci).a;u=b.c.gb('jcampBaseURL')==null?'http://www.chemcalc.org/service/jcamp/':b.c.gb('jcampBaseURL');N='C0-100H0-202N0-10O0-10F0-3Cl0-3Br0-1';Y=mv;X=new $r;$=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;q=new Ri(0.001);try{q=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}r=0;try{r=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}A=new Mu;if(!b){Ju(A,'error',new Id('options is null'));return A}U=b.c.gb('referenceVersion');U!=null&&!Jj(U,'')&&(d=(Ht(),Ht(),Ft));l=null;try{l=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Q=Oi(b.c.gb('minUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{K=Oi(b.c.gb('maxUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}if(!(b.c.gb('integerUnsaturation')===undefined)){try{s=(ei(),Kj('true',b.c.gb('integerUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('useUnsaturation')===undefined)){try{bb=(ei(),Kj('true',b.c.gb('useUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('numberOfResultsOnly')===undefined)){try{R=(ei(),Kj('true',b.c.gb('numberOfResultsOnly')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}try{I=Oi(b.c.gb('maxNumberRows'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Y=Oi(b.c.gb('monoisotopicMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{F=Oi(b.c.gb('massRange'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}P=Y-F;H=Y+F;try{H=Oi(b.c.gb('maxMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}!(b.c.gb('mfRange')===undefined)&&b.c.gb('mfRange')!=null&&b.c.gb('mfRange').length>0&&(N=b.c.gb('mfRange'));if(Y<0){Ju(A,'error',new Id('monoisotopicMass must be specified and larger than 0'));return A}B=new Mu;Ju(B,'minUnsaturation',new hd(Q));Ju(B,'maxUnsaturation',new hd(K));Ju(B,'integerUnsaturation',(Xc(),s?Wc:Vc));Ju(B,'useUnsaturation',bb?Wc:Vc);Ju(B,'numberOfResultsOnly',R?Wc:Vc);Ju(B,'minMass',new hd(Bh(mh(Math.round(P*dv)))/dv));Ju(B,'maxMass',new hd(Bh(mh(Math.round(H*dv)))/dv));Ju(B,'massRange',new hd(Bh(mh(Math.round(F*dv)))/dv));N==null?Ju(B,'mfRange',(cd(),cd(),bd)):Ju(B,'mfRange',new Id(N));Ju(B,'monoisotopicMass',new hd(Bh(mh(Math.round(Y*dv)))/dv));U==null?Ju(B,'referenceVersion',(cd(),cd(),bd)):Ju(B,'referenceVersion',new Id(U));Ju(B,'jcampLink',v?Wc:Vc);u==null?Ju(B,'jcampBaseURL',(cd(),cd(),bd)):Ju(B,'jcampBaseURL',new Id(u));Ju(B,'typedResult',$?Wc:Vc);Ju(A,'options',B.a);t={l:0,m:0,h:0};S={l:0,m:0,h:0};f=0;g=0;try{e=new ht(N,d,c,false);if(e.d.b.length!=1){Ju(A,'error',new Id('Number of parts not equal to 1'));return A}f=Ro(e.d,0).a;g=f<0?-f:f;if(f!=0){Y=Y*g+f*nv;P=P*g+f*nv;H=H*g+f*nv;F=F*g}T=Bu(Ro(e.d,0),Y+F);if(T){j=Sd(je,av,0,T.a.b.length,7,1);O=Sd(je,av,0,T.a.b.length,7,1);G=Sd(je,av,0,T.a.b.length,7,1);xu(T,O,G);Ju(A,'bruteForceIteration',new hd(Oi(Xl(yu(T),0))));Z=false;k=0;J=T.a.b.length;Ws((Vq(0,T.a.b.length),Ro(T.a,0)),0,Y,O[0],G[0],F);while(!Z){if(oh(t,{l:3511296,m:476,h:0})){throw new It('Iteration number is over the current maximum of: 2000000000')}if(j[k]>=P&&j[k]<=H){ab=hu(T,l);if(!bb||!ab||ab.a>=Q&&ab.a<=K&&(!s||ab.a==ge(ab.a))){S=ih(S,{l:1,m:0,h:0});if(!R){if(X.g.d>=I){if(rj(Ao(fr(X.g)).a)>rj(j[k]-Y)){Wm(vo(X.g));Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}else{Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}}}while(k<J&&k>=0){t=ih(t,{l:1,m:0,h:0});i=(Vq(k,T.a.b.length),Ro(T.a,k));if(i.b<i.c){++i.b;k==0?(j[0]=i.a.e*i.b):(j[k]=j[k-1]+i.a.e*i.b);if(k<J-1){++k;Ws((Vq(k,T.a.b.length),Ro(T.a,k)),j[k-1],Y,O[k],G[k],F)}else{break}}else{--k}}k<0&&(Z=true)}}Ju(A,'realIteration',new hd(Bh(Ah(t,{l:1,m:0,h:0}))));Ju(A,'numberResults',new hd(Bh(S)));Ju(A,'charge',new hd(f))}catch(a){a=Hg(a);if(_d(a,4)){m=a;Lu(A,'error',ob(m)+'\\r'+(ti(Dg),Dg.k+'@'+nj(Nb(B),16)))}else throw Gg(a)}D=new Gu;h='';f!=0&&(f>0?(h='(+'+f+')'):(h='('+f+')'));for(W=Fo(new Go(X.g));Fn(W.a.a);){V=Ko(W);C=new Mu;if(f==0){p=Bh(mh(zj(V.a*dv)))/dv;o=Bh(mh(zj(V.c*dv)))/dv}else{p=Bh(mh(zj(V.a/g*dv)))/dv;o=Bh(mh(zj((V.c-f*nv)/g*dv)))/dv}Ju(C,'error',new hd(p));Ju(C,'em',new hd(o));Ju(C,'ppm',new hd(Bh(mh(Math.round(p/o*dv)))/dv*cv));Lu(C,'info',V.b+h);try{w=u+V.b+'&fwhm='+q;r>0&&(w+='&gaussianWidth='+r);if($){L=new Mu;Ju(L,'type',new Id('mf'));Lu(L,'value',ft(new gt(V.b+h,d,c)));Ju(C,'mf',L.a);if(v){M=new Mu;Ju(M,'type',new Id('jcamp'));w==null?Ju(M,'url',(cd(),cd(),bd)):Ju(M,'url',new Id(w));Ju(C,'jcamp',M.a)}}else{Lu(C,'mf',ft(new gt(V.b+h,d,c)));v&&(w==null?Ju(C,'jcampURL',(cd(),cd(),bd)):Ju(C,'jcampURL',new Id(w)))}}catch(a){a=Hg(a);if(_d(a,4)){n=a;Lu(C,'mf',ob(n))}else throw Gg(a)}try{Ju(C,'unsat',new hd(Bh(mh(zj(V.d.a*dv)))/dv))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}Fu(D,C.a)}Ju(A,'results',D.a);return A}\nfunction Ht(){Ht=Lg;var b,c,d,e,f,g,h,i,j,k,l,m;Ft=new zp;e=new zp;k=Qj('1\\tH\\tHydrogen\\t1.0079407538967635\\n2\\tHe\\tHelium\\t4.002601932146926\\n3\\tLi\\tLithium\\t6.940037632200444\\n4\\tBe\\tBeryllium\\t9.01218224\\n5\\tB\\tBoron\\t10.8110281284\\n6\\tC\\tCarbon\\t12.010735896764565\\n7\\tN\\tNitrogen\\t14.006703211872013\\n8\\tO\\tOxygen\\t15.99940492727602\\n9\\tF\\tFluorine\\t18.998403227\\n10\\tNe\\tNeon\\t20.180046379828486\\n11\\tNa\\tSodium\\t22.989769280929\\n12\\tMg\\tMagnesium\\t24.305051612756515\\n13\\tAl\\tAluminium\\t26.9815386312\\n14\\tSi\\tSilicon\\t28.085498706539465\\n15\\tP\\tPhosphorus\\t30.973761632000002\\n16\\tS\\tSulfur\\t32.0647872364133\\n17\\tCl\\tChlorine\\t35.4529375824264\\n18\\tAr\\tArgon\\t39.947676713373\\n19\\tK\\tPotassium\\t39.0983011264695\\n20\\tCa\\tCalcium\\t40.078022655762524\\n21\\tSc\\tScandium\\t44.95591199\\n22\\tTi\\tTitanium\\t47.86674933516\\n23\\tV\\tVanadium\\t50.9414675085\\n24\\tCr\\tChromium\\t51.99613314762095\\n25\\tMn\\tManganese\\t54.93804517\\n26\\tFe\\tIron\\t55.8451456935552\\n27\\tCo\\tCobalt\\t58.93319506999999\\n28\\tNi\\tNickel\\t58.69335163208455\\n29\\tCu\\tCopper\\t63.546039795084994\\n30\\tZn\\tZinc\\t65.40872812701322\\n31\\tGa\\tGallium\\t69.72306563428617\\n32\\tGe\\tGermanium\\t72.63984326005341\\n33\\tAs\\tArsenic\\t74.92159652\\n34\\tSe\\tSelenium\\t78.9593882599375\\n35\\tBr\\tBromine\\t79.9035279923569\\n36\\tKr\\tKrypton\\t83.7980066431168\\n37\\tRb\\tRubidium\\t85.46766359470149\\n38\\tSr\\tStrontium\\t87.6166441185128\\n39\\tY\\tYttrium\\t88.905848327\\n40\\tZr\\tZirconium\\t91.22364763203382\\n41\\tNb\\tNiobium\\t92.90637812599999\\n42\\tMo\\tMolybdenum\\t95.93759212713759\\n43\\tTc\\tTechnetium\\t98.0\\n44\\tRu\\tRuthenium\\t101.0649455723334\\n45\\tRh\\tRhodium\\t102.90550430000002\\n46\\tPd\\tPalladium\\t106.41532914746399\\n47\\tAg\\tSilver\\t107.868151248228\\n48\\tCd\\tCadmium\\t112.41155226203729\\n49\\tIn\\tIndium\\t114.81808621342\\n50\\tSn\\tTin\\t118.71010849931781\\n51\\tSb\\tAntimony\\t121.75978615571421\\n52\\tTe\\tTellurium\\t127.60312786587177\\n53\\tI\\tIodine\\t126.9044734\\n54\\tXe\\tXenon\\t131.29276070673757\\n55\\tCs\\tCaesium\\t132.90545193324\\n56\\tBa\\tBarium\\t137.3268918829641\\n57\\tLa\\tLanthanum\\t138.90545400916656\\n58\\tCe\\tCerium\\t140.11572627079408\\n59\\tPr\\tPraseodymium\\t140.907652826\\n60\\tNd\\tNeodymium\\t144.236131428275\\n61\\tPm\\tPromethium\\t145.0\\n62\\tSm\\tSamarium\\t150.3663485610868\\n63\\tEu\\tEuropium\\t151.96437050019\\n64\\tGd\\tGadolinium\\t157.25212224243995\\n65\\tTb\\tTerbium\\t158.925346827\\n66\\tDy\\tDysprosium\\t162.49946572489424\\n67\\tHo\\tHolmium\\t164.930322127\\n68\\tEr\\tErbium\\t167.25907628559352\\n69\\tTm\\tThulium\\t168.934213327\\n70\\tYb\\tYtterbium\\t173.0376956147714\\n71\\tLu\\tLutetium\\t174.96672140854997\\n72\\tHf\\tHafnium\\t178.4849721651158\\n73\\tTa\\tTantalum\\t180.9478757552806\\n74\\tW\\tTungsten\\t183.8417781725967\\n75\\tRe\\tRhenium\\t186.206706624852\\n76\\tOs\\tOsmium\\t190.2248630659075\\n77\\tIr\\tIridium\\t192.2160564328\\n78\\tPt\\tPlatinum\\t195.077807984934\\n79\\tAu\\tGold\\t196.96656876\\n80\\tHg\\tMercury\\t200.599166666798\\n81\\tTl\\tThallium\\t204.38341252384\\n82\\tPb\\tLead\\t207.21690767600003\\n83\\tBi\\tBismuth\\t208.98039871599997\\n84\\tPo\\tPolonium\\t209.0\\n85\\tAt\\tAstatine\\t210.0\\n86\\tRn\\tRadon\\t222.0\\n87\\tFr\\tFrancium\\t223.0\\n88\\tRa\\tRadium\\t226.0\\n89\\tAc\\tActinium\\t227.0\\n90\\tTh\\tThorium\\t232.038055321\\n91\\tPa\\tProtactinium\\t231.035884024\\n92\\tU\\tUranium\\t238.02891028165737\\n93\\tNp\\tNeptunium\\t237.0\\n94\\tPu\\tPlutonium\\t244.0\\n95\\tAm\\tAmericium\\t0.0\\n96\\tCm\\tCurium\\t0.0\\n97\\tBk\\tBerkelium\\t0.0\\n98\\tCf\\tCalifornium\\t0.0\\n99\\tEs\\tEinsteinium\\t0.0\\n100\\tFm\\tFermium\\t0.0\\n101\\tMd\\tMendelevium\\t0.0\\n102\\tNo\\tNobelium\\t0.0\\n103\\tLr\\tLawrencium\\t0.0\\n104\\tRf\\tRutherfordium\\t0.0\\n105\\tDb\\tDubnium\\t0.0\\n106\\tSg\\tSeaborgium\\t0.0\\n107\\tBh\\tBohrium\\t0.0\\n108\\tHs\\tHassium\\t0.0\\n109\\tMt\\tMeitnerium\\t0.0\\n110\\tDs\\tDarmstadtium\\t0.0\\n111\\tRg\\tRoentgenium\\t0.0\\n112\\tCn\\tCopernicium\\t0.0\\n113\\tUut\\tUnuntrium\\t0.0\\n114\\tUuq\\t\\t0.0\\n115\\tUup\\tUnunpentium\\t0.0\\n116\\tUuh\\t\\t0.0\\n117\\tUus\\tUnunseptium\\t0.0','[\\r\\n]+',0);for(g=0;g<k.length;g++){m=Qj(k[g],'\\t',0);c=new Ps(Oi(m[3]),Tj(m[1]),m[2],Pi(m[0]));hn(Ft,c.g,c);hn(e,m[0],c)}k=Qj('1\\t1.007825032071\\t99.9885\\t1\\n2\\t2.01410177784\\t0.0115\\t1\\n3\\t3.016049277725\\t0\\t1\\n4\\t3.016029319126\\t0.00013\\t2\\n5\\t4.002603254156\\t99.99987\\t2\\n6\\t6.01512279516\\t7.59\\t3\\n7\\t7.016004558\\t92.41\\t3\\n8\\t9.01218224\\t100\\t4\\n9\\t10.01293704\\t19.9\\t5\\n10\\t11.00930544\\t80.1\\t5\\n11\\t12.0\\t98.93\\t6\\n12\\t13.00335483781\\t1.07\\t6\\n13\\t14.0032419894\\t0\\t6\\n14\\t14.00307400486\\t99.636\\t7\\n15\\t15.00010889827\\t0.364\\t7\\n17\\t16.9991317012\\t0.038\\t8\\n16\\t15.9949146195616\\t99.757\\t8\\n18\\t17.99916107\\t0.205\\t8\\n19\\t18.998403227\\t100\\t9\\n21\\t20.993846684\\t0.27\\t10\\n20\\t19.992440175419\\t90.48\\t10\\n22\\t21.99138511419\\t9.25\\t10\\n23\\t22.989769280929\\t100\\t11\\n25\\t24.985836923\\t10\\t12\\n24\\t23.98504170014\\t78.99\\t12\\n26\\t25.9825929293\\t11.01\\t12\\n27\\t26.9815386312\\t100\\t13\\n29\\t28.97649470022\\t4.685\\t14\\n28\\t27.976926532519\\t92.223\\t14\\n30\\t29.973770173\\t3.092\\t14\\n31\\t30.973761632\\t100\\t15\\n34\\t33.9678669012\\t4.25\\t16\\n35\\t35.967080762\\t0.01\\t16\\n32\\t31.9720710015\\t94.99\\t16\\n33\\t32.9714587615\\t0.75\\t16\\n36\\t34.968852684\\t75.76\\t17\\n37\\t36.965902595\\t24.24\\t17\\n38\\t35.96754510629\\t0.3365\\t18\\n39\\t37.96273244\\t0.0632\\t18\\n40\\t39.962383122529\\t99.6003\\t18\\n42\\t39.9639984821\\t0.0117\\t19\\n43\\t40.9618257621\\t6.7302\\t19\\n41\\t38.963706682\\t93.2581\\t19\\n49\\t47.9525344\\t0.187\\t20\\n48\\t45.953692624\\t0.004\\t20\\n46\\t42.95876663\\t0.135\\t20\\n47\\t43.95548184\\t2.086\\t20\\n44\\t39.9625909822\\t96.941\\t20\\n45\\t41.9586180127\\t0.647\\t20\\n50\\t44.95591199\\t100\\t21\\n51\\t45.95263169\\t8.25\\t22\\n55\\t49.94479129\\t5.18\\t22\\n54\\t48.94787009\\t5.41\\t22\\n53\\t47.94794639\\t73.72\\t22\\n52\\t46.95176319\\t7.44\\t22\\n57\\t50.943959511\\t99.75\\t23\\n56\\t49.947158511\\t0.25\\t23\\n59\\t51.94050758\\t83.789\\t24\\n58\\t49.946044211\\t4.345\\t24\\n61\\t53.93888048\\t2.365\\t24\\n60\\t52.94064948\\t9.501\\t24\\n62\\t54.93804517\\t100\\t25\\n64\\t55.93493757\\t91.754\\t26\\n65\\t56.93539407\\t2.119\\t26\\n66\\t57.93327568\\t0.282\\t26\\n63\\t53.93961057\\t5.845\\t26\\n67\\t58.93319507\\t100\\t27\\n68\\t57.93534297\\t68.0769\\t28\\n69\\t59.93078647\\t26.2231\\t28\\n70\\t60.93105607\\t1.1399\\t28\\n71\\t61.92834516\\t3.6345\\t28\\n72\\t63.92796607\\t0.9256\\t28\\n73\\t62.92959756\\t69.15\\t29\\n74\\t64.92778957\\t30.85\\t29\\n76\\t65.92603341\\t27.975\\t30\\n77\\t66.92712731\\t4.102\\t30\\n78\\t67.92484421\\t19.024\\t30\\n79\\t69.925319321\\t0.631\\t30\\n75\\t63.92914227\\t48.268\\t30\\n81\\t70.924701311\\t39.892\\t31\\n80\\t68.925573613\\t60.108\\t31\\n85\\t73.921177818\\t36.72\\t32\\n84\\t72.923458918\\t7.76\\t32\\n86\\t75.921402618\\t7.83\\t32\\n83\\t71.922075818\\t27.31\\t32\\n82\\t69.924247411\\t20.38\\t32\\n87\\t74.92159652\\t100\\t33\\n93\\t81.916699422\\t8.73\\t34\\n92\\t79.916521321\\t49.61\\t34\\n89\\t75.919213618\\t9.37\\t34\\n88\\t73.922476418\\t0.89\\t34\\n91\\t77.917309118\\t23.77\\t34\\n90\\t76.919914018\\t7.63\\t34\\n95\\t80.916290621\\t49.31\\t35\\n94\\t78.918337122\\t50.69\\t35\\n100\\t83.9115073\\t56.987\\t36\\n101\\t85.9106107311\\t17.279\\t36\\n98\\t81.913483619\\t11.593\\t36\\n99\\t82.9141363\\t11.5\\t36\\n96\\t77.920364812\\t0.355\\t36\\n97\\t79.916379016\\t2.286\\t36\\n102\\t84.91178973812\\t72.17\\t37\\n103\\t86.90918052713\\t27.83\\t37\\n106\\t86.908877112\\t7\\t38\\n107\\t87.905612112\\t82.58\\t38\\n104\\t83.9134253\\t0.56\\t38\\n105\\t85.909260212\\t9.86\\t38\\n108\\t88.905848327\\t100\\t39\\n113\\t95.90827343\\t2.8\\t40\\n112\\t93.906315226\\t17.38\\t40\\n110\\t90.905645825\\t11.22\\t40\\n111\\t91.905040825\\t17.15\\t40\\n109\\t89.904704425\\t51.45\\t40\\n114\\t92.906378126\\t100\\t41\\n119\\t96.906021521\\t9.56\\t42\\n118\\t95.904679521\\t16.68\\t42\\n117\\t94.905842121\\t15.9\\t42\\n116\\t93.905088321\\t9.23\\t42\\n115\\t91.9068114\\t14.77\\t42\\n121\\t99.9074776\\t9.67\\t42\\n120\\t97.905408221\\t24.19\\t42\\n124\\t98.906254721\\t0\\t43\\n123\\t97.9072164\\t0\\t43\\n122\\t96.9063655\\t0\\t43\\n129\\t100.905582122\\t17.06\\t44\\n127\\t98.905939322\\t12.76\\t44\\n128\\t99.904219522\\t12.6\\t44\\n126\\t97.9052877\\t1.87\\t44\\n131\\t103.9054333\\t18.62\\t44\\n125\\t95.9075988\\t5.54\\t44\\n130\\t101.904349322\\t31.55\\t44\\n132\\t102.9055043\\t100\\t45\\n137\\t107.9038924\\t26.46\\t46\\n136\\t105.9034864\\t27.33\\t46\\n138\\t109.90515312\\t11.72\\t46\\n133\\t101.9056093\\t1.02\\t46\\n135\\t104.9050854\\t22.33\\t46\\n134\\t103.9040364\\t11.14\\t46\\n139\\t106.9050975\\t51.839\\t47\\n140\\t108.9047523\\t48.161\\t47\\n141\\t105.9064596\\t1.25\\t48\\n143\\t109.903002129\\t12.49\\t48\\n142\\t107.9041846\\t0.89\\t48\\n144\\t110.904178129\\t12.8\\t48\\n145\\t111.902757829\\t24.13\\t48\\n146\\t112.904401729\\t12.22\\t48\\n147\\t113.903358529\\t28.73\\t48\\n148\\t115.9047563\\t7.49\\t48\\n149\\t112.9040583\\t4.29\\t49\\n150\\t114.9038785\\t95.71\\t49\\n152\\t113.9027793\\t0.66\\t50\\n153\\t114.9033423\\t0.34\\t50\\n154\\t115.9017413\\t14.54\\t50\\n155\\t116.9029523\\t7.68\\t50\\n156\\t117.9016033\\t24.22\\t50\\n157\\t118.9033083\\t8.59\\t50\\n158\\t119.902194727\\t32.58\\t50\\n159\\t121.903439029\\t4.63\\t50\\n160\\t123.905273915\\t5.79\\t50\\n151\\t111.9048185\\t0.97\\t50\\n162\\t122.904214022\\t42.79\\t51\\n161\\t120.903815724\\t57.21\\t51\\n170\\t129.906224421\\t34.08\\t52\\n169\\t127.904463119\\t31.74\\t52\\n168\\t125.903311716\\t18.84\\t52\\n163\\t119.9040201\\t0.09\\t52\\n167\\t124.904430716\\t7.07\\t52\\n166\\t123.902817916\\t4.74\\t52\\n165\\t122.904270016\\t0.89\\t52\\n164\\t121.903043916\\t2.55\\t52\\n171\\t126.9044734\\t100\\t53\\n175\\t128.90477948\\t26.4006\\t54\\n174\\t127.903531315\\t1.9102\\t54\\n173\\t125.9042747\\t0.089\\t54\\n172\\t123.90589302\\t0.0952\\t54\\n178\\t131.90415351\\t26.9086\\t54\\n179\\t133.90539459\\t10.4357\\t54\\n176\\t129.90350808\\t4.071\\t54\\n177\\t130.90508241\\t21.2324\\t54\\n180\\t135.9072198\\t8.8573\\t54\\n181\\t132.90545193324\\t100\\t55\\n186\\t135.90457594\\t7.854\\t56\\n187\\t136.90582745\\t11.232\\t56\\n184\\t133.90450844\\t2.417\\t56\\n185\\t134.90568864\\t6.592\\t56\\n188\\t137.90524725\\t71.698\\t56\\n182\\t129.90632083\\t0.106\\t56\\n183\\t131.905061311\\t0.101\\t56\\n190\\t138.906353326\\t99.91\\t57\\n189\\t137.9071124\\t0.09\\t57\\n191\\t135.90717214\\t0.185\\t58\\n193\\t139.905438726\\t88.45\\t58\\n192\\t137.90599111\\t0.251\\t58\\n194\\t141.9092443\\t11.114\\t58\\n195\\t140.907652826\\t100\\t59\\n201\\t147.9168933\\t5.7\\t60\\n200\\t145.913116925\\t17.2\\t60\\n202\\t149.9208913\\t5.6\\t60\\n197\\t142.909814325\\t12.2\\t60\\n196\\t141.907723325\\t27.2\\t60\\n199\\t144.912573625\\t8.3\\t60\\n198\\t143.910087325\\t23.8\\t60\\n204\\t146.915138526\\t0\\t61\\n203\\t144.9127493\\t0\\t61\\n205\\t143.9119993\\t3.07\\t62\\n207\\t147.914822726\\t11.24\\t62\\n206\\t146.914897926\\t14.99\\t62\\n208\\t148.917184726\\t13.82\\t62\\n209\\t149.917275526\\t7.38\\t62\\n210\\t151.919732427\\t26.75\\t62\\n211\\t153.922209327\\t22.75\\t62\\n212\\t150.919850226\\t47.81\\t63\\n213\\t152.921230326\\t52.19\\t63\\n220\\t159.927054127\\t21.86\\t64\\n216\\t154.922622027\\t14.8\\t64\\n217\\t155.922122727\\t20.47\\t64\\n218\\t156.923960127\\t15.65\\t64\\n219\\t157.924103927\\t24.84\\t64\\n214\\t151.919791027\\t0.2\\t64\\n215\\t153.920865627\\t2.18\\t64\\n221\\t158.925346827\\t100\\t65\\n222\\t155.9242837\\t0.056\\t66\\n223\\t157.9244094\\t0.095\\t66\\n228\\t163.929174827\\t28.26\\t66\\n227\\t162.928731227\\t24.896\\t66\\n226\\t161.926798427\\t25.475\\t66\\n225\\t160.926933427\\t18.889\\t66\\n224\\t159.925197527\\t2.329\\t66\\n229\\t164.930322127\\t100\\t67\\n235\\t169.93546433\\t14.91\\t68\\n234\\t167.932370227\\t26.978\\t68\\n233\\t166.932048227\\t22.869\\t68\\n232\\t165.930293127\\t33.503\\t68\\n231\\t163.9292003\\t1.601\\t68\\n230\\t161.9287784\\t0.139\\t68\\n236\\t168.934213327\\t100\\t69\\n239\\t170.936325826\\t14.28\\t70\\n238\\t169.934761826\\t3.04\\t70\\n237\\t167.9338975\\t0.13\\t70\\n242\\t173.938862126\\t31.83\\t70\\n243\\t175.942571728\\t12.76\\t70\\n240\\t171.936381526\\t21.83\\t70\\n241\\t172.938210826\\t16.13\\t70\\n244\\t174.940771823\\t97.41\\t71\\n245\\t175.942686323\\t2.59\\t71\\n250\\t178.945816123\\t13.62\\t72\\n251\\t179.946550023\\t35.08\\t72\\n248\\t176.943220723\\t18.6\\t72\\n249\\t177.943698823\\t27.28\\t72\\n246\\t173.9400463\\t0.16\\t72\\n247\\t175.941408624\\t5.26\\t72\\n252\\t179.947464824\\t0.012\\t73\\n253\\t180.947995819\\t99.988\\t73\\n258\\t185.954364119\\t28.43\\t74\\n254\\t179.9467044\\t0.12\\t74\\n255\\t181.94820429\\t26.5\\t74\\n256\\t182.95022309\\t14.31\\t74\\n257\\t183.95093129\\t30.64\\t74\\n259\\t184.952955013\\t37.4\\t75\\n260\\t186.955753115\\t62.6\\t75\\n262\\t185.953838215\\t1.59\\t76\\n263\\t186.955750515\\t1.96\\t76\\n261\\t183.952489114\\t0.02\\t76\\n266\\t189.958447016\\t26.26\\t76\\n267\\t191.961480727\\t40.78\\t76\\n264\\t187.955838215\\t13.24\\t76\\n265\\t188.958147516\\t16.15\\t76\\n268\\t190.960594018\\t37.3\\t77\\n269\\t192.962926418\\t62.7\\t77\\n275\\t197.9678933\\t7.163\\t78\\n274\\t195.96495159\\t25.242\\t78\\n273\\t194.96479119\\t33.832\\t78\\n272\\t193.96268039\\t32.967\\t78\\n270\\t189.9599326\\t0.014\\t78\\n271\\t191.961038027\\t0.782\\t78\\n276\\t196.96656876\\t100\\t79\\n279\\t198.96827994\\t16.87\\t80\\n278\\t197.96676904\\t9.97\\t80\\n277\\t195.9658333\\t0.15\\t80\\n283\\t203.97349394\\t6.87\\t80\\n282\\t201.97064306\\t29.86\\t80\\n281\\t200.97030236\\t13.18\\t80\\n280\\t199.96832604\\t23.1\\t80\\n285\\t204.974427514\\t70.48\\t81\\n284\\t202.972344214\\t29.52\\t81\\n288\\t206.975896913\\t22.1\\t82\\n289\\t207.976652113\\t52.4\\t82\\n287\\t205.974465313\\t24.1\\t82\\n286\\t203.973043613\\t1.4\\t82\\n290\\t208.980398716\\t100\\t83\\n291\\t208.98243042\\t0\\t84\\n292\\t209.982873713\\t0\\t84\\n293\\t209.9871488\\t0\\t85\\n294\\t210.98749633\\t0\\t85\\n295\\t210.9906017\\t0\\t86\\n296\\t220.011394024\\t0\\t86\\n297\\t222.017577725\\t0\\t86\\n298\\t223.019735926\\t0\\t87\\n299\\t223.018502227\\t0\\t88\\n300\\t224.020211824\\t0\\t88\\n301\\t226.025409825\\t0\\t88\\n302\\t228.031070326\\t0\\t88\\n303\\t227.027752126\\t0\\t89\\n305\\t232.038055321\\t100\\t90\\n304\\t230.033133819\\t0\\t90\\n306\\t231.035884024\\t100\\t91\\n307\\t233.039635229\\t0\\t92\\n309\\t235.04392992\\t0.7204\\t92\\n308\\t234.04095212\\t0.0054\\t92\\n311\\t238.05078822\\t99.2742\\t92\\n310\\t236.04556802\\t0\\t92\\n313\\t237.04817342\\t0\\t93\\n312\\t236.0465705\\t0\\t93\\n315\\t239.05216342\\t0\\t94\\n314\\t238.04955992\\t0\\t94\\n317\\t241.05685152\\t0\\t94\\n316\\t240.05381352\\t0\\t94\\n319\\t244.0642045\\t0\\t94\\n318\\t242.05874262\\t0\\t94\\n320\\t241.05682912\\t0\\t95\\n321\\t243.061381125\\t0\\t95\\n326\\t247.0703545\\t0\\t96\\n327\\t248.0723495\\t0\\t96\\n324\\t245.065491222\\t0\\t96\\n325\\t246.067223722\\t0\\t96\\n322\\t243.061389122\\t0\\t96\\n323\\t244.06275262\\t0\\t96\\n328\\t247.0703076\\t0\\t97\\n329\\t249.074986728\\t0\\t97\\n332\\t251.0795875\\t0\\t98\\n333\\t252.0816265\\t0\\t98\\n330\\t249.074853524\\t0\\t98\\n331\\t250.076406122\\t0\\t98\\n334\\t252.0829805\\t0\\t99\\n335\\t257.0951057\\t0\\t100\\n337\\t260.1036534\\t0\\t101\\n336\\t258.0984315\\t0\\t101\\n338\\t259.1010311\\t0\\t102\\n339\\t262.1096322\\t0\\t103\\n340\\t265.1167046\\t0\\t104\\n341\\t268.1254557\\t0\\t105\\n342\\t271.133477\\t0\\t106\\n343\\t272.1380365\\t0\\t107\\n344\\t270.1346531\\t0\\t108\\n345\\t276.1511673\\t0\\t109\\n346\\t281.1620678\\t0\\t110\\n347\\t280.164478\\t0\\t111\\n348\\t285.1741178\\t0\\t112\\n349\\t284.1780886\\t0\\t113\\n350\\t289.1872879\\t0\\t114\\n351\\t288.1924992\\t0\\t115\\n352\\t292.20755101\\t0\\t117','[\\r\\n]+',0);for(h=0;h<k.length;h++){m=Qj(k[h],'\\t',0);c=en(e,m[3]);i=Oi(m[1]);j=Oi(m[2]);b=new Ct(ge(i+0.5),i,j,c.g);gn(c.b,new fj(b.c),b)}for(d=Vn(new Wn(Ft));un(d.a);){c=$n(d);Ks(c);if(c.b.b==0){l=new Ct(ge(c.c+0.5),c.c,100,c.g);gn(c.b,new fj(l.c),l)}}Gt=new zp;k=Qj(\"1\\tAbu\\t2-Aminobutyric acid diradical\\tC4H7NO\\r\\n2\\tAcet\\tAcetyl\\tC2H3O\\r\\n3\\tAcm\\tAcetamidomethyl\\tC3H6NO\\r\\n4\\tAdao\\tAdamantyloxy\\tC10H15O\\r\\n5\\tAib\\talpha-Aminoisobutyric acid diradical\\tC4H7NO\\r\\n6\\tAla\\tAlainine diradical\\tC3H5NO\\r\\n7\\tArg\\tArginine diradical\\tC6H12N4O\\r\\n8\\tArgp\\tArginine triradical\\tC6H11N4O\\r\\n9\\tAsn\\tAsparagine diradical\\tC4H6N2O2\\r\\n10\\tAsnp\\tAsparagine triradical\\tC4H5N2O2\\r\\n11\\tAsp\\tAspartic acid diradical\\tC4H5NO3\\r\\n12\\tAspp\\tAspartic acid triradical\\tC4H4NO3\\r\\n13\\tAsu\\talpha-Aminosuberic acid diradical\\tC8H13NO3\\r\\n14\\tAsup\\talpha-Aminosuberic acid triradical\\tC8H12NO3\\r\\n15\\tBoc\\tt-Butoxycarbonyl\\tC5H9O2\\r\\n16\\tBom\\tBenzyloxymethyl\\tC8H9O\\r\\n17\\tBrz\\t2-Bromobenzyloxycarbonyl\\tC8H6BrO2\\r\\n18\\tBu\\tButyl\\tC4H9\\r\\n19\\tBum\\tt-Butoxymethyl\\tC5H11O\\r\\n20\\tBz\\tBenzoyl\\tC7H5O\\r\\n21\\tBzl\\tBenzyl\\tC7H7\\r\\n22\\tBn\\tBenzyl\\tC7H7\\r\\n23\\tBzlo\\tBenzyloxy\\tC7H7O\\r\\n24\\tCha\\tbeta-Cyclohexylalanine diradical\\tC9H15NO\\r\\n25\\tChxo\\tCyclohexyloxy\\tC6H11O\\r\\n26\\tCit\\tCitrulline diradical\\tC6H11N3O2\\r\\n27\\tCitp\\tCitrulline triradical\\tC6H10N3O2\\r\\n28\\tClz\\t2-Chlorobenzyloxycarbonyl\\tC8H6ClO2\\r\\n29\\tCp\\tCyclopentadienyl\\tC5H5\\r\\n30\\tCys\\tCysteine diradical\\tC3H5NOS\\r\\n31\\tCysp\\tCysteine triradical\\tC3H4NOS\\r\\n32\\tD\\tDeuterium\\t[2H]\\r\\n33\\tDde\\tDde\\tC10H13O2\\r\\n34\\tDnp\\t2,4-Dinitrophenyl\\tC6H3N2O4\\r\\n35\\tEt\\tEthyl\\tC2H5\\r\\n36\\tFmoc\\tFluorenylmethoxycarbonyl\\tC15H11O2\\r\\n37\\tFor\\tFormyl\\tCHO\\r\\n38\\tGln\\tGlutamine diradical\\tC5H8N2O2\\r\\n39\\tGlnp\\tGlutamine triradical\\tC5H7N2O2\\r\\n40\\tGlp\\tPyroglutamine\\tC5H5NO2\\r\\n41\\tGlu\\tGlutamic acid diradical\\tC5H7NO3\\r\\n42\\tGlup\\tGlutamic acid triradical\\tC5H6NO3\\r\\n43\\tGly\\tGlycine diradical\\tC2H3NO\\r\\n44\\tHci\\tHomocitrulline diradical\\tC7H13N3O2\\r\\n45\\tHcip\\tHomocitrulline triradical\\tC7H12N3O2\\r\\n46\\tHis\\tHistidine diradical\\tC6H7N3O\\r\\n47\\tHisp\\tHistidine triradical\\tC6H6N3O\\r\\n48\\tHser\\tHomoserine diradical\\tC4H7NO2\\r\\n49\\tHserp\\tHomoserine triradical\\tC4H6NO2\\r\\n50\\tHyp\\tHydroxyproline diradical\\tC5H7NO2\\r\\n51\\tHypp\\tHydroxyproline triradical\\tC5H6NO2\\r\\n52\\tIle\\tIsoleucine diradical\\tC6H11NO\\r\\n53\\tIvdde\\t1-[4,4-dimethyl-2,6-dioxocyclohexylidene)3-methylb\\tC14H21O2\\r\\n54\\tLeu\\tLeucine diradical\\tC6H11NO\\r\\n55\\tLys\\tLysine diradical\\tC6H12N2O\\r\\n56\\tLysp\\tLysine triradical\\tC6H11N2O\\r\\n57\\tMbh\\t4,4'-Dimethoxybenzhydryl\\tC15H15O2\\r\\n58\\tMe\\tMethyl\\tCH3\\r\\n59\\tMebzl\\t4-Methylbenzyl\\tC8H9\\r\\n60\\tMeobzl\\t4-Methoxybenzyl1-[4,4-dimethyl-2,6-dioxocyclohexyl\\tC8H9O\\r\\n61\\tMet\\tMethionine diradical\\tC5H9NOS\\r\\n62\\tMmt\\t4-Methoxytrityl\\tC20H17O\\r\\n63\\tMtc\\t2,2,5,7,8-pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n64\\tMtr\\t4-Methoxy-2,3,6-trimethylbenzenesulphonyl\\tC10H13O3S\\r\\n65\\tMts\\tMesitylene-2-sulphonyl\\tC9H11O2S\\r\\n66\\tMtt\\t4-Methyltrityl\\tC20H17\\r\\n67\\tNle\\tNorleucine diradical\\tC6H11NO\\r\\n68\\tNpys\\t3-Nitro-2-pyridinesulphenyl\\tC5H3N2O2S\\r\\n69\\tNva\\tNorvaline diradical\\tC5H9NO\\r\\n70\\tOdmab\\tOdmab\\tC20H26NO3\\r\\n71\\tOrn\\tOrnithine diradical\\tC5H10N2O\\r\\n72\\tOrnp\\tOrnithine triradical\\tC5H9N2O\\r\\n73\\tPbf\\t2,2,4,6,7-pentamethyldihydrobenzofurane-5-sulfonyl\\tC13H17O3S\\r\\n74\\tPen\\tPenicillamine diradical\\tC5H9NOS\\r\\n75\\tPenp\\tPenicillamine triradical\\tC5H8NOS\\r\\n76\\tPh\\tPhenyl\\tC6H5\\r\\n77\\tPhe\\tPhenylalanine diradical\\tC9H9NO\\r\\n78\\tPhepcl\\t4-Chlorophenylalanine diradical\\tC9H8ClNO\\r\\n79\\tPhg\\tPhenylglycine\\tC8H7NO\\r\\n80\\tPmc\\t2,2,5,7,8-Pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n81\\tPro\\tProline diradical\\tC5H7NO\\r\\n82\\tPyr\\tPyroglutamine\\tC5H5NO2\\r\\n83\\tSar\\tSarcosine diradical\\tC3H5NO\\r\\n84\\tSer\\tSerine diradical\\tC3H5NO2\\r\\n85\\tSerp\\tSerine triradical\\tC3H4NO2\\r\\n86\\tSta\\tStatine diradical\\tC8H15NO2\\r\\n87\\tStap\\tStatine triradical\\tC8H14NO2\\r\\n88\\tTacm\\tTrimethylacetamidomethyl\\tC6H12NO\\r\\n89\\tTbdms\\tt-Butyldimethylsilyl\\tC6H15Si\\r\\n90\\tTbu\\tt-Butyl\\tC4H9\\r\\n91\\tTbuo\\tt-Butoxy\\tC4H9O\\r\\n92\\tTbuthio\\tt-Butylthio\\tC4H9S\\r\\n93\\tTfa\\tTrifluoroacetyl\\tC2F3O\\r\\n94\\tThi\\tbeta-(2-thenyl)alanine\\tC7H7NOS\\r\\n95\\tThr\\tThreonine diradical\\tC4H7NO2\\r\\n96\\tThrp\\tThreonine triradical\\tC4H6NO2\\r\\n97\\tTips\\tTriisopropylsilyl\\tC9H21Si\\r\\n98\\tTms\\tTrimethylsilyl\\tC3H9Si\\r\\n99\\tTos\\tTosyl\\tC7H7O2S\\r\\n100\\tTrp\\tTryptophan diradical\\tC11H10N2O\\r\\n101\\tTrpp\\tTryptophan triradical\\tC11H9N2O\\r\\n102\\tTrt\\tTrityl\\tC19H15\\r\\n103\\tTyr\\tTyrosine diradical\\tC9H9NO2\\r\\n104\\tTyrp\\tTyrosine triradical\\tC9H8NO2\\r\\n105\\tVal\\tValine\\tC5H9NO\\r\\n106\\tValoh\\tbeta-Hydroxyvaline diradical\\tC5H9NO2\\r\\n107\\tValohp\\tbeta-Hydroxyvaline triradical\\tC5H8NO2\\r\\n108\\tXan\\tXanthyl\\tC13H9O\\r\\n109\\tZ\\tBenzyloxycarbonyl\\tC8H7O2\\r\\n110\\tT\\tTritium\\t[3H]\",'[\\r\\n]+',0);for(f=0;f<k.length;f++){m=Qj(k[f],'\\t',0);try{hn(Gt,m[1],new Bt(m[1],m[2],m[3],Ft,Gt))}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}}}\nvar Ou=2147483647,Pu={3:1,9:1},Qu={3:1,6:1,9:1},Ru={3:1},Su=4194303,Tu=1048575,Uu=524288,Vu=4194304,Wu=17592186044416,Xu=-9223372036854775808,Yu=1000000000,Zu=65536,$u=-2147483648,_u=65535,av={28:1,3:1},bv=100000,cv=1000000,dv=10000000000,ev=0.3010299956639812,fv=4294967296,gv=1073741824,hv={35:1},iv={37:1,27:1},jv={3:1,51:1},kv={3:1,50:1},lv={3:1,18:1,29:1,26:1},mv=4.9E-324,nv=5.4857990946E-4;var _,Kh,Ig={},Eg=-1;Kg(1,null,{},db);_.eQ=function eb(a){return this===a};_.gC=function gb(){return this.cZ};_.hC=function ib(){return Nb(this)};_.tS=function kb(){return cb(this)};_.toString=function(){return this.tS()};Yd={3:1,116:1,18:1,2:1};Ng();var Yd;Kg(68,1,{},vi);_.u=function wi(a){var b;b=new vi;b.e=4;a>1?(b.c=Di(this,a-1)):(b.c=this);return b};_.v=function Ci(){ti(this);return this.b};_.w=function Ei(){return ui(this)};_.A=function Gi(){ti(this);return this.i};_.B=function Ii(){return (this.e&4)!=0};_.C=function Ji(){return (this.e&1)!=0};_.tS=function Mi(){return ((this.e&2)!=0?'interface ':(this.e&1)!=0?'':'class ')+(ti(this),this.k)};_.e=0;_.g=0;var si=1;var $e=yi(1),me=yi(0),Oe=yi(68);Kg(9,1,Pu);_.n=function pb(){return this.f};_.tS=function qb(){return ob(this)};var ff=yi(9);Kg(6,9,Qu);var Se=yi(6);Kg(10,6,Qu,tb);var _e=yi(10);Kg(83,10,Qu);var oe=yi(83);Kg(38,83,{38:1,3:1,6:1,9:1},xb);_.n=function yb(){wb(this);return this.c};var ub;var le=yi(38);var Ab;Kg(117,1,{});var ne=yi(117);var Eb=0,Fb=0,Gb=0,Hb=-1;Kg(138,1,{});var lf=yi(138);Kg(139,138,{});var mf=yi(139);Kg(112,139,{},Xb);_.b={l:0,m:0,h:0};_.c=0;var Sb;var pe=yi(112);Kg(107,117,{},hc);var dc;var qe=yi(107);var kc;Kg(133,1,{});var ue=yi(133);Kg(84,133,{},qc);_.o=function rc(a,b){var c={},j;a.fnStack=[];var d=arguments.callee.caller;while(d){var e=(lc(),d.name||(d.name=oc(d.toString())));a.fnStack.push(e);var f=':'+e;var g=c[f];if(g){var h,i;for(h=0,i=g.length;h<i;h++){if(g[h]===d){return}}}(g||(c[f]=[])).push(d);d=d.caller}};_.p=function sc(a){var b,c,d,e;d=(lc(),a&&a.fnStack&&a.fnStack instanceof Array?a.fnStack:[]);c=d.length;e=Sd(af,Ru,31,c,0,1);for(b=0;b<c;b++){e[b]=new Ej(d[b],null,-1)}return e};var re=yi(84);Kg(134,133,{});_.o=function vc(c,d){function e(b){if(!('stack' in b)){try{throw b}catch(a){}}return b}\nvar f;typeof d=='string'?(f=e(new Error(d))):d instanceof Object&&'stack' in d?(f=d):(f=e(new Error));c.__gwt$backingJsError=f};_.q=function wc(a,b,c,d){return new Ej(b,a+'@'+d,c<0?-1:c)};_.p=function xc(a){var b,c,d,e,f,g,h;e=(lc(),h=a.__gwt$backingJsError,h&&h.stack?h.stack.split('\\n'):[]);f=Sd(af,Ru,31,0,0,1);b=0;d=e.length;if(d==0){return f}g=uc(this,e[0]);Jj(g.d,'anonymous')||(f[b++]=g);for(c=1;c<d;c++){f[b++]=uc(this,e[c])}return f};var te=yi(134);Kg(85,134,{},yc);_.q=function zc(a,b,c,d){return new Ej(b,a,-1)};var se=yi(85);Kg(132,1,{});_.s=function Kc(){return null};var Ce=yi(132);Kg(66,132,{66:1},Oc,Pc);_.eQ=function Qc(a){if(!_d(a,66)){return false}return this.a==a.a};_.r=function Rc(){return Uc};_.hC=function Sc(){return Nb(this.a)};_.tS=function Tc(){var a,b,c;c=new uk('[');for(b=0,a=this.a.length;b<a;b++){b>0&&(c.a+=',',c);pk(c,Lc(this,b))}c.a+=']';return c.a};var ve=yi(66);Kg(76,132,{},Yc);_.r=function Zc(){return _c};_.tS=function $c(){return ei(),''+this.a};_.a=false;var Vc,Wc;var we=yi(76);Kg(110,10,Qu,ad);var xe=yi(110);Kg(106,132,{},dd);_.r=function ed(){return gd};_.tS=function fd(){return 'null'};var bd;var ye=yi(106);Kg(8,132,{8:1},hd);_.eQ=function jd(a){if(!_d(a,8)){return false}return this.a==a.a};_.r=function kd(){return nd};_.hC=function ld(){return ge((new Ri(this.a)).a)};_.tS=function md(){return this.a+''};_.a=0;var ze=yi(8);Kg(54,132,{54:1},td,ud);_.eQ=function vd(a){if(!_d(a,54)){return false}return this.a==a.a};_.r=function wd(){return zd};_.hC=function xd(){return Nb(this.a)};_.tS=function yd(){var a,b,c,d,e,f;f=new uk('{');a=true;e=od(this,Sd(ef,Ru,2,0,4,1));for(c=0,d=e.length;c<d;++c){b=e[c];a?(a=false):(f.a+=', ',f);qk(f,Cb(b));f.a+=':';pk(f,pd(this,b))}f.a+='}';return f.a};var Ae=yi(54);var Ad;Kg(11,132,{11:1},Id);_.eQ=function Jd(a){if(!_d(a,11)){return false}return Jj(this.a,a.a)};_.r=function Kd(){return Od};_.hC=function Ld(){return jk(this.a)};_.s=function Md(){return this};_.tS=function Nd(){return Cb(this.a)};var Be=yi(11);var Rg;var hh;var Fh,Gh,Hh,Ih;Kg(60,9,Pu);var Re=yi(60);Kg(17,60,Pu);var Me=yi(17);Kg(78,17,Pu,Uh);var He=yi(78);Kg(45,1,{});_.tS=function Yh(){return this.a};var Ie=yi(45);Kg(41,10,Qu,Zh);var Je=yi(41);Kg(49,10,Qu,$h,_h);var Ve=yi(49);Kg(109,49,Qu,ai);var Ke=yi(109);Kg(43,10,Qu,bi);var Le=yi(43);Kg(52,1,{3:1,52:1,18:1},fi);_.t=function hi(a){return gi(this.a,a.a)};_.eQ=function ii(a){return _d(a,52)&&a.a==this.a};_.hC=function ji(){return this.a?1231:1237};_.tS=function ki(){return ''+this.a};_.a=false;var ci,di;var Ne=yi(52);Kg(44,1,{3:1,44:1});var Ni;var Ze=yi(44);Kg(7,44,{3:1,18:1,7:1,44:1},Ri);_.t=function Ti(a){return Si(this.a,a.a)};_.eQ=function Ui(a){return Qi(this,a)};_.hC=function Vi(){return ge(this.a)};_.tS=function Yi(){return ''+this.a};_.a=0;var Pe=yi(7);Kg(29,1,{3:1,18:1,29:1});_.t=function $i(a){return this.b-a.b};_.eQ=function _i(a){return this===a};_.hC=function aj(){return Nb(this)};_.tS=function bj(){return this.a!=null?this.a:''+this.b};_.b=0;var Qe=yi(29);Kg(56,10,Qu,cj);var Te=yi(56);Kg(111,10,Qu,dj);var Ue=yi(111);Kg(19,44,{3:1,18:1,19:1,44:1},fj);_.t=function hj(a){return ej(this,a)};_.eQ=function ij(a){return _d(a,19)&&a.a==this.a};_.hC=function jj(){return this.a};_.tS=function mj(){return ''+this.a};_.a=0;var We=yi(19);var pj;Kg(59,10,Qu,Bj,Cj);var Xe=yi(59);Kg(20,56,{3:1,6:1,20:1,9:1},Dj);var Ye=yi(20);Kg(31,1,{3:1,31:1},Ej);_.eQ=function Fj(a){var b;if(_d(a,31)){b=a;return this.c==b.c&&Pq(this.d,b.d)&&Pq(this.a,b.a)&&Pq(this.b,b.b)}return false};_.hC=function Gj(){return gp(Vd(Rd($e,1),Ru,1,3,[oj(this.c),this.a,this.d,this.b]))};_.tS=function Hj(){return this.a+'.'+this.d+'('+(this.b!=null?this.b:'Unknown Source')+(this.c>=0?':'+this.c:'')+')'};_.c=0;var af=yi(31);var ef=yi(2);var ek,fk=0,gk;Kg(34,45,{116:1},mk,nk);var bf=yi(34);\nKg(23,45,{116:1},sk,tk,uk);var cf=yi(23);Kg(67,49,Qu,vk);var df=yi(67);Kg(42,10,Qu,xk,yk);var gf=yi(42);Kg(14,44,{3:1,18:1,44:1,14:1},Ok,Pk,Qk,Rk);_.t=function Uk(a){return Ik(this,a)};_.eQ=function Xk(a){var b;if(this===a){return true}if(_d(a,14)){b=a;return b.e==this.e&&(this.a<54?b.f==this.f:ml(this.c,b.c))}return false};_.hC=function Yk(){var a;if(this.b!=0){return this.b}if(this.a<54){a=mh(this.f);this.b=Ch(jh(a,{l:Su,m:Su,h:Tu}));this.b=33*this.b+Ch(jh(yh(a,32),{l:Su,m:Su,h:Tu}));this.b=17*this.b+ge(this.e);return this.b}this.b=17*pl(this.c)+ge(this.e);return this.b};_.tS=function _k(){return Nk(this)};_.a=0;_.b=0;_.d=0;_.e=0;_.f=0;var zk,Ak,Bk,Ck,Dk,Ek,Fk,Gk;var hf=yi(14);Kg(5,44,{3:1,18:1,44:1,5:1},xl,yl,zl,Al,Bl,Cl);_.t=function El(a){return jl(this,a)};_.eQ=function Fl(a){return ml(this,a)};_.hC=function Hl(){return pl(this)};_.tS=function Jl(){return Xl(this,0)};_.b=-2;_.c=0;_.d=0;_.e=0;var bl,cl,dl,el,fl,gl;var jf=yi(5);var Sl,Tl;var jm,km,lm;Kg(24,29,{3:1,18:1,29:1,24:1},Gm);var xm,ym,zm,Am,Bm,Cm,Dm,Em;var kf=zi(24,Hm);Kg(130,1,{});_.F=function Mm(a){return Jm(this,a)};_.H=function Nm(a){var b,c,d;d=this.G();a.length<d&&(a=Qd(a,d));c=this.D();for(b=0;b<d;++b){a[b]=c.O()}a.length>d&&(a[d]=null);return a};_.tS=function Om(){return Lm(this)};var nf=yi(130);Kg(129,1,{50:1});_.I=function Sm(a){return Pm(this,a)};_.J=function Tm(a){return !!Qm(this,a)};_.eQ=function Um(a){var b,c,d;if(a===this){return true}if(!_d(a,50)){return false}d=a;if(this.G()!=d.G()){return false}for(c=d.K().D();c.N();){b=c.O();if(!this.I(b)){return false}}return true};_.L=function Vm(a){return Xm(Qm(this,a))};_.hC=function Ym(){return lp(this.K())};_.G=function Zm(){return this.K().G()};_.tS=function $m(){var a,b,c,d;d=new uk('{');a=false;for(c=this.K().D();c.N();){b=c.O();a?(d.a+=', ',d):(a=true);qk(d,Rm(this,b.T()));d.a+='=';qk(d,Rm(this,b.U()))}d.a+='}';return d.a};var Cf=yi(129);Kg(79,129,{50:1});_.J=function jn(a){return _m(this,a)};_.K=function kn(){return new qn(this)};_.L=function ln(a){return dn(this,a)};_.M=function mn(a,b){return gn(this,a,b)};_.G=function nn(){return this.b};_.b=0;var qf=yi(79);Kg(131,130,hv);_.eQ=function on(a){var b;if(a===this){return true}if(!_d(a,35)){return false}b=a;if(b.G()!=this.G()){return false}return Km(this,b)};_.hC=function pn(){return lp(this)};var Hf=yi(131);Kg(61,131,hv,qn);_.F=function rn(a){if(_d(a,27)){return Pm(this.a,a)}return false};_.D=function sn(){return new wn(this.a)};_.G=function tn(){return this.a.b};var pf=yi(61);Kg(62,1,{},wn);_.N=function xn(){return un(this)};_.O=function yn(){return vn(this)};var of=yi(62);Kg(135,130,{51:1});_.P=function zn(a,b){throw new yk('Add not supported on this list')};_.Q=function An(a){this.P(this.G(),a);return true};_.eQ=function Bn(a){var b,c,d,e,f;if(a===this){return true}if(!_d(a,51)){return false}f=a;if(this.G()!=f.G()){return false}e=f.D();for(c=this.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(!(ee(b)===ee(d)||b!=null&&fb(b,d))){return false}}return true};_.hC=function Cn(){return mp(this)};_.D=function Dn(){return new In(this)};_.S=function En(a){throw new yk('Remove not supported on this list')};var tf=yi(135);Kg(21,1,{},In);_.N=function Jn(){return Fn(this)};_.O=function Kn(){return Gn(this)};_.a=0;_.b=-1;var rf=yi(21);Kg(90,21,{},Ln);var sf=yi(90);Kg(63,131,hv,Nn);_.F=function On(a){return _m(this.a,a)};_.D=function Pn(){return Mn(this)};_.G=function Qn(){return this.a.b};var vf=yi(63);Kg(81,1,{},Sn);_.N=function Tn(){return un(this.a)};_.O=function Un(){return Rn(this)};var uf=yi(81);Kg(25,130,{},Wn);_.F=function Xn(a){return an(this.a,a)};_.D=function Yn(){return Vn(this)};_.G=function Zn(){return this.a.b};var xf=yi(25);Kg(82,1,{},_n);_.N=function ao(){return un(this.a)};_.O=function bo(){return $n(this)};var wf=yi(82);Kg(37,1,iv);_.eQ=function fo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.c,b.T())&&Pq(this.d,b.U())};_.T=function go(){return this.c};_.U=function ho(){return this.d};_.hC=function io(){return Qq(this.c)^Qq(this.d)};_.V=function jo(a){return co(this,a)};_.tS=function ko(){return this.c+'='+this.d};var yf=yi(37);Kg(53,37,{37:1,53:1,27:1},lo);var zf=yi(53);Kg(80,37,iv,mo);_.V=function no(a){throw new xk};var Af=yi(80);Kg(136,1,{27:1});_.eQ=function oo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.T(),b.T())&&Pq(this.U(),b.U())};_.hC=function po(){return Qq(this.T())^Qq(this.U())};_.tS=function qo(){return this.T()+'='+this.U()};var Bf=yi(136);Kg(137,129,{50:1});_.I=function wo(a){return ro(this,a)};_.J=function xo(a){return so(this,a)};_.K=function yo(){return new Bo(this)};_.L=function zo(a){return to(this,a)};var Gf=yi(137);Kg(73,131,hv,Bo);_.F=function Co(a){return _d(a,27)&&ro(this.a,a)};_.D=function Do(){return this.a.W()};_.G=function Eo(){return this.a.G()};var Df=yi(73);Kg(13,131,hv,Go);_.F=function Ho(a){return so(this.a,a)};_.D=function Io(){return Fo(this)};_.G=function Jo(){return this.a.d};var Ff=yi(13);Kg(97,1,{},Lo);_.N=function Mo(){return Fn(this.a.a)};_.O=function No(){return Ko(this)};var Ef=yi(97);Kg(46,135,jv,Xo,Yo);_.P=function Zo(a,b){Po(this,a,b)};_.Q=function $o(a){return Qo(this,a)};_.F=function _o(a){return So(this,a,0)!=-1};_.R=function ap(a){return Ro(this,a)};_.S=function bp(a){return To(this,a)};_.G=function cp(){return this.b.length};_.H=function fp(a){return Wo(this,a)};var If=yi(46);var op;Kg(108,1,{},qp);_.Y=function rp(a,b){Fc(a);Fc(b);return $j(a,b)};var Jf=yi(108);Kg(115,10,Qu,vp);var Kf=yi(115);Kg(114,10,Qu,wp);var Lf=yi(114);Kg(22,79,kv,zp);var Mf=yi(22);Kg(75,1,{},Hp);_.Z=function Ip(a){var b,c,d,e,f,g,h,i;for(g=Ep(this),h=0,i=g.length;h<i;++h){f=g[h];for(c=this.a[f],d=0,e=c.length;d<e;++d){b=c[d];if(xp(a,b.U())){return true}}}return false};_.$=function Jp(){return Object.create(null)};_._=function Kp(){return new Mp(this)};var Qf=yi(75);Kg(102,1,{},Mp);_.N=function Np(){return Lp(this)};_.O=function Op(){return Dc(Lp(this)),this.e=this.a[this.c++],this.e};_.b=-1;_.c=0;_.e=null;var Nf=yi(102);Kg(100,75,{},Pp);_.Z=function Qp(a){var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){var g=d[e];var h=g.U();if(this.ab(a,h)){return true}}}}return false};_.$=function Rp(){return {}};_._=function Sp(){var a=this.bb();var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){a.Q(d[e])}}}return a.D()};_.ab=function Tp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.bb=function Up(){return new Vp(this)};var Pf=yi(100);Kg(101,46,jv,Vp);_.S=function Wp(a){var b;return b=To(this,a),Gp(this.a,b.T()),b};var Of=yi(101);Kg(103,1,{},Xp);_.cb=function Yp(){return new Hp};_.db=function Zp(){return new mq};var Tf=yi(103);var $p;Kg(105,103,{},cq);_.db=function dq(){return new Lq};var Rf=yi(105);Kg(104,103,{},eq);_.cb=function fq(){return new Pp};_.db=function gq(){return new Cq};var Sf=yi(104);Kg(64,1,{},mq);_.Z=function nq(a){return hq(this,a)};_.eb=function oq(){return Object.create(null)};_._=function pq(){var a;a=this.hb();return new vq(this,a)};_.fb=function qq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.gb=function rq(a){return this.a[a]};_.hb=function sq(){return iq(this)};_.ib=function tq(a){return new yq(this,a)};_.jb=function uq(a,b){return jq(this,a,b)};var Zf=yi(64);Kg(89,1,{},vq);_.N=function wq(){return this.a<this.c.length};_.O=function xq(){return Dc(this.a<this.c.length),new yq(this.b,this.c[this.a++])};_.a=0;var Uf=yi(89);Kg(71,136,{27:1},yq);_.T=function zq(){return this.b};_.U=function Aq(){return this.a.gb(this.b)};_.V=function Bq(a){return this.a.jb(this.b,a)};var Vf=yi(71);Kg(86,64,{},Cq);_.Z=function Dq(a){var b=this.a;for(var c in b){if(c.charCodeAt(0)==58){var d=b[c];if(this.fb(a,d)){return true}}}return false};_.eb=function Eq(){return {}};_._=function Fq(){var a=this.kb();for(var b in this.a){if(b.charCodeAt(0)==58){var c=this.ib(b.substring(1));a.Q(c)}}return a.D()};_.gb=function Gq(a){return this.a[':'+a]};_.kb=function Hq(){return new Jq(this)};_.jb=function Iq(a,b){return jq(this,':'+a,b)};var Xf=yi(86);Kg(88,46,jv,Jq);_.S=function Kq(a){var b;return b=To(this,a),kq(this.a,':'+b.T()),b};var Wf=yi(88);Kg(87,64,{},Lq);_.Z=function Mq(a){var b;b=this.a['__proto__'];if(!(b===undefined)&&(ee(a)===ee(b)||a!=null&&fb(a,b))){return true}return hq(this,a)};_.hb=function Nq(){var a;a=iq(this);!(this.a['__proto__']===undefined)&&(a[a.length]='__proto__');return a};var Yf=yi(87);var $f=Ai();Kg(77,10,Qu,Oq);var _f=yi(77);Kg(74,135,jv,Sq);_.P=function Tq(a,b){Vq(a,this.a.b.length+1);Po(this.a,a,b)};_.Q=function Uq(a){return Rq(this,a)};_.F=function Wq(a){return So(this.a,a,0)!=-1};_.R=function Xq(a){return Vq(a,this.a.b.length),Ro(this.a,a)};_.D=function Yq(){return new In(this.a)};_.S=function Zq(a){return Vq(a,this.a.b.length),this.a.S(a)};_.G=function $q(){return this.a.b.length};_.H=function _q(a){return Wo(this.a,a)};_.tS=function ar(){return Lm(this.a)};var lg=yi(74);Kg(113,74,jv,dr);var ag=yi(113);Kg(58,137,kv,tr,ur);_.W=function vr(){return new Br(this)};_.K=function wr(){return new Fr(this)};_.X=function xr(a){var b,c,d;d=this.c;while(d){b=this.b.Y(a,d.c);if(b==0){return d}c=b<0?0:1;d=d.a[c]}return null};_.G=function yr(){return this.d};_.d=0;var jg=yi(58);Kg(72,1,{},Br);_.N=function Dr(){return Fn(this.a)};_.O=function Er(){return zr(this)};var bg=yi(72);Kg(12,73,hv,Fr);var cg=yi(12);Kg(40,53,{37:1,53:1,27:1,40:1},Gr);_.b=false;var dg=yi(40);Kg(65,1,{},Hr);_.tS=function Ir(){return 'State: mv='+this.c+' value='+this.d+' done='+this.a+' found='+this.b};_.a=false;_.b=false;_.c=false;var eg=yi(65);Kg(26,29,lv,Or);_.lb=function Pr(){return false};_.mb=function Qr(){return false};var Jr,Kr,Lr,Mr;var ig=zi(26,Rr);Kg(94,26,lv,Sr);_.mb=function Tr(){return true};var fg=zi(94,null);Kg(95,26,lv,Ur);_.lb=function Vr(){return true};_.mb=function Wr(){return true};var gg=zi(95,null);Kg(96,26,lv,Xr);_.lb=function Yr(){return true};var hg=zi(96,null);Kg(57,131,{3:1,35:1},$r,_r);_.F=function as(a){return so(this.g,a)};_.D=function bs(){return Fo(new Go(this.g))};_.G=function cs(){return this.g.d};var kg=yi(57);Kg(32,1,{18:1,32:1},js,ks,ls,ms);_.t=function ns(a){if(!_d(a,32))throw new yk('Not comparable: Atoms and '+ui(hb(a)));return ds(this,a)};_.eQ=function os(a){return es(this,a)};_.hC=function ps(){var a;a=this.a+this.i;return jk(a)};_.tS=function qs(){return is(this,null)};_.a=0;_.b=0;_.c=0;_.d=0;_.e=0;_.f=0;_.g=0;var mg=yi(32);Kg(33,58,kv,Fs);_.tS=function Gs(){return Cs(this)};_.a=10000;var og=yi(33);Kg(98,1,{},Hs);_.Y=function Is(a,b){return -$j(a.U(),b.U())};var ng=yi(98);Kg(55,1,{18:1},Os,Ps,Qs);_.t=function Rs(a){this.g+'-'+a.g;return Zj(this.g,a.g)};_.eQ=function Ss(a){var b;if(this===a)return true;if(pg!=hb(a))return false;b=a;if(Jj(this.g,b.g))return true;return false};_.tS=function Ts(){return Ns(this)};_.a=0;_.c=0;_.d=0;_.f=0;var pg=yi(55);Kg(99,1,{18:1},Xs);_.t=function Ys(a){return ej(new fj(this.a.c-this.a.d),oj(a.a.c-a.a.d))};_.tS=function Zs(){return this.a.i+' - '+this.a.d+' to '+this.a.c+' - current: '+this.b};_.b=0;_.c=0;_.d=0;var qg=yi(99);Kg(47,1,{},gt,ht);_.tS=function it(){return ft(this)};_.c=false;_.e=false;var sg=yi(47);Kg(30,57,{3:1,35:1},ut,vt,wt);_.tS=function xt(){return tt(this)};_.a=0;_.b='';_.e=false;_.f=0;var rg=yi(30);Kg(70,1,{},Bt);var tg=yi(70);Kg(39,1,{18:1,39:1},Ct);_.t=function Dt(a){var b;if(_d(a,39)){b=a;return this.c=b.c}else throw new yk('Cannot compare Isotope to '+a)};_.tS=function Et(){return 'Number: '+this.c+' - mass: '+this.b+' - percentage: '+this.d+' - symbol: '+this.a};_.b=0;_.c=0;_.d=0;var ug=yi(39);var Ft,Gt;Kg(4,6,{3:1,6:1,9:1,4:1},It);var vg=yi(4);Kg(91,1,{},Qt);_.a=0;_.b=0;_.e=null;_.f=0;var Jt=1;var yg=yi(91);Kg(48,1,{},Zt,$t,_t);_.b=0;var xg=yi(48);Kg(92,1,{},bu);_.Y=function cu(a,b){return au(this,a,b)};var wg=yi(92);var du;Kg(93,1,{},iu);_.a=0;_.b=0;_.c=null;var zg=yi(93);var ju;Kg(128,1,{},pu);_.nb=function ou(){};var nu=null;var Ag=yi(128);Kg(69,1,{18:1},Du);_.t=function Eu(a){return Cu(this,a)};_.a=0;_.c=0;var Bg=yi(69);Kg(16,1,{},Gu,Hu,Iu);var Cg=yi(16);Kg(15,1,{},Mu);var Dg=yi(15);var ke=Bi('I'),De=yi(119),Ee=yi(121),Fe=yi(null),Ge=yi(124),he=Bi('B'),je=Bi('D'),$f=Ai(),ie=Bi('C');_=Pg('$wnd.CI.Chemcalc');_.analyseMF=ru;_.getInfo=tu;_.mfFromMonoisotopicMass=uu;_.aa=nu;var Nu=Oh();var gwtOnLoad=gwtOnLoad=Nh;Lh(Rh);Ph('permProps',[[['user.agent','safari']]]);$sendStats('moduleStartup', 'moduleEvalEnd');gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);$sendStats('moduleStartup', 'end');$gwt && $gwt.permProps && __gwtModuleFunction.__moduleStartupDone($gwt.permProps);\n//# sourceURL=chemcalc-0.js\n\n        // End GWT code\n\n        var toReturn = $wnd[\"CI\"][\"Chemcalc\"];\n\n        toReturn.version = '3.0.4';\n\n        return toReturn;\n    }\n\n    var fakeWindow = {};\n\n    if (typeof module !== 'undefined' && module.exports) { // NodeJS\n        var timers = require('timers');\n        fakeWindow.setTimeout = timers.setTimeout;\n        fakeWindow.clearTimeout = timers.clearTimeout;\n        fakeWindow.setInterval = timers.setInterval;\n        fakeWindow.clearInterval = timers.clearInterval;\n        fakeWindow.document = {};\n        module.exports = getExports(fakeWindow);\n    } else { // Browser\n        if (true) {\n            // Timer proxies\n            fakeWindow.setTimeout = self.setTimeout.bind(self);\n            fakeWindow.clearTimeout = self.clearTimeout.bind(self);\n            fakeWindow.setInterval = self.setInterval.bind(self);\n            fakeWindow.clearInterval = self.clearInterval.bind(self);\n            fakeWindow.document = self.document;\n        } else {\n            fakeWindow = self;\n        }\n\n        if (typeof define === 'function' && define.amd) { // AMD\n            define(function () {\n                return getExports(fakeWindow);\n            });\n        } else { // Global\n            var path = [\"CI\",\"Chemcalc\"];\n            var l = path.length - 1;\n            var obj = self;\n            for (var i = 0; i < l; i++) {\n                obj = obj[path[i]] || (obj[path[i]] = {});\n            }\n            obj[path[l]] = getExports(fakeWindow);\n        }\n    }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chemcalc/dist/chemcalc.js\n ** module id = 1\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 2\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar aa = require('./amino_acid');\nvar IEP = require('./isoElectricPoint');\n\nconsole.log(IEP);\n\n\nexports.getInfo = function () {\n    return aa;\n}\n\n// sequence should be in the \"right\" format like HAlaGlyProOH\n\nexports.calculateIEP = function (sequence) {\n    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n    aas=aas.slice(2,aas.length-2);\n    var result=IEP.calculateIEP(aas);\n    return result;\n}\n\nexports.calculateIEPChart = function (sequence) {\n    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n    aas=aas.slice(2,aas.length-2);\n    var result=IEP.calculateChart(aas);\n    return result;\n}\n\n\nexports.generatePeptideFragments = function generatePeptideFragments(mf, options) {\n    if (options === undefined) {\n        options = {\n            a: false,\n            b: true,\n            c: false,\n            x: false,\n            y: true,\n            z: false,\n            i: false\n        };\n    }\n\n    var mfs = [];\n    var mfparts=mf.replace(/([a-z\\)])([A-Z][a-z](?=[a-z]))/g,\"$1 $2\").split(/ /);\n\n    var nTerm=\"\";\n    var cTerm=\"\";\n    for (var i=1; i<mfparts.length; i++) {\n        nTerm+=mfparts[i-1];\n        cTerm=mfparts[mfparts.length-i]+cTerm;\n        addNTerm(mfs, nTerm, i, options);\n        addCTerm(mfs, cTerm, i, options);\n        if (options.i) mfs.push(mfparts[i]+\"HC-1O-1(+1)$i:\"+mfparts[i]);\n    }\n\n    if (mfs.length === 0) {\n        mfs = mfs.concat([mf]);\n    }\n\n    return mfs;\n\n};\n\nexports.chargePeptide = function chargePeptide(mf) {\n    return mf.replace(/^H([^+])/, 'H+H$1').replace(/(Arg|His|Lys)(?!\\()/g, '$1(H+)');\n};\n\nfunction aa1To3(code) {\n    for (var i = 0; i < aa.length; i++) {\n        if (aa[i].aa1 === code) {\n            return aa[i].aa3;\n        }\n    }\n    throw new Error('Invalid 1 letter code: ' + code);\n}\n\nfunction converAA1To3(mf) {\n    var newmf = '';\n    for (var i = 0; i < mf.length; i++) {\n        newmf += aa1To3(mf.charAt(i));\n    }\n    return newmf;\n}\n\nfunction capitalizeAA3(mf) {\n    for (var i = 0; i < aa.length; i++) {\n        var regexp = new RegExp(aa[i].aa3, 'gi');\n        mf = mf.replace(regexp, aa[i].aa3);\n    }\n    return mf;\n}\n\n\nexports.convertAASequence = function convertAASequence(mf) {\n    // this function will check if it is a sequence of aa in 1 letter or 3 letters and convert them if it is the case\n    // it could be a multiline mf !\n    // if it is a multiline we could make some \"tricks\" ...\n    var newmf = mf;\n    // SEQRES   1 B  256  MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n    // SEQRES   2 B  256  GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n    // or\n    // MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n    // GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n    if (mf.search(/[A-Z]{3} [A-Z]{3} [A-Z]{3}/) > -1) {\n        // this is a PDB !\n        var tmpmf = mf.replace(/[\\r\\n]+/g, ' ');\n        tmpmf = tmpmf.replace(/(SEQRES|[0-9]+| [A-Z] | [0-9A-Z]{4-50})/g, '');\n        // we need to correct the uppercase / lowercase\n        var parts = tmpmf.split(' ');\n        newmf = 'H';\n        for (var i = 0; i < parts.length; i++) {\n            newmf += parts[i].substr(0, 1) + parts[i].substr(1).toLowerCase();\n        }\n        newmf += 'OH';\n    } else if ((mf.search(/[A-Z]{3}/) > -1) && (mf.search(/[a-zA-Z][a-z0-9]/) == -1)) {\n        // UNIPROT\n        //   370        380        390        400        410        420\n        //GFKPNLRKTF VSGLFRESCG AHFYRGVDVK PFYIKKPVDN LFALMLILNR LRGWGVVGGM\n        //\n        //    430        440        450        460        470        480\n        //SDPRLYKVWV RLSSQVPSMF FGGTDLAADY YVVSPPTAVS VYTKTPYGRL LADTRTSGFR\n        // We remove all the number, all the spaces, etc\n        newmf = 'H' + converAA1To3(newmf.replace(/[^A-Z]/g, '')) + 'OH';\n    }\n\n    return newmf;\n\n};\n\nfunction addNTerm(mfs, nTerm, i, options) {\n    if (options.a) mfs.push(nTerm+\"C-1O-1(+1)$a\"+i);\n    if (options.b) mfs.push(nTerm+\"(+1)$b\"+i);\n    if (options.c) mfs.push(nTerm+\"NH3(+1)$c\"+i);\n}\n\nfunction addCTerm(mfs, cTerm, i, options) {\n    if (options.x) mfs.push(\"CO(+1)\"+cTerm+\"$x\"+i);\n    if (options.y) mfs.push(\"H2(+1)\"+cTerm+\"$y\"+i);\n    if (options.z) mfs.push(\"N-1H-1(+1)\"+cTerm+\"$z\"+i);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peptide/src/index.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\n// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\nmodule.exports = [\n    // Standard amino acids\n    {\n        name: \"Alanine\",\n        aa3: \"Ala\",\n        aa1: \"A\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.33,\n        pKaN: 9.71\n    },\n    {\n        name: \"Arginine\",\n        aa3: \"Arg\",\n        aa1: \"R\",\n        sc: {\n            type: \"positive\",\n            pKa: 12.10\n        },\n        pKaC: 2.03,\n        pKaN: 9.00\n    },\n    {\n        name: \"Asparagine\",\n        aa3: \"Asn\",\n        aa1: \"N\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.13,\n        pKaN: 9.05\n    },\n    {\n        name: \"Aspartic acid\",\n        aa3: \"Asp\",\n        aa1: \"D\",\n        sc: {\n            type: \"negative\",\n            pKa: 3.71\n        },\n        pKaC: 1.95,\n        pKaN: 9.66\n    },\n    {\n        name: \"Cysteine\",\n        aa3: \"Cys\",\n        aa1: \"C\",\n        sc: {\n            type: \"special\",\n            pKa: 8.14\n        },\n        pKaC: 1.91,\n        pKaN: 10.28\n    },\n    {\n        name: \"Glutamic acid\",\n        aa3: \"Glu\",\n        aa1: \"E\",\n        sc: {\n            type: \"negative\",\n            pKa: 4.15\n        },\n        pKaC: 2.16,\n        pKaN: 9.58\n    },\n    {\n        name: \"Glutamine\",\n        aa3: \"Gln\",\n        aa1: \"Q\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.18,\n        pKaN: 9.00\n    },\n    {\n        name: \"Glycine\",\n        aa3: \"Gly\",\n        aa1: \"G\",\n        sc: {\n            type: \"special\"\n        },\n        pKaC: 2.34,\n        pKaN: 9.58\n    },\n    {\n        name: \"Histidine\",\n        aa3: \"His\",\n        aa1: \"H\",\n        sc: {\n            type: \"positive\",\n            pKa: 6.04\n        },\n        pKaC: 1.70,\n        pKaN: 9.09\n    },\n    {\n        name: \"Isoleucine\",\n        aa3: \"Ile\",\n        aa1: \"I\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.26,\n        pKaN: 9.60\n    },\n    {\n        name: \"Leucine\",\n        aa3: \"Leu\",\n        aa1: \"L\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.32,\n        pKaN: 9.58\n    },\n    {\n        name: \"Lysine\",\n        aa3: \"Lys\",\n        aa1: \"K\",\n        sc: {\n            type: \"positive\",\n            pKa: 10.67\n        },\n        pKaC: 2.15,\n        pKaN: 9.16\n    },\n    {\n        name: \"Methionine\",\n        aa3: \"Met\",\n        aa1: \"M\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.16,\n        pKaN: 9.08\n    },\n    {\n        name: \"Phenylalanine\",\n        aa3: \"Phe\",\n        aa1: \"F\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.18,\n        pKaN: 9.09\n    },\n    {\n        name: \"Proline\",\n        aa3: \"Pro\",\n        aa1: \"P\",\n        sc: {\n            type: \"special\"\n        },\n        pKaC: 1.95,\n        pKaN: 10.47\n    },\n    {\n        name: \"Serine\",\n        aa3: \"Ser\",\n        aa1: \"S\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.13,\n        pKaN: 9.05\n    },\n    {\n        name: \"Threonine\",\n        aa3: \"Thr\",\n        aa1: \"T\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.20,\n        pKaN: 8.96\n    },\n    {\n        name: \"Tryptophan\",\n        aa3: \"Trp\",\n        aa1: \"W\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.38,\n        pKaN: 9.34\n    },\n    {\n        name: \"Tyrosine\",\n        aa3: \"Tyr\",\n        aa1: \"Y\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.24,\n        pKaN: 9.04\n    },\n    {\n        name: \"Valine\",\n        aa3: \"Val\",\n        aa1: \"V\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.27,\n        pKaN: 9.52\n    },\n    // Additional\n    {\n        name: \"Selenocysteine\",\n        aa3: \"Sec\",\n        aa1: \"U\"\n    },\n    {\n        name: \"Pyrrolysine\",\n        aa3: \"Pyl\",\n        aa1: \"O\"\n    },\n    // Ambiguous\n    {\n        name: \"Asparagine or aspartic acid\",\n        aa3: \"Asx\",\n        aa1: \"B\"\n    },\n    {\n        name: \"Glutamine or glutamic acid\",\n        aa3: \"Glx\",\n        aa1: \"Z\"\n    },\n    {\n        name: \"Leucine or isoleucine\",\n        aa3: \"Xle\",\n        aa1: \"J\"\n    },\n    {\n        name: \"Unspecified or unknown\",\n        aa3: \"Xaa\",\n        aa1: \"X\"\n    }\n];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peptide/src/amino_acid.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\n\nvar aa = require('./amino_acid');\n\n// we will convert the data to an object to be much faster\nvar aaObject={};\nfor (var i=0; i<aa.length; i++) {\n    aaObject[aa[i].aa3]=aa[i];\n}\n\n\n\nfunction calculateCharge(aaSequence, pH) {\n    if (! pH) pH=7.0;\n    var combined=combine(aaSequence);\n    if (!combined) return;\n    var charge=calculateForPh(combined, pH);\n    return Math.round(charge*1000)/1000;\n}\n\n// this methods required an array of aas\n\nfunction calculateIEP(aas) {\n    var combined=combine(aas);\n    if (!combined) return;\n    var first=0;\n    var last=14;\n    var current=14;\n    var previous=0;\n    var currentCharge;\n    while (Math.abs(current-previous)>0.0001) {\n        previous=current;\n        current=(last + first) / 2;\n        currentCharge=calculateForPh(combined, current);\n        if (currentCharge>0) {\n            first=current;\n        } else if (currentCharge<0) {\n            last=current;\n        } else {\n            previous=current;\n        }\n    }\n    return Math.round(current*1000)/1000;\n}\n\nfunction calculateChart(aas) {\n    var combined=combine(aas);\n    if (!combined) return;\n    var y=[];\n    var yAbs=[];\n    for (var i=0; i<=14; i=i+0.01) {\n        var charge=calculateForPh(combined, i);\n        y.push(charge);\n        yAbs.push(Math.abs(charge));\n    }\n    combined.y=y;\n    combined.yAbs=yAbs;\n\n    return combined;\n}\n\n\nfunction calculateForPh(combined, pH) {\n    var total=0;\n    total+=1/(1+Math.pow(10,pH-combined.first));\n    total+=-1/(1+Math.pow(10,combined.last-pH));\n    for (var key in combined.acid) {\n        total+=-combined.acid[key]/(1+Math.pow(10,aaObject[key].sc.pKa-pH));\n    }\n    for (var key in combined.basic) {\n        total+=combined.basic[key]/(1+Math.pow(10,pH-aaObject[key].sc.pKa));\n    }\n    return total;\n}\n\n// we will combine the amino acids\nfunction combine(aaSequence) {\n    var combined={};\n    if (aaObject[aaSequence[0]]) {\n        combined.first=aaObject[aaSequence[0]].pKaN;\n    } else {\n        return;\n    }\n    if (aaObject[aaSequence[aaSequence.length-1]]) {\n        combined.last=aaObject[aaSequence[aaSequence.length-1]].pKaC;\n    } else {\n        return;\n    }\n    combined.basic={};\n    combined.acid={};\n    for (var i=0; i<aaSequence.length; i++) {\n        var aa=aaSequence[i];\n        if (! aaObject[aa]) return;\n        if (aaObject[aa].sc && aaObject[aa].sc.type) {\n            if (aaObject[aa].sc.type==\"positive\") {\n                if (!combined.basic[aa]) {\n                    combined.basic[aa] = 0;\n                }\n                combined.basic[aa]++;\n            } else if (aaObject[aa].sc.type==\"negative\") {\n                if (!combined.acid[aa]) {\n                    combined.acid[aa] = 0;\n                }\n                combined.acid[aa]++;\n            }\n        }\n    }\n    return combined;\n}\n\n\n\nmodule.exports={\n    calculateIEP: calculateIEP,\n    calculateCharge: calculateCharge,\n    calculateChart: calculateChart\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peptide/src/isoElectricPoint.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar CC = require('chemcalc');\nvar Similarity = require('peaks-similarity');\n\nfunction MfProcessor(experimental, options) {\n    // we will clone the options to be sure ...\n    this.options = JSON.parse(JSON.stringify(options || {}));\n    this.options.isotopomers = 'arrayXYXY';\n    // init with options ans experimental spectrum\n    this.options.zone = this.options.zone || {};\n    if (!this.options.zone.low) this.options.zone.low = -0.5;\n    if (!this.options.zone.high) this.options.zone.high = 4.5;\n\n    if (this.options.decimalsMass) this.factorMass = Math.pow(10, this.options.decimalsMass);\n    if (this.options.decimalsPPM) this.factorPPM = Math.pow(10, this.options.decimalsPPM);\n\n    this.widthFunction=undefined;\n    if (this.options.widthFunction) {\n         this.widthFunction = new Function('mass', 'charge',\n            this.options.widthFunction + \";\"+\n            \"return {widthBottom: widthBottom, widthTop: widthTop};\"\n         );\n\n    }\n\n\n    this.similarity = new Similarity({\n        widthTop: this.options.widthTop,\n        widthBottom: this.options.widthBottom,\n        common: this.options.common\n    });\n    this.similarity.setPeaks1(experimental);\n}\n\nMfProcessor.prototype.process = function (mf, result) {\n    // we allow to add information on an existing result\n    result = result || {};\n    var ccResult = CC.analyseMF(mf, this.options);\n\n    var charge = Math.abs(ccResult.parts[0].charge || 1);\n    var target = ccResult.parts[0].msem || ccResult.parts[0].em;\n\n    var from, to;\n    if (this.options.from && this.options.to) {\n        from = this.options.from;\n        to = this.options.to;\n    } else {\n        from = target + this.options.zone.low / charge;\n        to = target + this.options.zone.high / charge;\n    }\n\n    if (this.widthFunction) {\n        var width=this.widthFunction(target, charge)\n        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n    }\n\n\n    this.similarity.setFromTo(from, to);\n    this.similarity.setPeaks2(ccResult.arrayXYXY);\n\n    var similarityResult = this.similarity.getSimilarity();\n\n    if (!result.em) result.em = ccResult.em;\n    if (!result.info) result.info = mf;\n    if (!result.mf) result.mf = ccResult.mf;\n    if (!result.charge) result.charge = ccResult.parts[0].charge || 0;\n    if (!result.msem) result.msem = ccResult.parts[0].msem || 0;\n    result.fromTo = {from: from, to: to};\n    result.extract = similarityResult.extract2;\n    result.extractInfo = similarityResult.extractInfo2;\n    result.diff = similarityResult.diff;\n    result.similarity = Math.floor(similarityResult.similarity * 1e4) / 1e2;\n    result.color = 'hsla(' + Math.round(similarityResult.similarity * 120) + ',100%,60%,0.6)';\n    if (this.options.addExperimentalExtract) {\n        result.extractExperimental = similarityResult.extract1;\n        result.extractInfoExperimental = similarityResult.extractInfo1;\n    }\n\n    if (this.factorPPM) result.ppm = Math.round(result.ppm * this.factorPPM) / this.factorPPM;\n    if (this.factorMass) result.em = Math.round(result.em * this.factorMass) / this.factorMass;\n    if (this.factorMass && result.msem) result.msem = Math.round(result.msem * this.factorMass) / this.factorMass;\n\n    return result;\n};\n\nmodule.exports = MfProcessor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/MfProcessor.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nconst COMMON_NO=0;\nconst COMMON_FIRST=1;\nconst COMMON_SECOND=2;\nconst COMMON_BOTH=3; // should be a binary operation !\n\n\nmodule.exports = function Comparator(options) {\n    \n    var widthTop, widthBottom, from, to;\n    var array1Extract, array2Extract, widthSlope, array1ExtractInfo, array2ExtractInfo;\n    var common, commonFactor;\n\n    setOptions(options);\n\n    var array1=[];\n    var array2=[];\n \n    /*\n     2 formats are allowed:\n     [[x1,x2,...],[y1,y2,...]] or [[x1,y1],[x2,y2], ...]\n    */\n\n    function setOptions(newOptions) {\n        options=newOptions || {};\n        if (typeof options.common === 'string') {\n            if (options.common.toLowerCase()==='first') {\n                common=COMMON_FIRST;\n            } else if (options.common.toLowerCase()==='second') {\n                common=COMMON_SECOND;\n            } else {\n                common=COMMON_BOTH;\n            }\n        } else {\n            if (options.common) {\n                common=COMMON_BOTH;\n            } else {\n                common=COMMON_NO;\n            }\n\n        }\n        commonFactor=options.commonFactor || commonFactor || 4;\n\n        if (options.widthBottom==undefined) {\n            options.widthBottom=widthBottom || 2;\n        }\n        if (options.widthTop==undefined) {\n            options.widthTop=widthTop || 1;\n        }\n        setTrapezoid(options.widthBottom, options.widthTop);\n        setFromTo(options.from || from, options.to || to);\n    }\n\n    function setPeaks1(anArray) {\n        array1=checkArray(anArray);\n        if (common) {\n            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n            array1Extract=extracts.data1;\n            array1ExtractInfo=extracts.info1;\n            array2Extract=extracts.data2;\n            array2ExtractInfo=extracts.info2;\n        } else {\n            var extract=extractAndNormalize(array1, from, to);\n            array1Extract=extract.data;\n            array1ExtractInfo=extract.info;\n        }\n    }\n    function setPeaks2(anArray) {\n        array2=checkArray(anArray);\n        if (common) {\n            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n            array1Extract=extracts.data1;\n            array1ExtractInfo=extracts.info1;\n            array2Extract=extracts.data2;\n            array2ExtractInfo=extracts.info2;\n        } else {\n            var extract = extractAndNormalize(array2, from, to);\n            array2Extract = extract.data;\n            array2ExtractInfo = extract.info;\n        }\n    }\n\n    function getExtract1() {\n        return array1Extract;\n    }\n\n    function getExtract2() {\n        return array2Extract;\n    }\n\n\n    function getExtractInfo1() {\n        return array1ExtractInfo;\n    }\n\n    function getExtractInfo2() {\n        return array2ExtractInfo;\n    }\n\n    function setTrapezoid(newWidthBottom, newWidthTop) {\n        widthTop=newWidthTop;\n        widthBottom=newWidthBottom;\n        widthSlope=(widthBottom-widthTop)/2;\n        if (widthBottom<widthTop) throw \"widthBottom has to be larger than widthTop\";\n    }\n\n    function setFromTo(newFrom, newTo) {\n        if (newFrom===from && newTo===to) return\n        from=newFrom;\n        to=newTo;\n        if (common) {\n            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common, commonFactor);\n            array1Extract=extracts.data1;\n            array1ExtractInfo=extracts.info1;\n            array2Extract=extracts.data2;\n            array2ExtractInfo=extracts.info2;\n        } else {\n            var extract=extractAndNormalize(array1, from, to);\n            array1Extract=extract.data;\n            array1ExtractInfo=extract.info;\n            var extract=extractAndNormalize(array2, from, to);\n            array2Extract=extract.data;\n            array2ExtractInfo=extract.info;\n        }\n    }\n\n\n    function getOverlap(x1, y1, x2, y2) {\n        if (y1===0 || y2===0) return 0;\n\n        // TAKE CARE !!! We multiply the diff by 2 !!!\n        var diff=Math.abs(x1-x2)*2;\n\n        if (diff>widthBottom) return 0;\n        if (diff<=widthTop) {\n            return Math.min(y1,y2);\n        }\n\n        var maxValue=Math.max(y1,y2)*(widthBottom-diff)/(widthBottom-widthTop);\n        return Math.min(y1, y2, maxValue);\n\n        return NaN;\n    }\n\n    // This is the old trapezoid similarity\n    function getOverlapTrapezoid(x1, y1, x2, y2) {\n        var factor=2/(widthTop+widthBottom); // correction for surface=1\n        if (y1===0 || y2===0) return 0;\n        if (x1===x2) { // they have the same position\n            return Math.min(y1,y2);\n        }\n\n        var diff=Math.abs(x1-x2);\n        if (diff>=widthBottom) return 0;\n        if (y1===y2) { // do they have the same height ???\n            // we need to find the common length\n            if (diff<=widthTop) {\n                return (((widthTop+widthBottom)/2-diff)*y1)*factor;\n            } else if (diff<=widthBottom) {\n                return (widthBottom-diff)*y1/2*(diff-widthTop)/(widthBottom-widthTop)*factor;\n            }\n            return 0;\n        } else { // the height are different and not the same position ...\n            // we need to consider only one segment to find its intersection\n\n            var small=Math.min(y1,y2);\n            var big=Math.max(y1,y2);\n\n            var targets=[\n                [[0,0],[widthSlope,small]],\n                [[widthSlope,small],[widthSlope+widthTop,small]],\n                [[widthTop+widthSlope,small],[widthBottom,0]]\n            ];\n            if ((x1>x2 && y1>y2) || (x1<x2 && y1<y2)) {\n                var segment=[[diff,0],[diff+widthSlope,big]];\n            } else {\n                var segment=[[diff+widthSlope,big],[diff,0]];\n            }\n\n\n\n            for (var i=0; i<3; i++) {\n                var intersection=getIntersection(targets[i],segment);\n                if (intersection) {\n                    switch (i) {\n                        case 0:\n                            return small-((diff*intersection.y/2))*factor;\n                        case 1: // to simplify ...\n                            //     console.log(\"           \",widthSlope,small,big,intersection.x)\n                            return ((widthSlope*small/(2*big))*small+\n                                (widthTop+widthSlope-intersection.x)*small+\n                                widthSlope*small/2)*factor;\n                        case 2:\n                            return ((widthBottom-diff)*intersection.y/2)*factor;\n                    }\n                }\n            }\n        }\n        return NaN;\n    }\n\n\n\n    // this method calculates the total diff. The sum of positive value will yield to overlap\n    function calculateDiff() {\n        // we need to take 2 pointers\n        // and travel progressively between them ...\n        var newSecond=[];\n        for (var i=0; i<array2Extract.length; i++) {\n            newSecond.push([array2Extract[i][0],array2Extract[i][1]]);\n        }\n        var newFirst=[];\n        for (var i=0; i<array1Extract.length; i++) {\n            newFirst.push([array1Extract[i][0],array1Extract[i][1]]);\n        }\n\n        var pos1=0;\n        var pos2=0;\n        var previous2=0;\n        while (pos1<newFirst.length) {\n            var diff=newFirst[pos1][0]-array2Extract[pos2][0];\n            if (Math.abs(diff)<widthBottom) { // there is some overlap\n                if (options.trapezoid) {\n                    var overlap=getOverlapTrapezoid(newFirst[pos1][0], newFirst[pos1][1], newSecond[pos2][0], newSecond[pos2][1], widthTop, widthBottom);\n\n                } else {\n                    var overlap=getOverlap(newFirst[pos1][0], newFirst[pos1][1], newSecond[pos2][0], newSecond[pos2][1], widthTop, widthBottom);\n                }\n                newFirst[pos1][1]-=overlap;\n                newSecond[pos2][1]-=overlap;\n                if (pos2<(array2Extract.length-1)) {\n                    pos2++;\n                } else {\n                    pos1++;\n                    pos2=previous2;\n                }\n            } else {\n                if (diff>0 && pos2<(array2Extract.length-1)) {\n                    pos2++;\n                    previous2=pos2;\n                } else {\n                    pos1++;\n                    pos2=previous2;\n                }\n            }\n        }\n        return newSecond;\n    }\n\n\n    /*\n        This code requires the use of an array like  [[x1,y1],[x2,y2], ...]\n        If it is not the right format, we will just convert it\n        Otherwise we return the correct format\n     */\n    function checkArray(points) {\n        // if it is already a 2D array of points, we just return them\n        if (Array.isArray(points) && Array.isArray(points[0]) && points[0].length===2) return points;\n        var xs=points[0];\n        var ys=points[1];\n        var array=[];\n        for (var i=0; i<xs.length; i++) {\n            array.push([xs[i],ys[i]]);\n        }\n        return array;\n    }\n\n    function getSimilarity(newPeaks1, newPeaks2) {\n        if (newPeaks1) setPeaks1(newPeaks1);\n        if (newPeaks2) setPeaks2(newPeaks2);\n        var result={};\n        result.diff=calculateDiff();\n        result.extract1=getExtract1();\n        result.extract2=getExtract2();\n        result.extractInfo1=getExtractInfo1();\n        result.extractInfo2=getExtractInfo2();\n        result.similarity=calculateOverlapFromDiff(result.diff);\n        return result;\n    }\n\n    this.setPeaks1 = setPeaks1;\n    this.setPeaks2 = setPeaks2;\n    this.getExtract1 = getExtract1;\n    this.getExtract2 = getExtract2;\n    this.getExtractInfo1 = getExtractInfo1;\n    this.getExtractInfo2 = getExtractInfo2;\n    this.setFromTo = setFromTo;\n    this.setOptions = setOptions;\n    this.setTrapezoid = setTrapezoid;\n    this.getSimilarity = getSimilarity;\n    this.getCommonArray = getCommonArray;\n};\n\n\n// returns an new array based on array1 where there is a peak of array2 at a distance under width/2\nfunction getCommonArray(array1, array2, width) {\n    var newArray=[];\n    var pos2=0;\n    width/=2;\n    var j=0;\n\n    for (var i=0; i<array1.length; i++) {\n        while (pos2<array2.length && (array1[i][0]>(array2[pos2][0]+width))) {\n            pos2++;\n        }\n        if ((pos2<array2.length) && (array1[i][0]>array2[pos2][0]-width)) {\n            newArray[j++]=array1[i];\n        }\n    }\n    return newArray;\n}\n\n\n// Adapted from: http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect/1968345#1968345\nfunction getIntersection(segment1, segment2) {\n    var p0_x=segment1[0][0];\n    var p0_y=segment1[0][1];\n    var p1_x=segment1[1][0];\n    var p1_y=segment1[1][1];\n    var p2_x=segment2[0][0];\n    var p2_y=segment2[0][1];\n    var p3_x=segment2[1][0];\n    var p3_y=segment2[1][1];\n\n    var s1_x, s1_y, s2_x, s2_y;\n    s1_x = p1_x - p0_x;\n    s1_y = p1_y - p0_y;\n    s2_x = p3_x - p2_x;\n    s2_y = p3_y - p2_y;\n    var s, t;\n    s = (-s1_y * (p0_x - p2_x) + s1_x * (p0_y - p2_y)) / (-s2_x * s1_y + s1_x * s2_y);\n    t = ( s2_x * (p0_y - p2_y) - s2_y * (p0_x - p2_x)) / (-s2_x * s1_y + s1_x * s2_y);\n    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n        return {\n            x:p0_x + (t * s1_x),\n            y:p0_y + (t * s1_y)\n        }\n    }\n    return null; // No collision\n}\n\nfunction normalize(array) {\n    var sum=0;\n    var min=Number.MAX_VALUE;\n    var max=Number.MIN_VALUE;\n    for (var i=0; i<array.length; i++) {\n        sum+=array[i][1];\n        if (array[i][1]<min) min=array[i][1];\n        if (array[i][1]>max) max=array[i][1];\n    }\n    if (sum!=0) {\n        for (var i=0; i<array.length; i++) {\n            array[i][1]/=sum;\n        }\n    }\n    return {\n        sum: sum,\n        min: min,\n        max: max\n    };\n}\n\n// this method will systemtatically take care of both array\nfunction commonExtractAndNormalize(array1, array2, width, from, to, common) {\n    if (! (Array.isArray(array1)) || ! (Array.isArray(array2))) return {\n        info: undefined,\n        data: undefined\n    };\n    var extract1=extract(array1, from, to);\n    var extract2=extract(array2, from, to);\n    var common1, common2, info1, info2;\n    if (common & COMMON_SECOND) {\n        common1=getCommonArray(extract1, extract2, width);\n        info1=normalize(common1);\n    } else {\n        common1=extract1;\n        info1=normalize(common1);\n    }\n    if (common & COMMON_FIRST) {\n        common2=getCommonArray(extract2, extract1, width);\n        info2=normalize(common2);\n    } else {\n        common2=extract2;\n        info2=normalize(common2);\n    }\n\n    return {\n        info1: info1,\n        info2: info2,\n        data1: common1,\n        data2: common2\n    }\n}\n\nfunction extract(array, from, to) {\n    var newArray=[];\n    var j=0;\n    for (var i=0; i<array.length; i++) {\n        if ( (! from || array[i][0]>=from)  && (! to || array[i][0]<=to)) {\n            newArray[j++] = [array[i][0], array[i][1]];\n        }\n    }\n    return newArray;\n}\n\nfunction extractAndNormalize(array, from, to) {\n    if (! (Array.isArray(array))) return {\n        info: undefined,\n        data: undefined\n    };\n    var newArray=extract(array, from, to);\n    var info=normalize(newArray);\n    return {\n        info: info,\n        data: newArray\n    };\n}\n\nfunction calculateOverlapFromDiff(diffs) {\n    var sumPos=0;\n    for (var i=0; i<diffs.length; i++) {\n        sumPos+=Math.abs(diffs[i][1]);\n    }\n    return 1-sumPos;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peaks-similarity/src/index.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nvar Stat=require('ml-stat');\n\nmodule.exports=massPeakPicking;\n\n\nfunction massPeakPicking(x, y) {\n\n// we calculate the noise\n    var noiseLevel=Stat.array.median(y.filter(function(a) {return (a>0)}))*3;\n\n    console.log(noiseLevel);\n\n    return gsd(x, y, {\n        noiseLevel: noiseLevel\n    });\n}\n\nfunction gsd(x, y, options){\n    options=options || {};\n    if (options.minMaxRatio===undefined) options.minMaxRatio=0.00025;\n    if (options.noiseLevel===undefined) options.noiseLevel=0;;\n\n    if (options.noiseLevel>0) {\n        y=[].concat(y);\n        for (var i=0; i<y.length; i++){\n            if(Math.abs(y[i])<options.noiseLevel) {\n                y[i]=0;\n            }\n        }\n    }\n\n    // fill convolution frequency axis\n    var X = [];//x[2:(x.length-2)];\n\n    // fill Savitzky-Golay polynomes\n    var size= x.length-4;\n    var Y = new Array(size);\n    var dY = new Array(size);\n    var ddY = new Array(size);\n\n    //var dx = x[1]-x[0];\n\n    for (var j = 2; j < size+2; j++) {\n        var dx = x[j]-x[j-1];\n        Y[j-2]=(1/35.0)*(-3*y[j-2] + 12*y[j-1] + 17*y[j] + 12*y[j+1] - 3*y[j+2]);\n        X[j-2]=x[j];\n        dY[j-2]=(1/(12*dx))*(y[j-2] - 8*y[j-1] + 8*y[j+1] - y[j+2]);\n        ddY[j-2]=(1/(7*dx*dx))*(2*y[j-2] - y[j-1] - 2*y[j] - y[j+1] + 2*y[j+2]);\n    }\n\n    var maxDdy=0;\n    //console.log(Y.length);\n    for (var i = 0; i < Y.length ; i++){\n        if(Math.abs(ddY[i])>maxDdy){\n            maxDdy = Math.abs(ddY[i]);\n        }\n    }\n    //console.log(maxY+\"x\"+maxDy+\"x\"+maxDdy);\n    var minddY = [];\n    var intervals = [];\n    var stackInt = [];\n    for (var i = 1; i < Y.length -1 ; i++){\n        if ((dY[i] < dY[i-1]) && (dY[i] <= dY[i+1])||\n            (dY[i] <= dY[i-1]) && (dY[i] < dY[i+1])) {\n            console.log(X[i])\n            stackInt.push(X[i]);\n        }\n\n        if ((dY[i] >= dY[i-1]) && (dY[i] > dY[i+1])||\n            (dY[i] > dY[i-1]) && (dY[i] >= dY[i+1])) {\n            try{\n                intervals.push( [X[i] , stackInt.pop()] );\n            }\n            catch(e){\n                console.log(\"Error I don't know why \"+e);\n            }\n        }\n\n        if ((ddY[i] < ddY[i-1]) && (ddY[i] < ddY[i+1])) {\n            minddY.push( [X[i], Y[i], i] );  // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n        }\n    }\n\n\n    var signals = [];\n\n    Y.sort(function(a, b){return b-a});\n\n    for (var j = 0; j < minddY.length; j++){\n        var f = minddY[j];\n        var frequency = f[0];\n        var possible = [];\n        for (var k=0; k<intervals.length; k++){\n            var i = intervals[k];\n            if(Math.abs(frequency-(i[0]+i[1])/2)<Math.abs(i[0]-i[1])/2)\n                possible.push(i);\n        }\n        console.log(possible);\n        //console.log(\"possible \"+possible.length);\n        if (possible.length > 0)\n            if (possible.length == 1)\n            {\n                var inter = possible[0];\n                var linewidth = Math.abs(inter[1] - inter[0]);\n                var height = f[1];\n                console.log(height, options.minMaxRatio, Y[0]);\n                if (Math.abs(height) > options.minMaxRatio*Y[0]) {\n                    signals.push({\n                        x: frequency,\n                        y: height,\n                        width: linewidth\n                    })\n                }\n            }\n            else\n            {\n                //TODO: nested peaks\n                console.log(\"Nested \"+possible);\n            }\n    }\n\n    signals.sort(function (a, b) {\n        return a.x - b.x;\n    });\n\n    return signals;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/massPeakPicking.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ml-stat/index.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = Infinity;\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice();\n        values.sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw \"Vectors do not have the same dimensions\";\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    }\n    else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    }\n    else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof(eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = values.slice();\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof(standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ml-stat/array.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\nvar arrayStat = require('./array');\n\n// https://github.com/accord-net/framework/blob/development/Sources/Accord.Statistics/Tools.cs\n\nfunction entropy(matrix, eps) {\n    if (typeof(eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n}\n\nfunction mean(matrix, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n}\n\nfunction standardDeviation(matrix, means, unbiased) {\n    var vari = variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n}\n\nfunction variance(matrix, means, unbiased) {\n    if (typeof(unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n}\n\nfunction median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort();\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n}\n\nfunction mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n}\n\nfunction skewness(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n}\n\nfunction kurtosis(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n}\n\nfunction standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = standardDeviation(matrix), l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n}\n\nfunction covariance(matrix, dimension) {\n    return scatter(matrix, undefined, dimension);\n}\n\nfunction scatter(matrix, divisor, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof(divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = mean(matrix, dimension),\n        rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nfunction correlation(matrix) {\n    var means = mean(matrix),\n        standardDeviations = standardDeviation(matrix, true, means),\n        scores = zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n}\n\nfunction zScores(matrix, means, standardDeviations) {\n    means = means || mean(matrix);\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix, true, means);\n    return standardize(center(matrix, means, false), standardDeviations, true);\n}\n\nfunction center(matrix, means, inPlace) {\n    means = means || mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n}\n\nfunction standardize(matrix, standardDeviations, inPlace) {\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction weightedVariance(matrix, weights) {\n    var means = mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n}\n\nfunction weightedMean(matrix, weights, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n}\n\nfunction weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return weightedScatter(matrix, weights, means, factor, dimension);\n}\n\nfunction weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    if (typeof(factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nmodule.exports = {\n    entropy: entropy,\n    mean: mean,\n    standardDeviation: standardDeviation,\n    variance: variance,\n    median: median,\n    mode: mode,\n    skewness: skewness,\n    kurtosis: kurtosis,\n    standardError: standardError,\n    covariance: covariance,\n    scatter: scatter,\n    correlation: correlation,\n    zScores: zScores,\n    center: center,\n    standardize: standardize,\n    weightedVariance: weightedVariance,\n    weightedMean: weightedMean,\n    weightedCovariance: weightedCovariance,\n    weightedScatter: weightedScatter\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ml-stat/matrix.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}