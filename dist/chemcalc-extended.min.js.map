{"version":3,"sources":["webpack:///chemcalc-extended/webpack/universalModuleDefinition","webpack:///chemcalc-extended/chemcalc-extended.min.js","webpack:///chemcalc-extended/webpack/bootstrap 020333c991dafa31ddcf","webpack:///chemcalc-extended/./src/index.js","webpack:///chemcalc-extended/./~/chemcalc/dist/chemcalc.js","webpack:///chemcalc-extended/./~/peptide/src/index.js","webpack:///chemcalc-extended/./~/peptide/src/amino_acid.js","webpack:///chemcalc-extended/./~/peptide/src/isoElectricPoint.js","webpack:///chemcalc-extended/./src/MfProcessor.js","webpack:///chemcalc-extended/./~/peaks-similarity/src/index.js","webpack:///chemcalc-extended/./~/ml-stat/index.js","webpack:///chemcalc-extended/./~/ml-stat/array.js","webpack:///chemcalc-extended/./~/ml-stat/matrix.js","webpack:///chemcalc-extended/./src/SimilarityProcessor.js","webpack:///chemcalc-extended/./src/MFSimilarityProcessor.js","webpack:///chemcalc-extended/./src/massPeakPicking.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","CC","PEP","MfProcessor","SimilarityProcessor","MFSimilarityProcessor","massPeakPicking","CE","analyseMF","getInfo","mfFromMonoisotopicMass","mfFromMonoisotopicMassSimilarity","mass","experimental","options","mfResults","processor","results","i","length","result","process","mf","value","extractExperimental","similarity","getExtract1","matchMFs","mfsArray","addExperimentalExtract","maxResults","minSimilarity","isNaN","mfs","combineMFs","push","parts","bestResults","bestOf","newResults","sort","a","b","slice","j","Math","abs","msem","charge","getEutrophicationPotential","chemcalc","atoms","ea","mw","nC","nO","nN","nP","nH","atom","element","number","log","vRef","mwRef","thOD","v","ep","type","convertAASequence","sequence","chargePeptide","generatePeptideFragments","keys","appendResult","currents","comments","key","indexOf","replace","join","Array","isArray","sizes","position","evolution","__WEBPACK_AMD_DEFINE_RESULT__","global","getExports","$wnd","noop","Qg","Lg","db","dd","hc","qc","qp","Xp","cq","eq","Hr","Hs","il","yc","tc","sb","mb","Xo","Oo","Xh","Pc","Yc","hd","ud","fi","Ri","fj","qn","Nn","Sn","Wn","_n","In","Bo","Go","Lo","bu","Oc","pu","nb","Oh","Kb","Od","nd","zd","Uc","_c","gd","Gd","bn","up","cn","bh","h","dh","l","eh","$h","dj","Bj","xk","vp","wp","Oq","Cq","mq","Lq","dr","Sq","ai","Pp","Hp","Fs","tr","Xb","Tb","Ub","vb","ub","cd","bd","ec","dc","pp","op","ku","ju","zp","Gu","Mu","td","$r","g","$","ad","tb","Zh","_h","bi","cj","Cj","rb","Dj","nk","uk","yk","mk","sk","tk","Fr","wt","_r","It","Xi","lr","sj","fe","Dd","Fd","Id","Rd","Di","Jj","wj","xj","Bp","Qh","tM","qh","ph","rh","oh","mc","lc","kc","o","lq","lk","pk","qk","ui","ti","k","ur","eb","f","Mh","Kh","_p","$p","bq","hk","ek","gk","Qb","Eb","Hb","rj","zr","Gn","Us","e","Vs","d","Fn","G","Ch","Cd","Xc","Wc","Vc","vo","uo","fr","vj","tj","ceil","Aj","sqrt","ce","be","so","X","to","Xm","Rq","Qo","Cp","Wm","Or","Zi","Gm","lo","eo","yq","vq","tp","_gwt_modCount","dp","splice","ej","gj","$d","uj","floor","zj","round","U","ee","Lj","Pb","clearTimeout","Cl","hl","Dl","mo","Sr","Xr","Sd","$e","Ru","Rt","Dc","Ic","cr","ok","Zd","kh","Vg","Tg","Ug","Qq","jb","gi","yj","pow","fh","Vu","Wu","Nb","$H","Fb","Vj","ef","Ij","charCodeAt","Wj","substr","Ju","rd","sh","Rg","yp","Jg","Ig","Og","Jq","Vp","Rk","Lk","Fc","Br","Cr","Nr","Jr","Ur","Rh","setTimeout","Nu","Sh","Vo","Pd","Rj","Sj","Mj","lastIndexOf","an","Z","Qi","_d","pi","de","nj","toString","pc","parseInt","Hi","Rn","vn","T","$n","Ko","co","Ar","Hn","or","Ac","Bc","Th","Zt","gt","ht","Ps","Os","Ib","apply","$j","Zj","t","Nj","String","fromCharCode","ck","Wi","isFinite","ae","Ai","xi","yi","Li","Ro","Ec","Ao","Gc","Vq","Fu","Mc","Bi","Pk","Sk","qj","pj","We","Error","stackTraceLimit","ut","vt","Td","Ud","Po","Hc","_m","fn","Dp","Rm","gs","cb","hb","sp","un","O","Zr","mr","ei","ci","Mg","dn","en","lh","vh","Yt","Xt","us","ts","ys","nr","pr","Lc","Nc","pd","sd","ic","Ap","Ep","Object","getOwnPropertyNames","iq","cZ","me","gn","hn","Fp","jh","wh","Eh","xp","fb","Pq","R","S","Ml","Bh","ql","rk","fu","du","qd","Cc","Jc","kk","fk","di","Fo","W","zi","Ln","Ct","Du","zl","gb","Oj","RegExp","test","tu","qu","vu","Ht","Gt","Ft","ge","max","min","Ou","ni","match","vk","Ob","Vh","Uh","Mn","wn","Vn","rr","sr","dk","Uj","Yj","Bb","Ab","u","Yd","cM","jk","hC","oi","sm","mm","lm","rm","rl","vm","Pj","Xj","Rr","Vd","ig","Kr","Lr","Mr","Fi","C","prototype","_b","Wh","Ej","Mp","$f","kl","ob","n","ro","Lb","Jb","Mb","arguments","eQ","r","undefined","tl","Nl","Ql","vl","nl","Uo","hm","ke","im","cm","dm","Wd","ac","$b","Zb","Sg","Su","Tu","To","Gr","dg","Qt","xb","Lu","Hm","Fm","kf","Em","ym","xm","zm","Cm","Am","Bm","Dm","gl","nm","zb","Date","now","getTime","Yo","gc","Jh","Fh","Gh","Uu","Hh","nh","Ih","Qk","Tk","Ll","yl","Hu","su","M","er","fc","jc","Cu","Si","So","kq","Bd","Ad","Hd","hq","al","Fk","Mk","Kl","Xs","Il","qi","toLowerCase","ri","toUpperCase","_","Iu","Lh","od","hasOwnProperty","lj","vi","es","ru","wu","np","Pl","lp","D","N","ir","ks","fs","s","Ot","Ds","Pt","Es","Ut","Vt","Jt","Wt","ol","Km","F","ct","Pi","Hg","Gg","Ku","Fg","__gwt$exception","Ph","window","jq","mu","iu","mt","lt","nt","rt","uh","br","oc","exec","Xu","Ok","Hk","Jk","toPrecision","boolean","string","object","Ed","function","kr","_g","kj","Qd","__elementTypeId$","__elementTypeCategory$","Xg","yh","$g","Zg","Im","gp","cv","mh","lb","tS","ih","Ah","uu","zu","ml","xl","bl","dl","js","si","_t","Tt","ss","nv","ws","Ws","pl","mi","Zk","Gk","Number","NaN","ik","Jm","oj","ul","om","qm","pm","ip","Y","hp","Yb","xs","Qm","K","As","Nk","Kk","Wo","st","hs","Js","Gl","fl","Lp","Ls","Kj","Ng","Wg","Ol","gr","hr","nc","mp","Mt","mv","vs","hh","Fe","Gb","Tj","li","Zu","Ki","Kt","lu","jl","em","xh","th","fv","Bl","$s","Rb","bk","_u","rs","bc","ak","dt","jr","Q","Pm","L","J","ms","ot","pt","yu","zs","qt","Lm","Wk","$k","Al","au","gh","Vb","cc","he","Sb","$t","Nh","$moduleName","$moduleBase","Eg","fm","um","cl","wm","V","jp","wk","kp","gu","eu","je","av","exp","xu","tt","is","Xd","concat","qr","At","create","aq","kt","Oi","Ni","parseFloat","Rl","Cs","zh","hu","St","wb","name","message","Gp","sl","wl","Ks","Kg","constructor","valueOf","Wb","Cb","Db","Bu","dv","B","w","A","split","bt","ft","_j","Qs","Qj","Bt","Vl","ds","tm","gm","bm","ah","Pg","substring","execScript","shift","Dk","Ek","Vk","Ns","ls","el","jf","Ms","et","jm","km","bv","Yu","_s","at","Ul","Tl","Sl","Dh","Au","Lt","$u","ll","Zl","Yl","Ik","ev","$l","am","_l","zt","Yg","navigator","userAgent","$doc","documentMode","index","lastIndex","gv","Wl","Xl","Ak","Nt","Bs","q","jt","uc","yt","zk","hf","ie","Bk","Ck","H","Pe","I","P","ab","bb","Dg","document","$gwt","__gwtModuleFunction","__moduleStartupDone","$sendStats","Pu",3,9,"Qu",6,28,"hv",35,"iv",37,27,"jv",51,"kv",50,"lv",18,29,26,"gC",116,2,38,"fnStack","callee","caller","af","__gwt$backingJsError","stack",66,8,54,11,52,44,7,19,20,31,14,5,24,53,"ib","kb",40,32,"pg",39,4,"nu","aa","gwtOnLoad","__errFn","__moduleName","__moduleBase","__softPermutationId","__computePropValue","permProps","toReturn","version","isBrowser","globalEnv","self","fakeWindow","bind","setInterval","clearInterval","aa1To3","code","aa1","aa3","converAA1To3","newmf","charAt","addNTerm","nTerm","addCTerm","cTerm","x","y","z","IEP","console","calculateIEP","aas","calculateIEPChart","calculateChart","mfparts","search","tmpmf","sc","pKaC","pKaN","pKa","calculateCharge","aaSequence","pH","combined","combine","calculateForPh","currentCharge","first","last","current","previous","yAbs","total","acid","aaObject","basic","isotopomers","zone","low","high","decimalsMass","factorMass","decimalsPPM","factorPPM","widthFunction","Function","Similarity","widthTop","widthBottom","common","setPeaks1","from","ccResult","target","width","setTrapezoid","setFromTo","setPeaks2","arrayXXYY","similarityResult","getSimilarity","info","fromTo","extract","extract2","extractInfo","extractInfo2","diff","color","extract1","extractInfoExperimental","extractInfo1","ppm","getCommonArray","array1","array2","newArray","pos2","array1Length","array2Length","getIntersection","segment1","segment2","s1_x","s1_y","s2_x","s2_y","p0_x","p0_y","p1_x","p1_y","p2_x","p2_y","p3_x","p3_y","normalize","array","Stat","sum","commonExtractAndNormalize","data","common1","common2","info1","info2","COMMON_SECOND","COMMON_FIRST","data1","data2","extractAndNormalize","calculateOverlapFromDiff","diffs","sumPos","COMMON_NO","COMMON_BOTH","setOptions","newOptions","commonFactor","anArray","checkArray","extracts","array1Extract","array1ExtractInfo","array2Extract","array2ExtractInfo","getExtract2","getExtractInfo1","getExtractInfo2","newWidthBottom","newWidthTop","widthSlope","newFrom","newTo","getOverlap","x1","y1","x2","y2","maxValue","getOverlapTrapezoid","factor","small","big","targets","segment","intersection","calculateDiff","newFirst","newSecond","pos1","previous2","trapezoid","overlap","points","newPeaks1","newPeaks2","fastSimilarity","matrix","compareNumbers","values","Infinity","minMax","arithmeticMean","mean","geometricMean","mul","logMean","lnsum","grandMean","means","samples","truncatedMean","percent","alreadySorted","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","standardDeviation","standardError","quartiles","quart","q1","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","kurtosis","s4","m4","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","center","inPlace","standardize","standardDev","cumulativeSum","l1","l2","dimension","rows","cols","sum1","sum2","medians","modes","skew","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","correlation","scores","zScores","cor","jj","row","resultRow","sourceRow","ii","weightSum","arrayStat","weightedCovariance","s1","weightedScatter","spectrum","theoretical","xTheoretical","yTheoretical","sumY","before","firstX","noiseLevel","filter","gsd","minMaxRatio","size","dY","ddY","dx","maxDdy","minddY","intervals","stackInt","pop","signals","frequency","possible","inter","linewidth","height"],"mappings":"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","file":"chemcalc-extended.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chemcalcExtended\"] = factory();\n\telse\n\t\troot[\"chemcalcExtended\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chemcalcExtended\"] = factory();\n\telse\n\t\troot[\"chemcalcExtended\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\tvar CC = __webpack_require__(1);\n\tvar PEP = __webpack_require__(2);\n\tvar MfProcessor = exports.MfProcessor = __webpack_require__(5);\n\texports.SimilarityProcessor = __webpack_require__(10);\n\texports.MFSimilarityProcessor = __webpack_require__(11);\n\t\n\tvar massPeakPicking = __webpack_require__(12);\n\t\n\tvar CE = exports;\n\t\n\tCE.analyseMF = CC.analyseMF;\n\tCE.getInfo = CC.getInfo;\n\tCE.mfFromMonoisotopicMass = CC.mfFromMonoisotopicMass;\n\t\n\t/*\n\t mfFromMonoisotopicMassSimilarity\n\t We will extend mfFromMonoisotopicMass in order to include in the options:\n\t * experimental : an array of [[x1,y1],[x2,y2],...] or [[x1,x2,x3,...][y1,y2,y3,...]]\n\t * widthTop : top width of the trapezoid\n\t * widthBottom : bottom width of the trapezoid\n\t * from : mass \"from\" which calculate the similarity\n\t * to : mass \"to\" which calculate the similarity\n\t * As an alternative the from / to parameters can be calculated based target mass\n\t *\n\t * decimalsPPM : number of decimals for PPM\n\t * decimalsMass : number odecimals for the mass\n\t */\n\tCE.mfFromMonoisotopicMassSimilarity = function (mass, experimental, options) {\n\t    var mfResults = CC.mfFromMonoisotopicMass(mass, options);\n\t\n\t    var processor = new MfProcessor(experimental, options);\n\t\n\t\n\t    var results = mfResults.results;\n\t    for (var i = 0; i < results.length; i++) {\n\t        var result = results[i];\n\t        processor.process(result.mf.value, result);\n\t    }\n\t    mfResults.extractExperimental = processor.similarity.getExtract1();\n\t    return mfResults;\n\t};\n\t\n\t\n\tCE.matchMFs = function (mfsArray, experimental, options) {\n\t    options = options || {};\n\t    options.addExperimentalExtract = true;\n\t    options.maxResults = options.maxResults || 500;\n\t    options.minSimilarity = (isNaN(options.minSimilarity)) ? 50 : options.minSimilarity;\n\t\n\t    var processor = new MfProcessor(experimental, options);\n\t    var mfs = CE.combineMFs(mfsArray);\n\t\n\t    var results = [];\n\t    for (var i = 0; i < mfs.length; i++) {\n\t        var result = processor.process(mfs[i].mf);\n\t        results.push(result);\n\t        result.parts = mfs[i];\n\t        if (results.length > options.maxResults * 2) {\n\t            results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n\t        }\n\t    }\n\t    results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n\t    return {options: options, results: results};\n\t};\n\t\n\t/* we have 2 criteria to find the best results\n\t 1. best match per zone based on the bestOf parameter\n\t 2. maxResults : maximal number of results\n\t */\n\tCE.bestResults = function (results, bestOf, maxResults, minSimilarity) {\n\t    var newResults = [];\n\t\n\t    // in order to find the bestOf we will sort by similarity and take all of them for which there is nothing in a range\n\t    // of the bestOf range\n\t\n\t    results.sort(function (a, b) {\n\t        return b.similarity - a.similarity;\n\t    });\n\t\n\t    if (minSimilarity) {\n\t        for (var i = 0; i < results.length; i++) {\n\t            if (results[i].similarity < minSimilarity) {\n\t                results = results.slice(0, i);\n\t                break;\n\t            }\n\t        }\n\t    }\n\t\n\t    if (bestOf) {\n\t        for (var i = 0; i < results.length && newResults.length < maxResults; i++) {\n\t            for (var j = 0; j < newResults.length; j++) {\n\t                if (Math.abs(newResults[j].msem - results[i].msem) < (bestOf / (results[i].charge || 1))) {\n\t                    break;\n\t                }\n\t            }\n\t            if (j == newResults.length) {\n\t                newResults.push(results[i]);\n\t            }\n\t        }\n\t    } else {\n\t        newResults = results.slice(0, maxResults);\n\t    }\n\t\n\t    return newResults;\n\t};\n\t\n\t\n\tCE.getEutrophicationPotential = function (mf) {\n\t    var chemcalc = CC.analyseMF(mf);\n\t    var atoms = chemcalc.parts[0].ea;\n\t    var mw = chemcalc.mw;\n\t    var nC = 0, nO = 0, nN = 0, nP = 0, nH = 0;\n\t    for (var i = 0; i < atoms.length; i++) {\n\t        var atom = atoms[i];\n\t        switch (atom.element) {\n\t            case 'C':\n\t                nC = atom.number;\n\t                break;\n\t            case 'N':\n\t                nN = atom.number;\n\t                break;\n\t            case 'O':\n\t                nO = atom.number;\n\t                break;\n\t            case 'H':\n\t                nH = atom.number;\n\t                break;\n\t            case 'P':\n\t                nP = atom.number;\n\t                break;\n\t            default:\n\t                return {log: 'EP can not be calculated because the MF contains the element: ' + atom.element};\n\t        }\n\t    }\n\t\n\t    var vRef = 1;\n\t    var mwRef = 94.97;\n\t\n\t    var thOD = nC + (nH - 3 * nN) / 4 - nO / 2;\n\t    var v = nP + nN / 16 + thOD / 138;\n\t    var ep = (v / mw) / (vRef / mwRef);\n\t\n\t    return {\n\t        v: v,\n\t        thOD: thOD,\n\t        ep: ep,\n\t        mf: {type: 'mf', value: mf},\n\t        mw: chemcalc.mw,\n\t        log: 'Successful calculation'\n\t    };\n\t};\n\t\n\t\n\tCE.convertAASequence = function (sequence) {\n\t    return PEP.convertAASequence(sequence);\n\t}\n\t\n\tCE.chargePeptide = function (sequence) {\n\t    return PEP.chargePeptide(sequence);\n\t}\n\t\n\t\n\tCE.generatePeptideFragments = function (sequence, options) {\n\t    return PEP.generatePeptideFragments(sequence, options);\n\t}\n\t\n\tCE.combineMFs = function (keys) {\n\t    function appendResult(results, currents, keys) {\n\t        // this script is designed to combine molecular formula\n\t        // that may contain comments after a \"$\" sign\n\t        // therefore we should put all the comments at the ned\n\t        var result = {mf: ''};\n\t        var comments = [];\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i][currents[i]];\n\t            if (key) {\n\t                result['part' + (i + 1)] = key;\n\t                if (key.indexOf('$') > -1) {\n\t                    comments.push(key.replace(/^[^$]*\\$/, ''));\n\t                    key = key.replace(/\\$.*/, '');\n\t                }\n\t                result.mf += key;\n\t            }\n\t        }\n\t\n\t        if (comments.length > 0) result.mf += '$' + comments.join(' ');\n\t\n\t        results.push(result);\n\t    }\n\t\n\t    if (!Array.isArray(keys)) return [];\n\t    if (!Array.isArray(keys[0])) keys = [keys];\n\t    var results = [];\n\t    var sizes = new Array(keys.length);\n\t    var currents = new Array(keys.length);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        sizes[i] = keys[i].length - 1;\n\t        currents[i] = 0;\n\t    }\n\t    var position = 0;\n\t    var evolution = 0;\n\t\n\t    while (position < currents.length) {\n\t        if (currents[position] < sizes[position]) {\n\t            evolution++;\n\t            appendResult(results, currents, keys);\n\t            currents[position]++;\n\t            for (var i = 0; i < position; i++) {\n\t                currents[i] = 0;\n\t            }\n\t            position = 0;\n\t        } else {\n\t            position++;\n\t        }\n\t    }\n\t    appendResult(results, currents, keys);\n\t    return results;\n\t};\n\t\n\t\n\tCE.massPeakPicking = massPeakPicking;\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * chemcalc - Analyse molecular formula\n\t * @version v3.0.6\n\t * @date 2015-09-03T07:03:35.477Z\n\t * @link http://www.chemcalc.org\n\t * @license BSD\n\t*/\n\t(function () {\n\t    'use strict';\n\t\n\t    function getExports($wnd) {\n\t\n\t        var $doc = $wnd.document;\n\t        var $gwt = {};\n\t        var navigator = {\n\t            userAgent: 'webkit'\n\t        };\n\t\n\t        function noop(){}\n\t\n\t        var __gwtModuleFunction = noop;\n\t        __gwtModuleFunction.__moduleStartupDone = noop;\n\t        var $sendStats = noop;\n\t        var $moduleName, $moduleBase;\n\t\n\t        // Start GWT code \n\tfunction Qg(){}\n\tfunction Lg(){}\n\tfunction db(){}\n\tfunction dd(){}\n\tfunction hc(){}\n\tfunction qc(){}\n\tfunction qp(){}\n\tfunction Xp(){}\n\tfunction cq(){}\n\tfunction eq(){}\n\tfunction Hr(){}\n\tfunction Hs(){}\n\tfunction il(a){}\n\tfunction yc(){tc()}\n\tfunction sb(){mb(this)}\n\tfunction Xo(){Oo(this)}\n\tfunction Xh(a){this.a=a}\n\tfunction Pc(a){this.a=a}\n\tfunction Yc(a){this.a=a}\n\tfunction hd(a){this.a=a}\n\tfunction ud(a){this.a=a}\n\tfunction fi(a){this.a=a}\n\tfunction Ri(a){this.a=a}\n\tfunction fj(a){this.a=a}\n\tfunction qn(a){this.a=a}\n\tfunction Nn(a){this.a=a}\n\tfunction Sn(a){this.a=a}\n\tfunction Wn(a){this.a=a}\n\tfunction _n(a){this.a=a}\n\tfunction In(a){this.c=a}\n\tfunction Bo(a){this.a=a}\n\tfunction Go(a){this.a=a}\n\tfunction Lo(a){this.a=a}\n\tfunction bu(a){this.a=a}\n\tfunction Oc(){this.a=[]}\n\tfunction pu(){this.nb()}\n\tfunction Oh(){return Kb}\n\tfunction Od(a){return a.a}\n\tfunction nd(a){return a.a}\n\tfunction zd(a){return a.a}\n\tfunction Uc(a){return a.a}\n\tfunction _c(a){return a.a}\n\tfunction gd(){return null}\n\tfunction Gd(){return null}\n\tfunction bn(a){++a.b;up(a)}\n\tfunction cn(a){--a.b;up(a)}\n\tfunction bh(a,b){a.h=b}\n\tfunction dh(a,b){a.l=b}\n\tfunction eh(a,b){a.m=b}\n\tfunction $h(){sb.call(this)}\n\tfunction dj(){sb.call(this)}\n\tfunction Bj(){sb.call(this)}\n\tfunction xk(){sb.call(this)}\n\tfunction vp(){sb.call(this)}\n\tfunction wp(){sb.call(this)}\n\tfunction Oq(){sb.call(this)}\n\tfunction Cq(){mq.call(this)}\n\tfunction Lq(){mq.call(this)}\n\tfunction dr(){Sq.call(this)}\n\tfunction ai(){$h.call(this)}\n\tfunction Pp(){Hp.call(this)}\n\tfunction Fs(){tr.call(this)}\n\tfunction Xb(){Tb();Ub(this)}\n\tfunction vb(){vb=Lg;ub=new db}\n\tfunction cd(){cd=Lg;bd=new dd}\n\tfunction ec(){ec=Lg;dc=new hc}\n\tfunction pp(){pp=Lg;op=new qp}\n\tfunction ku(){ku=Lg;ju=new zp}\n\tfunction Gu(){this.a=new Oc}\n\tfunction Mu(){this.a=new td}\n\tfunction Sq(){this.a=new Xo}\n\tfunction $r(){this.g=new tr}\n\tfunction Hp(){this.a=this.$()}\n\tfunction ad(a){tb.call(this,a)}\n\tfunction Zh(a){tb.call(this,a)}\n\tfunction _h(a){tb.call(this,a)}\n\tfunction bi(a){tb.call(this,a)}\n\tfunction cj(a){tb.call(this,a)}\n\tfunction Cj(a){tb.call(this,a)}\n\tfunction tb(a){rb.call(this,a)}\n\tfunction Dj(a){cj.call(this,a)}\n\tfunction nk(a){Xh.call(this,a)}\n\tfunction uk(a){Xh.call(this,a)}\n\tfunction yk(a){tb.call(this,a)}\n\tfunction mk(){Xh.call(this,'')}\n\tfunction sk(){Xh.call(this,'')}\n\tfunction tk(){Xh.call(this,'')}\n\tfunction td(){ud.call(this,{})}\n\tfunction Fr(a){Bo.call(this,a)}\n\tfunction wt(a){_r.call(this,a)}\n\tfunction It(a){rb.call(this,a)}\n\tfunction Xi(a){return isNaN(a)}\n\tfunction lr(a){return !!a&&a.b}\n\tfunction sj(a){return a<0?-a:a}\n\tfunction fe(a){return a<<24>>24}\n\tfunction Dd(a){return new hd(a)}\n\tfunction Fd(a){return new Id(a)}\n\tfunction Rd(a,b){return Di(a,b)}\n\tfunction Jj(a,b){return a===b}\n\tfunction wj(a,b){return a>b?a:b}\n\tfunction xj(a,b){return a<b?a:b}\n\tfunction Bp(b,a){return b.a[a]}\n\tfunction Qh(a){return a.tM===Qg}\n\tfunction qh(a,b){return !ph(a,b)}\n\tfunction rh(a,b){return !oh(a,b)}\n\tfunction mc(a,b){lc();kc.o(a,b)}\n\tfunction lq(c,a,b){c.a[a]=b}\n\tfunction lk(a,b){a.a+=b;return a}\n\tfunction pk(a,b){a.a+=b;return a}\n\tfunction qk(a,b){a.a+=b;return a}\n\tfunction ui(a){ti(a);return a.k}\n\tfunction _r(a){this.g=new ur(a)}\n\tfunction mq(){this.a=this.eb()}\n\tfunction rb(a){this.f=a;mb(this)}\n\tfunction Mh(){Kh==null&&(Kh=[])}\n\tfunction _p(){_p=Lg;$p=bq()}\n\tfunction hk(){hk=Lg;ek={};gk={}}\n\tfunction Qb(){Eb!=0&&(Eb=0);Hb=-1}\n\tfunction rj(a){return a<=0?0-a:a}\n\tfunction zr(a){return a.b=Gn(a.a)}\n\tfunction Us(a){return a.a.e*a.a.c}\n\tfunction Vs(a){return a.a.e*a.a.d}\n\tfunction Fn(a){return a.a<a.c.G()}\n\tfunction Ch(a){return a.l|a.m<<22}\n\tfunction Cd(a){return Xc(),a?Wc:Vc}\n\tfunction vo(a){return uo(a,fr(a))}\n\tfunction vj(a){return Math.log(a)}\n\tfunction tj(a){return Math.ceil(a)}\n\tfunction Aj(a){return Math.sqrt(a)}\n\tfunction ce(a){return be(a)&&Qh(a)}\n\tfunction so(a,b){return !!a.X(b)}\n\tfunction to(a,b){return Xm(a.X(b))}\n\tfunction Rq(a,b){return Qo(a.a,b)}\n\tfunction Cp(b,a){return b.a[a]||[]}\n\tfunction Wm(a){return !a?null:a.c}\n\tfunction tr(){ur.call(this,null)}\n\tfunction Or(a,b){Zi.call(this,a,b)}\n\tfunction Gm(a,b){Zi.call(this,a,b)}\n\tfunction lo(a,b){eo.call(this,a,b)}\n\tfunction eo(a,b){this.c=a;this.d=b}\n\tfunction Zi(a,b){this.a=a;this.b=b}\n\tfunction yq(a,b){this.a=a;this.b=b}\n\tfunction vq(a,b){this.b=a;this.c=b}\n\tfunction tp(a,b){a._gwt_modCount=b}\n\tfunction dp(a,b,c){a.splice(b,c)}\n\tfunction ej(a,b){return gj(a.a,b.a)}\n\tfunction $d(a){return !be(a)&&Qh(a)}\n\tfunction uj(a){return Math.floor(a)}\n\tfunction zj(a){return Math.round(a)}\n\tfunction Xm(a){return !a?null:a.U()}\n\tfunction ee(a){return a==null?null:a}\n\tfunction Lj(b,a){return b.indexOf(a)}\n\tfunction Pb(a){$wnd.clearTimeout(a)}\n\tfunction Cl(a){hl();Dl.call(this,a)}\n\tfunction mo(a){eo.call(this,a.c,a.d)}\n\tfunction Sr(){Or.call(this,'Head',1)}\n\tfunction Xr(){Or.call(this,'Tail',3)}\n\tfunction Oo(a){a.b=Sd($e,Ru,1,0,3,1)}\n\tfunction Rt(a){a.b=a.d.b;a.c=new Fs}\n\tfunction Dc(a){if(!a){throw new Oq}}\n\tfunction Ic(a){if(!a){throw new dj}}\n\tfunction cr(a,b){Qo(a.a,b);return b}\n\tfunction ok(a,b){a.a+=Zd(b);return a}\n\tfunction ep(a,b,c,d){a.splice(b,c,d)}\n\tfunction kh(a,b){return Vg(a,b,false)}\n\tfunction Tg(a){return Ug(a.l,a.m,a.h)}\n\tfunction Qq(a){return a!=null?jb(a):0}\n\tfunction gj(a,b){return a<b?-1:a>b?1:0}\n\tfunction gi(a,b){return a==b?0:a?1:-1}\n\tfunction yj(a,b){return Math.pow(a,b)}\n\tfunction be(a){return Array.isArray(a)}\n\tfunction fh(a){return a.l+a.m*Vu+a.h*Wu}\n\tfunction Nb(a){return a.$H||(a.$H=++Fb)}\n\tfunction Vj(a){return Sd(ef,Ru,2,a,4,1)}\n\tfunction Ij(b,a){return b.charCodeAt(a)}\n\tfunction Wj(a,b,c){return a.substr(b,c)}\n\tfunction Ug(a,b,c){return {l:a,m:b,h:c}}\n\tfunction Ju(a,b,c){rd(a.a,b,c);return a}\n\tfunction sh(a,b){Vg(a,b,true);return Rg}\n\tfunction yp(a){var b;b=jb(a);return ~~b}\n\tfunction Jg(a){var b=Ig;return Og(b[a])}\n\tfunction Jq(a){this.a=a;Xo.call(this)}\n\tfunction Vp(a){this.a=a;Xo.call(this)}\n\tfunction Rk(a){this.e=5;Lk(this,Fc(a))}\n\tfunction Br(a){Cr.call(this,a,(Nr(),Jr))}\n\tfunction Ur(){Or.call(this,'Range',2)}\n\tfunction Rh(){$wnd.setTimeout(Nu(Sh))}\n\tfunction Vo(a){return Pd(a.b,a.b.length)}\n\tfunction Rj(a,b){return Wj(a,b,a.length-b)}\n\tfunction Sj(a,b,c){return a.substr(b,c-b)}\n\tfunction Mj(b,a){return b.lastIndexOf(a)}\n\tfunction an(a,b){return a.c.Z(b)||a.a.Z(b)}\n\tfunction Qi(a,b){return _d(b,7)&&b.a==a.a}\n\tfunction pi(a){return a>=56320&&a<=57343}\n\tfunction de(a){return typeof a==='string'}\n\tfunction nj(a,b){return (a>>>0).toString(b)}\n\tfunction pc(a){lc();return parseInt(a)||-1}\n\tfunction ti(a){if(a.k!=null){return}Hi(a)}\n\tfunction Rn(a){var b;b=vn(a.a);return b.T()}\n\tfunction $n(a){var b;b=vn(a.a);return b.U()}\n\tfunction Ko(a){var b;b=zr(a.a);return b.T()}\n\tfunction co(a,b){var c;c=a.d;a.d=b;return c}\n\tfunction mb(a){a.g=null;mc(a,a.f);return a}\n\tfunction Ar(a){Hn(a.a);or(a.c,a.b);a.b=null}\n\tfunction Ac(a,b){if(!a){throw new bi(''+b)}}\n\tfunction Bc(a,b){if(!a){throw new cj(''+b)}}\n\tfunction Th(a,b){this.e=b;this.f=a;mb(this)}\n\tfunction Zt(a,b){this.d=a;Rt(this);this.c=b}\n\tfunction gt(a,b,c){ht.call(this,a,b,c,true)}\n\tfunction Ps(a,b,c,d){Os.call(this,a,0,b,c,d)}\n\tfunction Ib(a,b,c){return a.apply(b,c);var d}\n\tfunction $j(a,b){return de(a)?Zj(a,b):a.t(b)}\n\tfunction Nj(c,a,b){return c.lastIndexOf(a,b)}\n\tfunction Zd(a){return String.fromCharCode(a)}\n\tfunction ck(a){return String.fromCharCode(a)}\n\tfunction Wi(a){return !isFinite(a)&&!isNaN(a)}\n\tfunction ae(a){return a!=null&&!de(a)&&!Qh(a)}\n\tfunction Ai(){var a;a=xi(null);a.e=2;return a}\n\tfunction yi(a){var b;b=xi(a);Li(a,b);return b}\n\tfunction Qo(a,b){a.b[a.b.length]=b;return true}\n\tfunction Ro(a,b){Ec(b,a.b.length);return a.b[b]}\n\tfunction Ao(a){if(!a){throw new Oq}return a.c}\n\tfunction Fc(a){if(a==null){throw new Bj}return a}\n\tfunction Gc(a,b){if(a==null){throw new Cj(''+b)}}\n\tfunction Id(a){if(a==null){throw new Bj}this.a=a}\n\tfunction Vq(a,b){if(a<0||a>=b){throw new ai}}\n\tfunction Fu(a,b){Mc(a.a,a.a.a.length,b);return a}\n\tfunction Bi(a){var b;b=xi(a);b.j=a;b.e=1;return b}\n\tfunction Pk(a){this.f=a;this.e=5;this.a=Sk(a)}\n\tfunction qj(){qj=Lg;pj=Sd(We,Ru,19,256,0,1)}\n\tfunction tc(){tc=Lg;Error.stackTraceLimit=64}\n\tfunction ut(a,b,c){vt.call(this,a,b,c,1,true)}\n\tfunction Td(a,b,c,d,e,f){return Ud(a,b,c,d,e,0,f)}\n\tfunction Po(a,b,c){Hc(b,a.b.length);ep(a.b,b,0,c)}\n\tfunction _m(a,b){return de(b)?fn(a,b):!!Dp(a.a,b)}\n\tfunction Rm(a,b){return b===a?'(this Map)':''+b}\n\tfunction gs(a){return a.a!=0?'['+a.a+a.i+']':a.i}\n\tfunction cb(a){return ui(hb(a))+'@'+nj(jb(a),16)}\n\tfunction vn(a){return sp(a.c,a),Dc(un(a)),a.a.O()}\n\tfunction Zr(a,b){return mr(a.g,b,(ei(),ci))==null}\n\tfunction Mg(a){return a instanceof Array?a[0]:null}\n\tfunction dn(a,b){return de(b)?en(a,b):Xm(Dp(a.a,b))}\n\tfunction lh(a,b){return a.l==b.l&&a.m==b.m&&a.h==b.h}\n\tfunction vh(a,b){return a.l!=b.l||a.m!=b.m||a.h!=b.h}\n\tfunction Yt(a,b){b<1.0E-10&&(b=1.0E-10);a.b=b}\n\tfunction Xt(a,b,c,d){us(a.c,d);ts(a.c,c);ys(a.c,b)}\n\tfunction nr(a,b){var c;c=new Hr;pr(a,b,c);return c.d}\n\tfunction Mc(a,b,c){var d;d=Lc(a,b);Nc(a,b,c);return d}\n\tfunction rd(a,b,c){var d;d=pd(a,b);sd(a,b,c);return d}\n\tfunction ic(a,b){!a&&(a=[]);a[a.length]=b;return a}\n\tfunction Zj(a,b){if(a==b){return 0}return a<b?-1:1}\n\tfunction Ap(c,a){var b=c.a;return b[a]||(b[a]=[])}\n\tfunction up(a){var b;b=a._gwt_modCount|0;tp(a,b+1)}\n\tfunction Ep(a){return Object.getOwnPropertyNames(a.a)}\n\tfunction iq(a){return Object.getOwnPropertyNames(a.a)}\n\tfunction hb(a){return de(a)?ef:$d(a)?a.cZ:ce(a)?a.cZ:me}\n\tfunction gn(a,b,c){return de(b)?hn(a,b,c):Fp(a.a,b,c)}\n\tfunction jh(a,b){return {l:a.l&b.l,m:a.m&b.m,h:a.h&b.h}}\n\tfunction wh(a,b){return {l:a.l|b.l,m:a.m|b.m,h:a.h|b.h}}\n\tfunction Eh(a,b){return {l:a.l^b.l,m:a.m^b.m,h:a.h^b.h}}\n\tfunction xp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\n\tfunction Pq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\n\tfunction uo(a,b){!!b&&or(a,b);return !b?null:new mo(b)}\n\tfunction Gn(a){Dc(a.a<a.c.G());return a.c.R(a.b=a.a++)}\n\tfunction Hn(a){Ic(a.b!=-1);a.c.S(a.b);a.a=a.b;a.b=-1}\n\tfunction Lk(a,b){a.c=b;a.a=Ml(b);a.a<54&&(a.f=Bh(ql(b)))}\n\tfunction rk(a,b,c){a.a=Sj(a.a,0,b)+c+Rj(a.a,b);return a}\n\tfunction fu(a){if(fn(du,a)){return en(du,a)}return null}\n\tfunction pd(a,b){if(b==null){throw new Bj}return qd(a,b)}\n\tfunction Cc(a,b){if(!a){throw new cj(Jc('%s > %s',b))}}\n\tfunction kk(){if(fk==256){ek=gk;gk={};fk=0}++fk}\n\tfunction ei(){ei=Lg;ci=new fi(false);di=new fi(true)}\n\tfunction Xc(){Xc=Lg;Vc=new Yc(false);Wc=new Yc(true)}\n\tfunction Fo(a){var b;b=(new Fr(a.a)).a.W();return new Lo(b)}\n\tfunction zi(a,b){var c;c=xi(a);Li(a,c);c.e=b?8:0;return c}\n\tfunction Ln(a){In.call(this,a);Hc(0,a.b.length);this.a=0}\n\tfunction Ct(a,b,c,d){this.c=a;this.b=b;this.d=c;this.a=d}\n\tfunction Du(a,b,c,d){this.a=a;this.c=b;this.b=d;this.d=c}\n\tfunction zl(a,b,c){hl();il(this);this.e=a;this.d=b;this.a=c}\n\tfunction ur(a){this.c=null;!a&&(a=(pp(),pp(),op));this.b=a}\n\tfunction en(a,b){return b==null?Xm(Dp(a.a,null)):a.c.gb(b)}\n\tfunction hn(a,b,c){return b==null?Fp(a.a,null,c):a.c.jb(b,c)}\n\tfunction Oj(b,a){return (new RegExp('^('+a+')$')).test(b)}\n\tfunction tu(){return qu(vu(new zp,(Ht(),Ht(),Gt),(null,Ft)))}\n\tfunction ge(a){return ~~Math.max(Math.min(a,Ou),-2147483648)}\n\tfunction ni(a){return null!=String.fromCharCode(a).match(/\\d/)}\n\tfunction vk(a){_h.call(this,'String index out of range: '+a)}\n\tfunction Ob(a){$wnd.setTimeout(function(){throw a},0)}\n\tfunction Sh(){var a;a=Vh();if(!Jj('safari',a)){throw new Uh(a)}}\n\tfunction Mn(a){var b;b=new wn((new qn(a.a)).a);return new Sn(b)}\n\tfunction Vn(a){var b;b=new wn((new qn(a.a)).a);return new _n(b)}\n\tfunction rr(a,b){var c;c=1-b;a.a[c]=sr(a.a[c],c);return sr(a,b)}\n\tfunction dk(a,b,c){var d;d=b+c;Uj(a.length,b,d);return Yj(a,b,d)}\n\tfunction Bb(a,b){var c=Ab[a.charCodeAt(0)];return c==null?a:c}\n\tfunction Di(a,b){var c=a.a=a.a||[];return c[b]||(c[b]=a.u(b))}\n\tfunction _d(a,b){return a!=null&&(de(a)&&!!Yd[b]||a.cM&&!!a.cM[b])}\n\tfunction jb(a){return de(a)?jk(a):$d(a)?a.hC():ce(a)?Nb(a):Nb(a)}\n\tfunction oi(a){return null!=String.fromCharCode(a).match(/[A-Z]/i)}\n\tfunction sm(a,b){mm();return b<lm.length?rm(a,lm[b]):rl(a,vm(b))}\n\tfunction Pj(c,a,b){b=Xj(b);return c.replace(RegExp(a,'g'),b)}\n\tfunction Rr(){Nr();return Vd(Rd(ig,1),Ru,26,0,[Jr,Kr,Lr,Mr])}\n\tfunction Fi(a){if(a.C()){return null}var b=a.j;var c=Ig[b];return c}\n\tfunction Og(a){function b(){}\n\t;b.prototype=a||{};return new b}\n\tfunction _b(a,b,c,d,e,f,g){a+=e+g+(b^c^d);a=a<<f|a>>>-f;return a+b}\n\tfunction Wh(a,b,c,d){b==null&&(b='null');a.a+=b.substr(c,d-c)}\n\tfunction Ej(a,b,c){this.a='Unknown';this.d=a;this.b=b;this.c=c}\n\tfunction Mp(a){this.f=a;this.d=Ep(this.f);this.a=Sd($f,Ru,27,0,0,1)}\n\tfunction kl(a){while(a.d>0&&a.a[--a.d]==0);a.a[a.d++]==0&&(a.e=0)}\n\tfunction ob(a){var b,c;b=ui(a.cZ);c=a.n();return c!=null?b+': '+c:b}\n\tfunction ro(a,b){var c,d;c=b.T();d=a.X(c);return !!d&&Pq(d.d,b.U())}\n\tfunction Lb(a,b,c){var d;d=Jb();try{return Ib(a,b,c)}finally{Mb(d)}}\n\tfunction Kb(b){return function(){return Lb(b,this,arguments);var a}}\n\tfunction fb(a,b){return de(a)?Jj(a,b):$d(a)?a.eQ(b):ce(a)?a===b:a===b}\n\tfunction sd(d,a,b){if(b){var c=b.r();d.a[a]=c(b)}else{delete d.a[a]}}\n\tfunction Nc(d,a,b){if(b){var c=b.r();b=c(b)}else{b=undefined}d.a[a]=b}\n\tfunction sp(a,b){if(b._gwt_modCount!=a._gwt_modCount){throw new vp}}\n\tfunction Hc(a,b){if(a<0||a>b){throw new _h('Index: '+a+', Size: '+b)}}\n\tfunction Ec(a,b){if(a<0||a>=b){throw new _h('Index: '+a+', Size: '+b)}}\n\tfunction tl(a,b){if(b==0||a.e==0){return a}return b>0?Nl(a,b):Ql(a,-b)}\n\tfunction vl(a,b){if(b==0||a.e==0){return a}return b>0?Ql(a,b):Nl(a,-b)}\n\tfunction nl(a,b){var c;for(c=a.d-1;c>=0&&a.a[c]==b[c];c--);return c<0}\n\tfunction Uo(a,b,c){var d;d=(Ec(b,a.b.length),a.b[b]);a.b[b]=c;return d}\n\tfunction hm(a,b,c,d){var e;e=Sd(ke,Ru,0,b,7,1);im(e,a,b,c,d);return e}\n\tfunction cm(a,b,c,d){var e;e=Sd(ke,Ru,0,b+1,7,1);dm(e,a,b,c,d);return e}\n\tfunction Sd(a,b,c,d,e,f){var g;g=Wd(e,d);Vd(Rd(a,f),b,c,e,g);return g}\n\tfunction ac(a,b,c,d,e,f,g){a+=e+g+(c^(b|~d));a=a<<f|a>>>-f;return a+b}\n\tfunction $b(a,b,c,d,e,f,g){a+=e+g+(c^d&(b^c));a=a<<f|a>>>-f;return a+b}\n\tfunction Zb(a,b,c,d,e,f,g){a+=e+g+(d^b&(c^d));a=a<<f|a>>>-f;return a+b}\n\tfunction Sg(a){var b,c,d;b=a&Su;c=a>>22&Su;d=a<0?Tu:0;return Ug(b,c,d)}\n\tfunction or(a,b){var c;c=new Hr;c.c=true;c.d=b.U();return pr(a,b.T(),c)}\n\tfunction To(a,b){var c;c=(Ec(b,a.b.length),a.b[b]);dp(a.b,b,1);return c}\n\tfunction Gr(a,b){lo.call(this,a,b);this.a=Sd(dg,Ru,40,2,0,1);this.b=true}\n\tfunction Qt(a,b,c,d){this.g=new zp;this.c=a;this.d=b;this.b=c;this.a=d}\n\tfunction xb(a){vb();this.e=null;this.f=null;this.a='';this.b=a;this.a=''}\n\tfunction fn(a,b){return b==null?!!Dp(a.a,null):!(a.c.gb(b)===undefined)}\n\tfunction Lu(a,b,c){return c==null?Ju(a,b,(cd(),cd(),bd)):Ju(a,b,new Id(c))}\n\tfunction Hm(){Fm();return Vd(Rd(kf,1),Ru,24,0,[Em,ym,xm,zm,Cm,Am,Bm,Dm])}\n\tfunction rl(a,b){if(b.e==0){return gl}if(a.e==0){return gl}return mm(),nm(a,b)}\n\tfunction zb(){if(Date.now){return Date.now()}return (new Date).getTime()}\n\tfunction Yo(){Oo(this);Bc(true,'Initial capacity must not be negative')}\n\tfunction Mb(a){a&&gc((ec(),dc));--Eb;if(a){if(Hb!=-1){Pb(Hb);Hb=-1}}}\n\tfunction Nr(){Nr=Lg;Jr=new Or('All',0);Kr=new Sr;Lr=new Ur;Mr=new Xr}\n\tfunction Jh(){Jh=Lg;Fh=Ug(Su,Su,524287);Gh=Ug(0,0,Uu);Hh=nh(1);nh(2);Ih=nh(0)}\n\tfunction Qk(a,b){this.e=b;this.a=Tk(a);this.a<54?(this.f=Bh(a)):(this.c=Ll(a))}\n\tfunction Os(a,b,c,d,e){this.b=new zp;this.c=a;this.d=b;this.g=c;this.e=d;this.a=e}\n\tfunction yl(a,b){hl();il(this);this.e=a;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[b])}\n\tfunction Hu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,new hd(a[b]))}}\n\tfunction su(a){var b=new zp;if(a){for(var c in a){b.M(c,String(a[c]))}}return b}\n\tfunction er(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[0]){c=b}return c}\n\tfunction fr(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[1]){c=b}return c}\n\tfunction fc(a){var b,c;if(a.a){c=null;do{b=a.a;a.a=null;c=jc(b,c)}while(a.a);a.a=c}}\n\tfunction gc(a){var b,c;if(a.b){c=null;do{b=a.b;a.b=null;c=jc(b,c)}while(a.b);a.b=c}}\n\tfunction Cu(a,b){var c;c=Si(rj(a.a),rj(b.a));if(c!=0)return c;return Zj(a.b,b.b)}\n\tfunction So(a,b,c){for(;c<a.b.length;++c){if(Pq(b,a.b[c])){return c}}return -1}\n\tfunction kq(a,b){var c;c=a.a[b];if(!(c===undefined)){delete a.a[b];cn(a.b)}return c}\n\tfunction Lc(d,a){var b=d.a[a];var c=(Bd(),Ad)[typeof b];return c?c(b):Hd(typeof b)}\n\tfunction Li(a,b){var c;if(!a){return}b.j=a;var d=Fi(b);if(!d){Ig[a]=[b];return}d.cZ=b}\n\tfunction hq(d,a){var b=d.a;for(var c in b){if(d.fb(a,b[c])){return true}}return false}\n\tfunction al(a){if(lh(a,{l:0,m:0,h:0})&&5<Fk.length){return Fk[5]}return new Qk(a,5)}\n\tfunction Mk(a){if(a.a<54){return a.f<0?-1:a.f>0?1:0}return (!a.c&&(a.c=Kl(a.f)),a.c).e}\n\tfunction Xs(a){this.a=a;if(a.d>a.c)throw new It('Error: minCount>maxCount')}\n\tfunction Dl(a){Fc(a);if(!a.length){throw new Dj('Zero length BigInteger')}Il(this,a)}\n\tfunction qi(a){return String.fromCharCode(a).toLowerCase().charCodeAt(0)==a&&oi(a)}\n\tfunction ri(a){return String.fromCharCode(a).toUpperCase().charCodeAt(0)==a&&oi(a)}\n\tfunction wn(a){this.c=a;this.b=this.c.c._();this.a=this.b;tp(this,a._gwt_modCount)}\n\tfunction Iu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,(new Hu(a[b])).a)}}\n\tfunction Lh(){Mh();var a=Kh;for(var b=0;b<arguments.length;b++){a.push(arguments[b])}}\n\tfunction od(e,a){var b=e.a;var c=0;for(var d in b){b.hasOwnProperty(d)&&(a[c++]=d)}return a}\n\tfunction lj(a){var b,c;if(a==0){return 32}else{c=0;for(b=1;(b&a)==0;b<<=1){++c}return c}}\n\tfunction xi(a){var b;b=new vi;b.k='Class$'+(a?'S'+a:''+b.g);b.b=b.k;b.i=b.k;return b}\n\tfunction sr(a,b){var c,d;c=1-b;d=a.a[c];a.a[c]=d.a[b];d.a[b]=a;a.b=true;d.b=false;return d}\n\tfunction es(a,b){var c;if(_d(b,32)){c=b;if(Jj(a.i,c.i)&&a.a==c.a)return true}return false}\n\tfunction ru(a,b){var c;c=su(b);c.c.jb('mf',a);return qu(wu(c,(Ht(),Ht(),Gt),(null,Ft)))}\n\tfunction np(a,b){var c,d;d=a.a.b.length;for(c=0;c<d;c++){Vq(c,a.a.b.length);Uo(a.a,c,b[c])}}\n\tfunction Pl(a,b,c){var d,e,f;d=0;for(e=0;e<c;e++){f=b[e];a[e]=f<<1|d;d=f>>>31}d!=0&&(a[c]=d)}\n\tfunction lp(a){var b,c,d;d=0;for(c=a.D();c.N();){b=c.O();d=d+(b!=null?jb(b):0);d=~~d}return d}\n\tfunction Cr(a,b){var c;this.c=a;c=new Xo;ir(a,c,b,a.c,null,false,null,false);this.a=new Ln(c)}\n\tfunction ks(a){this.i=a.i;this.b=a.b;this.d=a.d;this.c=a.c;this.e=a.e;this.f=a.f;this.a=a.a}\n\tfunction fs(a){if(a.d==a.c)return a.d;throw new tb('Atoms.getCount(): undefined (min!=max)')}\n\tfunction qu(a){if('error' in a.a.a){throw new xb(pd(a.a,'error').s().a)}else{return a.a.a}}\n\tfunction Ot(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Ds(a.e.c)}\n\tfunction Pt(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Es(a.e.c)}\n\tfunction Ut(a,b){if(a.d.f==0){return Vt(a,b)}else if(a.d.f==Jt){return Wt(a,b)}return Vt(a,b)}\n\tfunction un(a){if(a.a.N()){return true}if(a.a!=a.b){return false}a.a=a.c.a._();return a.a.N()}\n\tfunction ol(a){var b;if(a.b==-2){if(a.e==0){b=-1}else{for(b=0;a.a[b]==0;b++);}a.b=b}return a.b}\n\tfunction Km(a,b){var c,d;Fc(b);for(d=b.D();d.N();){c=d.O();if(!a.F(c)){return false}}return true}\n\tfunction ct(b){try{Pi(b);return true}catch(a){a=Hg(a);if(_d(a,20)){return false}else throw Gg(a)}}\n\tfunction Ku(a,b){return !b?Ju(a,'unsaturation',(cd(),cd(),bd)):Ju(a,'unsaturation',new hd(b.a))}\n\tfunction Uj(a,b,c){if(b<0){throw new vk(b)}if(c<b){throw new vk(c-b)}if(c>a){throw new vk(c)}}\n\tfunction Fg(b,c){if(b&&typeof b=='object'){try{b.__gwt$exception=c}catch(a){}}}\n\tfunction Ph(a,b){typeof window==='object'&&typeof window['$gwt']==='object'&&(window['$gwt'][a]=b)}\n\tfunction jq(a,b,c){var d;d=a.a[b];d===undefined&&bn(a.b);lq(a,b,c===undefined?null:c);return d}\n\tfunction mu(a){ku();var b,c;b='61-'+a;if(fn(ju,b))return en(ju,b);c=new iu(a);hn(ju,b,c);return c}\n\tfunction mt(a,b){var c,d;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);if(Jj(c.i,b))return c}return null}\n\tfunction lt(a){var b,c,d;d=nt(a);for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);b.g=rt(b.b*fs(b)*100/d)}}\n\tfunction us(a,b){var c,d,e;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.U().a;e<b&&Ar(c)}}\n\tfunction uh(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;return Ug(b,c,d)}\n\tfunction br(a){var b;b=a.a.b.length;if(b>0){return Vq(b-1,a.a.b.length),a.a.S(b-1)}else{throw new wp}}\n\tfunction oc(a){var b=/function(?:\\s+([\\w$]+))?\\s*\\(/;var c=b.exec(a);return c&&c[1]||'anonymous'}\n\tfunction Si(a,b){if(a<b){return -1}if(a>b){return 1}if(a==b){return 0}return isNaN(a)?isNaN(b)?0:1:-1}\n\tfunction Bh(a){if(lh(a,(Jh(),Gh))){return Xu}if(!ph(a,Ih)){return -fh(uh(a))}return a.l+a.m*Vu+a.h*Wu}\n\tfunction Ok(a){Hk();if(Wi(a)||isNaN(a)){throw new Dj('Infinite or NaN')}Jk(this,a.toPrecision(20))}\n\tfunction zp(){_p();this.a=$p.cb();this.a.b=this;this.c=$p.db();this.c.b=this;this.b=0;up(this)}\n\tfunction Bd(){Bd=Lg;Ad={'boolean':Cd,number:Dd,string:Fd,object:Ed,'function':Ed,undefined:Gd}}\n\tfunction lc(){lc=Lg;var a,b;b=!(!!Error.stackTraceLimit||'stack' in new Error);a=new yc;kc=b?new qc:a}\n\tfunction mr(a,b,c){var d,e;d=new Gr(b,c);e=new Hr;a.c=kr(a,a.c,d,e);e.b||++a.d;a.c.b=false;return e.d}\n\tfunction _g(a){var b,c;c=kj(a.h);if(c==32){b=kj(a.m);return b==32?kj(a.l)+32:b+20-10}else{return c-12}}\n\tfunction Qd(a,b){var c;c=Wd(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\n\tfunction Pd(a,b){var c;c=a.slice(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\n\tfunction Vd(a,b,c,d,e){e.cZ=a;e.cM=b;e.tM=Qg;e.__elementTypeId$=c;e.__elementTypeCategory$=d;return e}\n\tfunction Xg(a,b,c,d,e){var f;f=yh(a,b);c&&$g(f);if(e){a=Zg(a,b);d?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h))}return f}\n\tfunction Im(a,b){var c,d,e;Fc(b);c=false;for(e=b.D();e.N();){d=e.O();c=c|mr(a.g,d,(ei(),ci))==null}return c}\n\tfunction gp(a){var b,c,d,e;e=1;for(c=0,d=a.length;c<d;++c){b=a[c];e=31*e+(b!=null?jb(b):0);e=~~e}return e}\n\tfunction Gg(a){var b;if(_d(a,38)){b=a;if(ee(b.b)!==ee((vb(),ub))){return ee(b.b)===ee(ub)?null:b.b}}return a}\n\tfunction Hg(a){var b;if(_d(a,9)){return a}b=a&&a.__gwt$exception;if(!b){b=new xb(a);mc(b,a);Fg(a,b)}return b}\n\tfunction rt(a){var b;b=isNaN(a*cv)?a*cv:Wi(a*cv)?a*cv:a*cv==0?a*cv:Bh(mh(Math.round(a*cv)));return b/cv}\n\tfunction lb(a){return de(a)?a:$d(a)?a.tS():ce(a)?cb(a):a.toString?a.toString():'[JavaScriptObject]'}\n\tfunction ih(a,b){var c,d,e;c=a.l+b.l;d=a.m+b.m+(c>>22);e=a.h+b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\n\tfunction Ah(a,b){var c,d,e;c=a.l-b.l;d=a.m-b.m+(c>>22);e=a.h-b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\n\tfunction $g(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;dh(a,b);eh(a,c);bh(a,d)}\n\tfunction uu(a,b){var c;c=su(b);c.c.jb('monoisotopicMass',''+a);return qu(zu(c,(Ht(),Ht(),Gt),(null,Ft)))}\n\tfunction ml(a,b){var c;if(a===b){return true}if(_d(b,5)){c=b;return a.e==c.e&&a.d==c.d&&nl(a,c.a)}return false}\n\tfunction Kl(a){hl();if(a<0){if(a!=-1){return new xl(-1,-a)}return bl}else return a<=10?dl[ge(a)]:new xl(1,a)}\n\tfunction Hd(a){Bd();throw new ad(\"Unexpected typeof result '\"+a+\"'; please report this bug to the GWT team\")}\n\tfunction js(a,b,c,d){if(c>d)throw new It('Error: minCount>maxCount');this.i=a;this.b=b;this.d=c;this.c=d}\n\tfunction vi(){this.g=si++;this.k=null;this.i=null;this.f=null;this.d=null;this.b=null;this.j=null;this.a=null}\n\tfunction _t(a,b,c){this.d=a;Rt(this);this.a=c;Tt(this,b);if(b.a!=0){ss(this.c,-b.a*nv);ws(this.c,1/sj(b.a))}}\n\tfunction Ws(a,b,c,d,e,f){a.d=wj(ge(uj((c-f-b-e)/a.a.e)),a.a.d);a.c=xj(ge(tj((c+f-b-d)/a.a.e)),a.a.c);a.b=a.d-1}\n\tfunction pl(a){var b;if(a.c!=0){return a.c}for(b=0;b<a.a.length;b++){a.c=a.c*33+(a.a[b]&-1)}a.c=a.c*a.e;return a.c}\n\tfunction mi(a){if(a>=48&&a<58){return a-48}if(a>=97&&a<97){return a-97+10}if(a>=65&&a<65){return a-65+10}return -1}\n\tfunction Zk(a){var b=Gk;!b&&(b=Gk=/^[+-]?\\d*$/i);if(b.test(a)){return parseInt(a,10)}else{return Number.NaN}}\n\tfunction jk(a){hk();var b=':'+a;var c=gk[b];if(c!=null){return c}c=ek[b];c==null&&(c=ik(a));kk();return gk[b]=c}\n\tfunction Jm(a,b){var c,d;for(d=a.D();d.N();){c=d.O();if(ee(b)===ee(c)||b!=null&&fb(b,c)){return true}}return false}\n\tfunction oj(a){var b,c;if(a>-129&&a<128){b=a+128;c=(qj(),pj)[b];!c&&(c=pj[b]=new fj(a));return c}return new fj(a)}\n\tfunction ul(a){var b,c,d,e;return a.e==0?a:(b=a.d,c=b+1,d=Sd(ke,Ru,0,c,7,1),Pl(d,a.a,b),e=new zl(a.e,c,d),kl(e),e)}\n\tfunction om(a,b,c,d,e){if(b==0||d==0){return}b==1?(e[d]=qm(e,c,d,a[0])):d==1?(e[b]=qm(e,a,b,c[0])):pm(a,c,e,b,d)}\n\tfunction ip(a,b,c,d,e,f,g,h){var i;i=c;while(f<g){i>=d||b<c&&h.Y(a[b],a[i])<=0?(e[f++]=a[b++]):(e[f++]=a[i++])}}\n\tfunction hp(a,b,c,d){var e,f,g;for(e=b+1;e<c;++e){for(f=e;f>b&&d.Y(a[f-1],a[f])>0;--f){g=a[f];a[f]=a[f-1];a[f-1]=g}}}\n\tfunction Yb(a,b){var c,d;for(c=0,d=0;d<16;d++){b[d]=a[c++]&255|(a[c++]&255)<<8|(a[c++]&255)<<16|(a[c++]&255)<<24}}\n\tfunction xs(a,b){var c,d,e,f;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();f=d.U();mr(a,e,new Ri(f.a*b))}}\n\tfunction Qm(a,b){var c,d,e;for(d=a.K().D();d.N();){c=d.O();e=c.T();if(ee(b)===ee(e)||b!=null&&fb(b,e)){return c}}return null}\n\tfunction As(a){var b,c;b=new Ok(a);c=Nk(Kk(b,(Fm(),Fm(),Cm)));if(c.indexOf('.')!=-1){return Pj(c,'\\\\.?0+$','')}return c}\n\tfunction Wo(a,b){var c,d;d=a.b.length;b.length<d&&(b=Qd(b,d));for(c=0;c<d;++c){b[c]=a.b[c]}b.length>d&&(b[d]=null);return b}\n\tfunction st(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,hs(b))}return d.a}\n\tfunction Js(a){var b,c,d;if(a.b.b==0){return}d=0;for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+=b.b*b.d/100}if(d==0)return;a.c=d}\n\tfunction Ml(a){var b,c,d;if(a.e==0){return 0}b=a.d<<5;c=a.a[a.d-1];if(a.e<0){d=ol(a);if(d==a.d-1){--c;c=~~c}}b-=kj(c);return b}\n\tfunction Gl(a){var b,c,d;if(a<fl.length){return fl[a]}c=a>>5;b=a&31;d=Sd(ke,Ru,0,c+1,7,1);d[c]=1<<b;return new zl(1,c+1,d)}\n\tfunction Lp(a){if(a.c<a.a.length){return true}if(a.b<a.d.length-1){a.a=Bp(a.f,a.d[++a.b]);a.c=0;return true}return false}\n\tfunction Ls(a){if(a.d==0)throw new tb('Exact mass of '+a.g+' is unknown. Run calculateExactMass() first.');return a.d}\n\tfunction Kj(b,a){if(a==null){return false}if(b==a){return true}return b.length==a.length&&b.toLowerCase()==a.toLowerCase()}\n\tfunction Ng(){!Array.isArray&&(Array.isArray=function(a){return Object.prototype.toString.call(a)==='[object Array]'})}\n\tfunction Wg(a,b){if(a.h==Uu&&a.m==0&&a.l==0){b&&(Rg=Ug(0,0,0));return Tg((Jh(),Hh))}b&&(Rg=Ug(a.l,a.m,a.h));return Ug(0,0,0)}\n\tfunction Nl(a,b){var c,d,e,f;c=b>>5;b&=31;e=a.d+c+(b==0?0:1);d=Sd(ke,Ru,0,e,7,1);Ol(d,a.a,c,b);f=new zl(a.e,e,d);kl(f);return f}\n\tfunction gr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c>=0){e=e.a[1]}else{d=e;e=e.a[0]}}return d}\n\tfunction hr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c<=0){e=e.a[0]}else{d=e;e=e.a[1]}}return d}\n\tfunction nc(a){var b,c,d;b='mc';d=xj(a.length,5);for(c=0;c<d;c++){if(Jj(a[c].d,b)){return a.length>=c+1&&a.splice(0,c+1),a}}return a}\n\tfunction mp(a){var b,c,d;d=1;for(c=a.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=31*d+(b!=null?jb(b):0);d=~~d}return d}\n\tfunction Mt(a){var b,c,d;b=mv;for(d=new In(a.d.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));c.f>b&&(b=c.f)}Xt(a.e,b,a.b,a.a)}\n\tfunction vs(a){var b,c,d,e,f,g;b=mv;f=0;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();g=d.U().a;if(g>b){b=g;f=e.a}}return f}\n\tfunction nb(a){var b,c,d,e,f;for(e=a;e;e=e.e){for(b=(e.g==null&&(e.g=(lc(),f=kc.p(e),nc(f))),e.g),c=0,d=b.length;c<d;++c);}}\n\tfunction Dp(a,b){var c,d,e,f;for(d=Cp(a,b==null?'0':''+yp(b)),e=0,f=d.length;e<f;++e){c=d[e];if(xp(b,c.T())){return c}}return null}\n\tfunction nh(a){var b,c;if(a>-129&&a<128){b=a+128;hh==null&&(hh=Sd(Fe,Ru,141,256,0,1));c=hh[b];!c&&(c=hh[b]=Sg(a));return c}return Sg(a)}\n\tfunction Jb(){var a;if(Eb!=0){a=zb();if(a-Gb>2000){Gb=a;Hb=$wnd.setTimeout(Qb,10)}}if(Eb++==0){fc((ec(),dc));return true}return false}\n\tfunction Tj(a){if(a.length==0||a[0]>' '&&a[a.length-1]>' '){return a}return a.replace(/^[\\u0000-\\u0020]*|[\\u0000-\\u0020]*$/g,'')}\n\tfunction Tk(a){var b;qh(a,{l:0,m:0,h:0})&&(a={l:~a.l&Su,m:~a.m&Su,h:~a.h&Tu});return 64-(b=Ch(yh(a,32)),b!=0?kj(b):kj(Ch(a))+32)}\n\tfunction li(a,b,c){var d,e;d=Ij(a,b++);if(d>=55296&&d<=56319&&b<c&&pi(e=a.charCodeAt(b))){return Zu+((d&1023)<<10)+(e&1023)}return d}\n\tfunction Yj(a,b,c){var d='';for(var e=b;e<c;){var f=Math.min(e+10000,c);d+=String.fromCharCode.apply(null,a.slice(e,f));e=f}return d}\n\tfunction Ki(a,b){var c=0;while(!b[c]||b[c]==''){c++}var d=b[c++];for(;c<b.length;c++){if(!b[c]||b[c]==''){continue}d+=a+b[c]}return d}\n\tfunction Kt(a,b,c){var d,e,f;f=lu(Pt(a),b,c);e=new Fs;for(d=0;d<f.length;d++){mr(e,new Ri(f[d][0]),new Ri(f[d][1]))}a.e.c=e;a.e.c.a=cv}\n\tfunction jl(a,b){if(a.e>b.e){return 1}if(a.e<b.e){return -1}if(a.d>b.d){return a.e}if(a.d<b.d){return -b.e}return a.e*em(a.a,b.a,a.d)}\n\tfunction qd(f,a){var b=f.a;var c;a=String(a);b.hasOwnProperty(a)&&(c=b[a]);var d=(Bd(),Ad)[typeof c];var e=d?d(c):Hd(typeof c);return e}\n\tfunction ql(a){var b;b=a.d>1?wh(xh(nh(a.a[1]),32),jh(nh(a.a[0]),{l:Su,m:1023,h:0})):jh(nh(a.a[0]),{l:Su,m:1023,h:0});return th(nh(a.e),b)}\n\tfunction em(a,b,c){var d;for(d=c-1;d>=0&&a[d]==b[d];d--);return d<0?0:qh(jh(nh(a[d]),{l:Su,m:1023,h:0}),jh(nh(b[d]),{l:Su,m:1023,h:0}))?-1:1}\n\tfunction xl(a,b){this.e=a;if(b<fv){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[~~b])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[~~(b%fv),~~(b/fv)])}}\n\tfunction Bl(a){hl();il(this);if(a.length==0){this.e=0;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[0])}else{this.e=1;this.d=a.length;this.a=a;kl(this)}}\n\tfunction $s(a){var b,c,d,e;c='';b=new Xb;d=Rb(b,bk(a));for(e=0;e<5;e++){e==0?(c+=Zd(sj(d[0]%26)+65&_u)):(c+=Zd(sj(d[e]%26)+97&_u))}return c}\n\tfunction ss(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a+b),g);Ar(c)}rs(a,d)}\n\tfunction ws(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a*b),g);Ar(c)}rs(a,d)}\n\tfunction rs(a,b){var c,d,e,f,g;e=(new Fr(b)).a.W();while(Fn(e.a)){c=e.b=Gn(e.a);f=c.T();g=c.U();d=to(a,f);!!d&&(g=new Ri(d.a+g.a));mr(a,f,g)}}\n\tfunction bc(a,b){var c,d;for(c=0,d=0;c<4;c++){b[d++]=fe(a[c]&255);b[d++]=fe(a[c]>>>8&255);b[d++]=fe(a[c]>>>16&255);b[d++]=fe(a[c]>>>24&255)}}\n\tfunction ak(a){var b,c;if(a>=Zu){b=55296+(a-Zu>>10&1023)&_u;c=56320+(a-Zu&1023)&_u;return ck(b)+ck(c)}else{return String.fromCharCode(a&_u)}}\n\tfunction ht(a,b,c,d){this.a=b;this.b=c;this.d=new Yo;dt(this,a,d);if(this.d.b.length==0)throw new It('Cannot parse: empty formula: ->'+a+'<-')}\n\tfunction ir(a,b,c,d,e,f,g,h){var i,j;if(!d){return}i=d.a[0];!!i&&ir(a,b,c,i,e,f,g,h);jr(a,c,d.c,e,f,g,h)&&b.Q(d);j=d.a[1];!!j&&ir(a,b,c,j,e,f,g,h)}\n\tfunction Xj(a){var b;b=0;while(0<=(b=a.indexOf('\\\\',b))){a.charCodeAt(b+1)==36?(a=a.substr(0,b)+'$'+Rj(a,++b)):(a=a.substr(0,b)+Rj(a,++b))}return a}\n\tfunction Pm(a,b){var c,d,e;c=b.T();e=b.U();d=a.L(c);if(!(ee(e)===ee(d)||e!=null&&fb(e,d))){return false}if(d==null&&!a.J(c)){return false}return true}\n\tfunction jr(a,b,c,d,e,f,g){var h,i;if(b.lb()&&(h=a.b.Y(c,d),h<0||!e&&h==0)){return false}if(b.mb()&&(i=a.b.Y(c,f),i>0||!g&&i==0)){return false}return true}\n\tfunction ms(a,b,c){if(b>c)throw new It('Error: minCount>maxCount');this.d=b;this.c=c;this.e=ot(a.a);this.f=pt(a.a);this.a=0;this.i=a.b;this.b=nt(a.a)}\n\tfunction Zg(a,b){var c,d,e;if(b<=22){c=a.l&(1<<b)-1;d=e=0}else if(b<=44){c=a.l;d=a.m&(1<<b-22)-1;e=0}else{c=a.l;d=a.m;e=a.h&(1<<b-44)-1}return Ug(c,d,e)}\n\tfunction yu(a){var b,c,d;d=Ll({l:1,m:0,h:0});for(c=new In(a.a);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=rl(d,Ll(nh(b.a.c-b.a.d+1)))}return d}\n\tfunction zs(a){var b,c,d,e,f;e=~~(a.a/2);if(a.d<e)return;f=new _r(new Hs);Im(f,new Fr(a));c=0;for(d=Fo(new Go(f.g));Fn(d.a.a);){b=Ko(d);c++>e&&nr(a,b.T())}}\n\tfunction nt(a){var b,c,d;if(a.e)throw new It('Cannot calculate mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.b*fs(b)}return rt(d)}\n\tfunction pt(a){var b,c,d;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.f*fs(b)}return d}\n\tfunction qt(a){var b,c,d;if(a.e)throw new It('Cannot get the number of atoms: this is a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=fs(b)}return d}\n\tfunction Lm(a){var b,c,d,e;e=new uk('[');b=false;for(d=a.D();d.N();){c=d.O();b?(e.a+=', ',e):(b=true);e.a+=c===a?'(this Collection)':''+c}e.a+=']';return e.a}\n\tfunction Wk(a,b,c){var d,e,f,g,h;e=(h=a/b,h>0?uj(h):tj(h));f=a%b;g=Si(a*b,0);if(f!=0){d=Si((f<=0?0-f:f)*2,b<=0?0-b:b);e+=$k(ge(e)&1,g*(5+d),c)}return new Pk(e)}\n\tfunction Ll(a){hl();if(qh(a,{l:0,m:0,h:0})){if(vh(a,{l:Su,m:Su,h:Tu})){return new Al(-1,uh(a))}return bl}else return rh(a,{l:10,m:0,h:0})?dl[Ch(a)]:new Al(1,a)}\n\tfunction au(a,b,c){var d,e;d=b.a!=0?fs(b):yj(en(a.a.a,b.i).b.b-1,fs(b));e=c.a!=0?fs(c):yj(en(a.a.a,c.i).b.b-1,fs(c));if(d==e)return Si(b.b,c.b);return -Si(d,e)}\n\tfunction gh(a,b){var c,d,e;e=a.h-b.h;if(e<0){return false}c=a.l-b.l;d=a.m-b.m+(c>>22);e+=d>>22;if(e<0){return false}dh(a,c&Su);eh(a,d&Su);bh(a,e&Tu);return true}\n\tfunction Rb(a,b){var c,d;Vb(a,b,0,b.length);return c=cc(xh(a.b,3)),d=Sd(he,Ru,0,16,7,1),a.c>8?Vb(a,Sb,0,a.c-8):Vb(a,Sb,0,64+(a.c-8)),Vb(a,c,0,8),bc(a.d,d),Ub(a),d}\n\tfunction $t(a,b,c){var d,e,f;this.d=a;Rt(this);this.a=c;d=b.b.b;Yt(this,a.b/(d*4));for(f=Vn(new Wn(b.b));un(f.a);){e=$n(f);mr(this.c,new Ri(e.b),new Ri(e.d/100))}}\n\tfunction Ud(a,b,c,d,e,f,g){var h,i,j,k,l;k=e[f];j=f==g-1;h=j?d:0;l=Wd(h,k);Vd(Rd(a,g-f),b[f],c[f],h,l);if(!j){++f;for(i=0;i<k;++i){l[i]=Ud(a,b,c,d,e,f,g)}}return l}\n\tfunction Nh(b,c,d,e){Mh();var f=Kh;$moduleName=c;$moduleBase=d;Eg=e;function g(){for(var a=0;a<f.length;a++){f[a]()}}\n\tif(b){try{Nu(g)()}catch(a){b(c,a)}}else{Nu(g)()}}\n\tfunction fm(a,b,c){var d,e;d=jh(nh(c),{l:Su,m:1023,h:0});for(e=0;vh(d,{l:0,m:0,h:0})&&e<b;e++){d=ih(d,jh(nh(a[e]),{l:Su,m:1023,h:0}));a[e]=Ch(d);d=yh(d,32)}return Ch(d)}\n\tfunction um(a,b){mm();var c,d;d=(hl(),cl);c=a;for(;b>1;b>>=1){(b&1)!=0&&(d=rl(d,c));c.d==1?(c=rl(c,c)):(c=new Bl(wm(c.a,c.d,Sd(ke,Ru,0,c.d<<1,7,1))))}d=rl(d,c);return d}\n\tfunction Fp(a,b,c){var d,e,f,g;d=Ap(a,b==null?'0':''+yp(b));for(f=0,g=d.length;f<g;++f){e=d[f];if(xp(b,e.T())){return e.V(c)}}d[d.length]=new lo(b,c);bn(a.b);return null}\n\tfunction jp(a,b,c,d){var e,f,g,h;!d&&(d=(pp(),pp(),op));e=(f=(g=c-b,Cc(g>=0,Vd(Rd($e,1),Ru,1,3,[oj(b),oj(c)])),g),h=Qd(a,f),wk(a,b,h,0,xj(a.length-b,f)),h);kp(e,a,b,c,-b,d)}\n\tfunction gu(a,b){eu();var c,d,e,f;f=2;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);e=fu(c.i);if(!e){if(!b){return null}else{f+=b.a*fs(c)}}else{f+=e.a*fs(c)}}return new Ri(f/2)}\n\tfunction Wd(a,b){var c=new Array(b);var d;switch(a){case 6:d={l:0,m:0,h:0};break;case 7:d=0;break;case 8:d=false;break;default:return c;}for(var e=0;e<b;++e){c[e]=d}return c}\n\tfunction hs(a){var b;a.a!=0?(b='<sup>'+a.a+'<\\/sup>'+a.i):(b=a.i);if(a.c==1&&a.d==1)return b;if(a.c==a.d)return b+'<sub>'+a.c+'<\\/sub>';return b+'<sub>'+a.d+'-'+a.c+'<\\/sub>'}\n\tfunction Tb(){Tb=Lg;Sb=Vd(Rd(he,1),Ru,0,7,[-128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])}\n\tfunction iu(a){var b,c,d;this.b=61;this.a=a;c=a/(2*Aj(2*vj(2)));this.c=Sd(je,av,0,61,7,1);for(b=0;b<61;b++){d=b-30;this.c[b]=1/(c*Aj(6.283185307179586))*Math.exp(-d*d/(2*c*c))}}\n\tfunction xu(a,b,c){var d,e;for(d=0;d<a.a.b.length;d++){for(e=d+1;e<a.a.b.length;e++){b[d]=b[d]+Vs((Vq(e,a.a.b.length),Ro(a.a,e)));c[d]=c[d]+Us((Vq(e,a.a.b.length),Ro(a.a,e)))}}}\n\tfunction Ub(a){a.a=Sd(he,Ru,0,64,7,1);a.d=Sd(ke,Ru,0,4,7,1);a.e=Sd(ke,Ru,0,16,7,1);a.d[0]=1732584193;a.d[1]=-271733879;a.d[2]=-1732584194;a.d[3]=271733878;a.b={l:0,m:0,h:0};a.c=64}\n\tfunction Ol(a,b,c,d){var e,f,g;if(d==0){wk(b,0,a,c,a.length-c)}else{g=32-d;a[a.length-1]=0;for(f=a.length-1;f>c;f--){a[f]|=b[f-c-1]>>>g;a[f-1]=b[f-c-1]<<d}}for(e=0;e<c;e++){a[e]=0}}\n\tfunction Sk(a){var b,c;if(a>-140737488355328&&a<140737488355328){if(a==0){return 0}b=a<0;b&&(a=-a);c=ge(uj(vj(a)/0.6931471805599453));(!b||a!=yj(2,c))&&++c;return c}return Tk(mh(a))}\n\tfunction tt(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,is(b,a.c))}a.a!=0&&(a.a>0?lk(d,'(+'+a.a+')'):lk(d,'('+a.a+')'));return d.a}\n\tfunction Xd(a,b,c,d,e,f){if(a===c){a=a.slice(b,b+e);b=0}for(var g=b,h=b+e;g<h;){var i=Math.min(g+10000,h);e=i-g;Array.prototype.splice.apply(c,[d,f?e:0].concat(a.slice(g,i)));g=i;d+=e}}\n\tfunction oh(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<=b.l)}\n\tfunction ph(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>=b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<b.l)}\n\tfunction qr(a,b,c,d){var e,f;f=b;e=f.c==null||a.b.Y(c.c,f.c)>0?1:0;while(f.a[e]!=c){f=f.a[e];e=a.b.Y(c.c,f.c)>0?1:0}f.a[e]=d;d.b=c.b;d.a[0]=c.a[0];d.a[1]=c.a[1];c.a[0]=null;c.a[1]=null}\n\tfunction At(b){var c,d;d=new Mu;Lu(d,'name',b.c);Lu(d,'symbol',b.b);Lu(d,'mf',tt(b.a));try{Ju(d,'mass',new hd(nt(b.a)))}catch(a){a=Hg(a);if(_d(a,4)){c=a;nb(c)}else throw Gg(a)}return d}\n\tfunction bq(){var a;if(Object.create&&Object.getOwnPropertyNames&&aq()){return (a=Object.create(null),a['__proto__']=42,Object.getOwnPropertyNames(a).length==0)?new cq:new Xp}return new eq}\n\tfunction kt(a,b){var c;if(b.c<b.d)throw new It('Syntax error: maxCount<minCount');c=mt(a,b.i);if(c)if(c.a==b.a){c.d+=b.d;c.c+=b.c;return}b.c==0&&b.d==0&&(a.e=true);mr(a.g,b,(ei(),ci))==null}\n\tfunction Oi(a){var b;if(!(b=Ni,!b&&(b=Ni=/^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$/),b.test(a))){throw new Dj('For input string: \"'+a+'\"')}return parseFloat(a)}\n\tfunction Al(a,b){il(this);this.e=a;if(lh(jh(b,{l:0,m:4193280,h:Tu}),{l:0,m:0,h:0})){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b)])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b),Ch(yh(b,32))])}}\n\tfunction Rl(a,b,c,d,e){var f,g,h;f=true;for(g=0;g<d;g++){f=f&c[g]==0}if(e==0){wk(c,d,a,0,b)}else{h=32-e;f=f&c[g]<<h==0;for(g=0;g<b-1;g++){a[g]=c[g+d]>>>e|c[g+d+1]<<h}a[g]=c[g+d]>>>e;++g}return f}\n\tfunction Cs(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f='';d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;h>-1.0E100&&(f+=g+', '+h+'\\r\\n')}return f}\n\tfunction Ds(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f=new mk;d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;lk(f,As(g)+', '+As(h*100)+'\\r\\n')}return f}\n\tfunction xh(a,b){var c,d,e;b&=63;if(b<22){c=a.l<<b;d=a.m<<b|a.l>>22-b;e=a.h<<b|a.m>>22-b}else if(b<44){c=0;d=a.l<<b-22;e=a.m<<b-22|a.l>>44-b}else{c=0;d=0;e=a.l<<b-44}return {l:c&Su,m:d&Su,h:e&Tu}}\n\tfunction zh(a,b){var c,d,e,f;b&=63;c=a.h&Tu;if(b<22){f=c>>>b;e=a.m>>b|c<<22-b;d=a.l>>b|a.m<<22-b}else if(b<44){f=0;e=c>>>b-22;d=a.m>>b-22|a.h<<44-b}else{f=0;e=0;d=c>>>b-44}return {l:d&Su,m:e&Su,h:f&Tu}}\n\tfunction Es(a){var b,c,d,e,f;c=a.d;c>~~(a.a/2)&&(c=~~(a.a/2));d=Td(je,[Ru,av],[28,0],7,[c,2],2);b=0;for(f=Fo(new Go(a));Fn(f.a.a);){e=Ko(f);d[b][0]=e.a;d[b][1]=to(a,e).a;++b;if(b==c)break}return d}\n\tfunction hu(a,b){eu();var c,d,e,f;f=2;for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=fu(c.a.i);if(!e){if(!b){return null}else{f+=b.a*c.b}}else{f+=e.a*c.b}}return new Ri(f/2)}\n\tfunction Fm(){Fm=Lg;Em=new Gm('UP',0);ym=new Gm('DOWN',1);xm=new Gm('CEILING',2);zm=new Gm('FLOOR',3);Cm=new Gm('HALF_UP',4);Am=new Gm('HALF_DOWN',5);Bm=new Gm('HALF_EVEN',6);Dm=new Gm('UNNECESSARY',7)}\n\tfunction ys(a,b){var c,d,e,f,g;c=mv;d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);e.T();g=e.U().a;g>c&&(c=g)}d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);f=e.T();g=e.U();mr(a,f,new Ri(g.a/c*b))}}\n\tfunction qm(a,b,c,d){mm();var e,f;e={l:0,m:0,h:0};for(f=0;f<c;f++){e=ih(th(jh(nh(b[f]),{l:Su,m:1023,h:0}),jh(nh(d),{l:Su,m:1023,h:0})),jh(nh(Ch(e)),{l:Su,m:1023,h:0}));a[f]=Ch(e);e=zh(e,32)}return Ch(e)}\n\tfunction St(a,b){var c;if(b<=0)throw new tb('Error: power='+b);if(b==1)return a;if(b==2){a.c=Ut(a,a);return a}--b;c=new Zt(a.d,a.c);while(b!=0){(b&1)!=0&&(a.c=Ut(a,c));b>>=1;b!=0&&(c.c=Ut(c,c))}return a}\n\tfunction wb(a){var b;if(a.c==null){b=ee(a.b)===ee(ub)?null:a.b;a.d=b==null?'null':ae(b)?b==null?null:b.name:de(b)?'String':ui(hb(b));a.a=a.a+': '+(ae(b)?b==null?null:b.message:b+'');a.c='('+a.d+') '+a.a}}\n\tfunction aq(){var a='__proto__';var b=Object.create(null);if(b[a]!==undefined){return false}var c=Object.getOwnPropertyNames(b);if(c.length!=0){return false}b[a]=42;if(b[a]!==42){return false}return true}\n\tfunction kp(a,b,c,d,e,f){var g,h,i,j;g=d-c;if(g<7){hp(b,c,d,f);return}i=c+e;h=d+e;j=i+(h-i>>1);kp(b,a,i,j,-e,f);kp(b,a,j,h,-e,f);if(f.Y(a[j-1],a[j])<=0){while(c<d){b[c++]=a[i++]}return}ip(a,i,j,h,b,c,d,f)}\n\tfunction jc(b,c){var d,e,f,g;for(e=0,f=b.length;e<f;e++){g=b[e];try{g[1]?g[0].ob()&&(c=ic(c,g)):g[0].ob()}catch(a){a=Hg(a);if(_d(a,9)){d=a;Ob(_d(d,38)?ee(d.b)===ee(ub)?null:d.b:d)}else throw Gg(a)}}return c}\n\tfunction Gp(a,b){var c,d,e,f;e=b==null?'0':''+yp(b);c=Cp(a,e);for(f=0;f<c.length;f++){d=c[f];if(xp(b,d.T())){c.length==1?(delete a.a[e],undefined):(c.splice(f,1),undefined);cn(a.b);return d.U()}}return null}\n\tfunction ik(a){var b,c,d,e;b=0;d=a.length;e=d-4;c=0;while(c<e){b=a.charCodeAt(c+3)+31*(a.charCodeAt(c+2)+31*(a.charCodeAt(c+1)+31*(a.charCodeAt(c)+31*b)));b=~~b;c+=4}while(c<d){b=b*31+Ij(a,c++)}b=~~b;return b}\n\tfunction sl(a,b){var c;if(b<0){throw new Zh('Negative exponent')}if(b==0){return cl}else if(b==1||ml(a,cl)||ml(a,gl)){return a}if(!wl(a,0)){c=1;while(!wl(a,c)){++c}return rl(Gl(c*b),sl(vl(a,c),b))}return um(a,b)}\n\tfunction Ks(a){var b,c,d,e,f;if(a.b.b==0){a.d=a.c;a.f=Ch(mh(zj(a.c)));return}b=1.7976931348623157E308;f=mv;c=true;for(e=Vn(new Wn(a.b));un(e.a);){d=$n(e);if(d.d>f||c){c=false;b=d.b;f=d.d}}a.d=b;a.f=Ch(mh(zj(b)))}\n\tfunction Kg(a,b,c){var d=Ig;var e=Jg;var f=Mg;var g=d[a];var h=f(g);if(g&&!h){_=g}else{_=d[a]=!b?{}:e(b);_.cM=c;_.constructor=_;!b&&(_.tM=Qg)}for(var i=3;i<arguments.length;++i){arguments[i].prototype=_}h&&(_.cZ=h)}\n\tfunction is(a,b){var c,d;c=a.i;!!b&&fn(b,a.i)&&Oj(en(b,a.i).e,'^[A-Z][a-z]?\\\\{.*\\\\}$')&&(c=en(b,a.i).e);d='';a.a!=0?(d+='['+a.a+c+']'):(d+=c);if(a.c==1&&a.d==1)return d;if(a.c==a.d)return d+a.c;return d+a.d+'-'+a.c}\n\tfunction Ed(a){if(!a){return cd(),bd}var b=a.valueOf?a.valueOf():a;if(b!==a){var c=Ad[typeof b];return c?c(b):Hd(typeof b)}else if(a instanceof Array||a instanceof $wnd.Array){return new Pc(a)}else{return new ud(a)}}\n\tfunction Vb(a,b,c,d){while(true){if(d>=a.c){wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),a.c);Wb(a,a.a);a.b=ih(a.b,nh(a.c));c+=a.c;d-=a.c;a.c=64}else{wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),d);a.b=ih(a.b,nh(d));a.c-=d;break}}}\n\tfunction kj(a){var b,c,d;if(a<0){return 0}else if(a==0){return 32}else{d=-(a>>16);b=d>>16&16;c=16-b;a=a>>b;d=a-256;b=d>>16&8;c+=b;a<<=b;d=a-4096;b=d>>16&4;c+=b;a<<=b;d=a-16384;b=d>>16&2;c+=b;a<<=b;d=a>>14;b=d&~(d>>1);return c+2-b}}\n\tfunction Cb(b){var c=(!Ab&&(Ab=Db()),Ab);var d=b.replace(/[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]/g,function(a){return Bb(a,c)});return '\"'+d+'\"'}\n\tfunction wl(a,b){var c,d,e;if(b==0){return (a.a[0]&1)!=0}if(b<0){throw new Zh('Negative bit address')}e=b>>5;if(e>=a.d){return a.e<0}c=a.a[e];b=1<<(b&31);if(a.e<0){d=ol(a);if(e<d){return false}else d==e?(c=-c):(c=~c)}return (c&b)!=0}\n\tfunction Bu(b,c){var d,e,f,g;f=new Sq;try{for(e=Fo(new Go(b.g));Fn(e.a.a);){d=Ko(e);d.c=xj(d.c,ge(c/d.e));if(d.d>d.c)return null;Rq(f,new Xs(d))}g=Vo(f.a);jp(g,0,g.length,null);np(f,g)}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}return f}\n\tfunction im(a,b,c,d,e){var f,g;f={l:0,m:0,h:0};for(g=0;g<e;g++){f=ih(f,Ah(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}\n\tfunction ot(a){var b,c,d,e;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.e*fs(b)}return e=isNaN(d*dv)?d*dv:Wi(d*dv)?d*dv:d*dv==0?d*dv:Bh(mh(Math.round(d*dv))),e/dv}\n\tfunction cc(a){var b;b=Sd(he,Ru,0,8,7,1);b[0]=fe(Ch(a));a=zh(a,8);b[1]=fe(Ch(a));a=zh(a,8);b[2]=fe(Ch(a));a=zh(a,8);b[3]=fe(Ch(a));a=zh(a,8);b[4]=fe(Ch(a));a=zh(a,8);b[5]=fe(Ch(a));a=zh(a,8);b[6]=fe(Ch(a));a=zh(a,8);b[7]=fe(Ch(a));return b}\n\tfunction yh(a,b){var c,d,e,f,g;b&=63;c=a.h;d=(c&Uu)!=0;d&&(c|=-1048576);if(b<22){g=c>>b;f=a.m>>b|c<<22-b;e=a.l>>b|a.m<<22-b}else if(b<44){g=d?Tu:0;f=c>>b-22;e=a.m>>b-22|c<<44-b}else{g=d?Tu:0;f=d?Su:0;e=c>>b-44}return {l:e&Su,m:f&Su,h:g&Tu}}\n\tfunction Hi(a){if(a.B()){var b=a.c;b.C()?(a.k='['+b.j):!b.B()?(a.k='[L'+b.w()+';'):(a.k='['+b.w());a.b=b.v()+'[]';a.i=b.A()+'[]';return}var c=a.f;var d=a.d;d=d.split('/');a.k=Ki('.',[c,Ki('$',d)]);a.b=Ki('.',[c,Ki('.',d)]);a.i=d[d.length-1]}\n\tfunction bt(a){var b,c,d;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=ge(d+pt(b)*b.f)}return d}\n\tfunction ft(a){var b,c,d;c=new In(a.d);d=new nk('');c.a<c.c.G()&&(d=new nk((Dc(c.a<c.c.G()),lb(c.c.R(c.b=c.a++)))));while(c.a<c.c.G()){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));b.f==1?lk(d,'.'+tt(b)):b.f==0?lk(d,'.n'+tt(b)):lk(d,'.'+b.f+tt(b))}return d.a}\n\tfunction ts(a,b){var c,d,e,f,g,h;e=new Fs;d=(new Fr(a)).a.W();while(Fn(d.a)){f=d.b=Gn(d.a);g=f.T().a;h=f.U().a;Ar(d);g=(isNaN(g/b)?g/b:Wi(g/b)?g/b:g/b==0?g/b:Bh(mh(Math.round(g/b))))*b;c=to(e,new Ri(g));!!c&&(h+=c.a);mr(e,new Ri(g),new Ri(h))}rs(a,e)}\n\tfunction mh(a){var b,c,d,e,f;if(isNaN(a)){return Jh(),Ih}if(a<Xu){return Jh(),Gh}if(a>=9223372036854775807){return Jh(),Fh}e=false;if(a<0){e=true;a=-a}d=0;if(a>=Wu){d=ge(a/Wu);a-=d*Wu}c=0;if(a>=Vu){c=ge(a/Vu);a-=c*Vu}b=ge(a);f=Ug(b,c,d);e&&$g(f);return f}\n\tfunction bk(a){var b,c,d,e,f,g,h;g=a.length;b=0;for(f=0;f<g;){d=li(a,f,a.length);f+=d>=Zu?2:1;d<128?++b:d<2048?(b+=2):d<Zu?(b+=3):d<2097152?(b+=4):d<67108864&&(b+=5)}c=Sd(he,Ru,0,b,7,1);h=0;for(e=0;e<g;){d=li(a,e,a.length);e+=d>=Zu?2:1;h+=_j(c,h,d)}return c}\n\tfunction Qs(a,b,c){var d,e,f,g,h,i,j;this.e=c;this.g=b;this.a=a.a;this.b=new zp;g=Pj(c,'[^0-9,\\\\.]','');i=Qj(g,',',0);d=0;for(f=Vn(new Wn(a.b));un(f.a);){e=$n(f);j=0;i.length>d&&(j=Oi(i[d]));h=new Ct(e.c,e.b,j,e.a);gn(this.b,oj(e.c),h);++d}Js(this);Ks(this)}\n\tfunction Bt(b,c,d,e,f){var g;this.b=b;this.c=c;try{this.a=new ut(d,e,f)}catch(a){a=Hg(a);if(_d(a,6)){g=a;\"Group creation error: '\"+b+\"'='\"+d+\"': \"+ob(g);this.a=new ut('',e,f)}else throw Gg(a)}if(this.a.e)throw new It('Range formulas not allowed for groups')}\n\tfunction Vl(a){var b,c,d;if(ph(a,{l:0,m:0,h:0})){c=kh(a,{l:1755648,m:238,h:0});d=sh(a,{l:1755648,m:238,h:0})}else{b=zh(a,1);c=kh(b,{l:877824,m:119,h:0});d=sh(b,{l:877824,m:119,h:0});d=ih(xh(d,1),jh(a,{l:1,m:0,h:0}))}return wh(xh(d,32),jh(c,{l:Su,m:1023,h:0}))}\n\tfunction ds(a,b){if(es(a,b))return 0;if(Jj(a.i,'C')){if(Jj(b.i,'C'))return a.a-b.a;return -1}if(Jj(a.i,'H')){if(Jj(b.i,'C'))return 1;if(Jj(b.i,'H'))return a.a-b.a;return -1}if(Jj(b.i,'H')||Jj(b.i,'C')){return 1}if(Jj(a.i,b.i))return a.a-b.a;return Zj(a.i,b.i)}\n\tfunction nm(a,b){mm();var c,d,e,f,g,h,i,j,k;if(b.d>a.d){h=a;a=b;b=h}if(b.d<63){return tm(a,b)}g=(a.d&-2)<<4;j=vl(a,g);k=vl(b,g);d=gm(a,tl(j,g));e=gm(b,tl(k,g));i=nm(j,k);c=nm(d,e);f=nm(gm(j,d),gm(e,k));f=bm(bm(f,i),c);f=tl(f,g);i=tl(i,g<<1);return bm(bm(i,f),c)}\n\tfunction ah(a){var b,c,d;c=a.l;if((c&c-1)!=0){return -1}d=a.m;if((d&d-1)!=0){return -1}b=a.h;if((b&b-1)!=0){return -1}if(b==0&&d==0&&c==0){return -1}if(b==0&&d==0&&c!=0){return lj(c)}if(b==0&&d!=0&&c==0){return lj(d)+22}if(b!=0&&d==0&&c==0){return lj(b)+44}return -1}\n\tfunction Pg(a){var b=this;if(a=='$wnd'){return $wnd}else if(a===''){return b}if(a.substring(0,5)=='$wnd.'){b=$wnd;a=a.substring(5)}var c=a.split('.');!(c[0] in b)&&b.execScript&&b.execScript('var '+c[0]);for(var d;c.length&&(d=c.shift());){b[d]?(b=b[d]):(b=b[d]={})}return b}\n\tfunction Kk(a,b){var c;Fc(b);c=5-a.e;if(c==0){return a}if(c>0){if(c<Dk.length&&a.a+Ek[ge(c)]<54){return new Pk(a.f*Dk[ge(c)])}return new Rk(sm((!a.c&&(a.c=Kl(a.f)),a.c),ge(c)))}if(a.a<54&&-c<Dk.length){return Wk(a.f,Dk[ge(-c)],b)}return Vk((!a.c&&(a.c=Kl(a.f)),a.c),vm(-c),b)}\n\tfunction Ns(a){var b,c,d;d='Element: '+a.a+' - symbol: '+a.g+' - exact mass: '+a.d+' - mass: '+a.c+' - name: '+a.e+' - nb isotope: '+a.b.b+'\\r\\n';for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+='Number: '+b.c+' - mass: '+b.b+' - percentage: '+b.d+' - symbol: '+b.a+'\\r\\n'}return d}\n\tfunction ls(a,b,c,d){var e;if(c>d)throw new It('Error: minCount>maxCount');if(b==0){this.d=c;this.c=d;this.e=Ls(a);this.f=a.f;this.a=0;this.i=a.g;this.b=a.c;return}e=dn(a.b,new fj(b));if(!e)throw new It('Isotope not found');this.a=b;this.i=a.g;this.b=e.b;this.e=e.b;this.d=c;this.c=d}\n\tfunction Ql(a,b){var c,d,e,f,g;d=b>>5;b&=31;if(d>=a.d){return a.e<0?(hl(),bl):(hl(),gl)}f=a.d-d;e=Sd(ke,Ru,0,f+1,7,1);Rl(e,f,a.a,d,b);if(a.e<0){for(c=0;c<d&&a.a[c]==0;c++);if(c<d||b>0&&a.a[c]<<32-b!=0){for(c=0;c<f&&e[c]==-1;c++){e[c]=0}c==f&&++f;++e[c]}}g=new zl(a.e,f,e);kl(g);return g}\n\tfunction kr(a,b,c,d){var e,f;if(!b){return c}else{e=a.b.Y(c.c,b.c);if(e==0){d.d=co(b,c.d);d.b=true;return b}f=e<0?0:1;b.a[f]=kr(a,b.a[f],c,d);if(lr(b.a[f])){if(lr(b.a[1-f])){b.b=true;b.a[0].b=false;b.a[1].b=false}else{lr(b.a[f].a[f])?(b=sr(b,1-f)):lr(b.a[f].a[1-f])&&(b=rr(b,1-f))}}}return b}\n\tfunction Jc(a,b){var c,d,e,f;a=''+a;c=new tk(a.length+16*b.length);f=0;d=0;while(d<b.length){e=a.indexOf('%s',f);if(e==-1){break}qk(c,a.substr(f,e-f));pk(c,b[d++]);f=e+2}qk(c,Wj(a,f,a.length-f));if(d<b.length){c.a+=' [';pk(c,b[d++]);while(d<b.length){c.a+=', ';pk(c,b[d++])}c.a+=']'}return c.a}\n\tfunction hl(){hl=Lg;var a;cl=new yl(1,1);el=new yl(1,10);gl=new yl(0,0);bl=new yl(-1,1);dl=Vd(Rd(jf,1),Ru,5,0,[gl,cl,new yl(1,2),new yl(1,3),new yl(1,4),new yl(1,5),new yl(1,6),new yl(1,7),new yl(1,8),new yl(1,9),el]);fl=Sd(jf,Ru,5,32,0,1);for(a=0;a<fl.length;a++){fl[a]=Ll(xh({l:1,m:0,h:0},a))}}\n\tfunction eu(){eu=Lg;du=new zp;hn(du,'O',oj(0));hn(du,'N',oj(1));hn(du,'H',oj(-1));hn(du,'C',oj(2));hn(du,'F',oj(-1));hn(du,'Cl',oj(-1));hn(du,'Br',oj(-1));hn(du,'I',oj(-1));hn(du,'S',oj(0));hn(du,'P',oj(1));hn(du,'Li',oj(-1));hn(du,'Na',oj(-1));hn(du,'K',oj(-1));hn(du,'Ca',oj(0));hn(du,'Mg',oj(0))}\n\tfunction vu(a,b,c){var d,e,f,g,h,i,j,k;h=new Mu;k=a.c.gb('referenceVersion');k!=null&&!Jj(k,'')&&(c=(Ht(),Ht(),Ft));if(c){i=new Gu;Ju(h,'elements',i.a);for(e=Vn(new Wn(c));un(e.a);){d=$n(e);Fu(i,Ms(d).a)}}if(b){j=new Gu;Ju(h,'groups',j.a);for(g=Vn(new Wn(b));un(g.a);){f=$n(g);Fu(j,At(f).a)}}return h}\n\tfunction et(b){var c,d,e;e=Qj(b,'/',0);if(e.length!=2)throw new It('Syntax error: bad fraction syntax: '+b);try{c=Pi(e[1]);if(c==0)throw new It('Syntax error: divide by zero: '+b);d=Pi(e[0]);return d/c}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad fraction syntax: '+b)}else throw Gg(a)}}\n\tfunction mm(){mm=Lg;var a,b;jm=Sd(jf,Ru,5,32,0,1);km=Sd(jf,Ru,5,32,0,1);lm=Vd(Rd(ke,1),Ru,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu]);a={l:1,m:0,h:0};for(b=0;b<=18;b++){jm[b]=Ll(a);km[b]=Ll(xh(a,b));a=th(a,{l:5,m:0,h:0})}for(;b<km.length;b++){jm[b]=rl(jm[b-1],jm[1]);km[b]=rl(km[b-1],(hl(),el))}}\n\tfunction pm(a,b,c,d,e){var f,g,h,i;if(ee(a)===ee(b)&&d==e){wm(a,d,c);return}for(h=0;h<d;h++){g={l:0,m:0,h:0};f=a[h];for(i=0;i<e;i++){g=ih(ih(th(jh(nh(f),{l:Su,m:1023,h:0}),jh(nh(b[i]),{l:Su,m:1023,h:0})),jh(nh(c[h+i]),{l:Su,m:1023,h:0})),jh(nh(Ch(g)),{l:Su,m:1023,h:0}));c[h+i]=Ch(g);g=zh(g,32)}c[h+e]=Ch(g)}}\n\tfunction _s(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d+=nt(b)*b.f}return e=isNaN(d*cv)?d*cv:Wi(d*cv)?d*cv:d*cv==0?d*cv:Bh(mh(Math.round(d*cv))),e/cv}\n\tfunction at(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');b=0;for(d=new In(a.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));b+=ot(c)*c.f}return e=isNaN(b*dv)?b*dv:Wi(b*dv)?b*dv:b*dv==0?b*dv:Bh(mh(Math.round(b*dv))),e/dv}\n\tfunction rm(a,b){var c,d,e,f,g,h,i,j,k;j=a.e;if(j==0){return hl(),gl}d=a.d;c=a.a;if(d==1){e=th(jh(nh(c[0]),{l:Su,m:1023,h:0}),jh(nh(b),{l:Su,m:1023,h:0}));i=Ch(e);g=Ch(zh(e,32));return g==0?new yl(j,i):new zl(j,2,Vd(Rd(ke,1),Ru,0,7,[i,g]))}h=d+1;f=Sd(ke,Ru,0,h,7,1);f[d]=qm(f,c,d,b);k=new zl(j,h,f);kl(k);return k}\n\tfunction tm(a,b){var c,d,e,f,g,h,i,j,k,l,m;d=a.d;f=b.d;h=d+f;i=a.e!=b.e?-1:1;if(h==2){k=th(jh(nh(a.a[0]),{l:Su,m:1023,h:0}),jh(nh(b.a[0]),{l:Su,m:1023,h:0}));m=Ch(k);l=Ch(zh(k,32));return l==0?new yl(i,m):new zl(i,2,Vd(Rd(ke,1),Ru,0,7,[m,l]))}c=a.a;e=b.a;g=Sd(ke,Ru,0,h,7,1);om(c,d,e,f,g);j=new zl(i,h,g);kl(j);return j}\n\tfunction Il(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;m=b.length;i=m;if(b.charCodeAt(0)==45){k=-1;l=1;--m}else{k=1;l=0}f=(Ul(),Tl)[10];e=~~(m/f);p=m%f;p!=0&&++e;h=Sd(ke,Ru,0,e,7,1);c=Sl[8];g=0;n=l+(p==0?f:p);for(o=l;o<i;o=n,n=n+f){d=Pi(b.substr(o,n-o));j=(mm(),qm(h,h,g,c));j+=fm(h,g,d);h[g++]=j}a.e=k;a.d=g;a.a=h;kl(a)}\n\tfunction Dh(a){var b,c,d,e,f;if(a.l==0&&a.m==0&&a.h==0){return '0'}if(a.h==Uu&&a.m==0&&a.l==0){return '-9223372036854775808'}if(a.h>>19!=0){return '-'+Dh(uh(a))}c=a;d='';while(!(c.l==0&&c.m==0&&c.h==0)){e=nh(Yu);c=Vg(c,e,true);b=''+Ch(Rg);if(!(c.l==0&&c.m==0&&c.h==0)){f=9-b.length;for(;f>0;f--){b='0'+b}}d=b+d}return d}\n\tfunction Ms(a){var b,c,d,e,f,g;d=new Mu;Lu(d,'symbol',a.g);Ju(d,'monoisotopicMass',new hd(a.d));Ju(d,'mass',new hd(a.c));Lu(d,'name',a.e);Ju(d,'atomicNumber',new hd(a.a));f=new Gu;Ju(d,'isotopes',f.a);for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);e=(g=new Mu,Ju(g,'mass',new hd(b.b)),Ju(g,'percentage',new hd(b.d)),g);Fu(f,e.a)}return d}\n\tfunction Au(a,b){var c,d,e,f;f='';for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=gs(c.a);(e==null?!!Dp(b.a,null):!(b.c.gb(e)===undefined))&&(Jj((e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c.substr(0,1),'{')?(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c):(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).b));c.b>1?(f+=e+c.b):c.b>0&&(f+=e)}return f}\n\tfunction Lt(a){var b,c,d,e,f;c=true;for(e=new In(a.d.d);e.a<e.c.G();){d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(c){a.e=new _t(a,d,a.c);xs(a.e.c,d.f);b=a.e;c=false}else{b=new _t(a,d,a.c);xs(b.c,d.f);rs(a.e.c,b.c)}if(d.b!=''){f=new Ri(vs(b.c));_m(a.g,f)?gn(a.g,f,dn(a.g,f)+','+d.b):gn(a.g,f,d.b)}}if(a.e.c.d==0)throw new It('Isotopic distribution: empty table')}\n\tfunction Pi(a){var b,c,d,e,f;if(a==null){throw new Dj('null')}d=a.length;e=d>0&&(a.charCodeAt(0)==45||a.charCodeAt(0)==43)?1:0;for(b=e;b<d;b++){if(mi(a.charCodeAt(b))==-1){throw new Dj('For input string: \"'+a+'\"')}}f=parseInt(a,10);c=f<$u;if(isNaN(f)){throw new Dj('For input string: \"'+a+'\"')}else if(c||f>Ou){throw new Dj('For input string: \"'+a+'\"')}return f}\n\tfunction ll(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;f=b.e;if(f==0){throw new Zh('BigInteger divide by zero')}e=b.d;d=b.a;if(e==1){return Zl(a,d[0],f)}m=a.a;n=a.d;c=n!=e?n>e?1:-1:em(m,d,n);if(c<0){return Vd(Rd(jf,1),Ru,5,0,[gl,a])}o=a.e;h=n-e+1;i=o==f?1:-1;g=Sd(ke,Ru,0,h,7,1);j=Yl(g,h,m,n,d,e);k=new zl(i,h,g);l=new zl(o,e,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\n\tfunction Ik(a,b){var c,d,e,f,g,h;e=Mk(a);h=Mk(b);if(e==h){if(a.e==b.e&&a.a<54&&b.a<54){return a.f<b.f?-1:a.f>b.f?1:0}d=a.e-b.e;c=(a.d>0?a.d:uj((a.a-1)*ev)+1)-(b.d>0?b.d:uj((b.a-1)*ev)+1);if(c>d+1){return e}else if(c<d-1){return -e}else{f=(!a.c&&(a.c=Kl(a.f)),a.c);g=(!b.c&&(b.c=Kl(b.f)),b.c);d<0?(f=rl(f,vm(-d))):d>0&&(g=rl(g,vm(d)));return jl(f,g)}}else return e<h?-1:1}\n\tfunction Zl(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;m=a.a;n=a.d;o=a.e;if(n==1){d=jh(nh(m[0]),{l:Su,m:1023,h:0});e=jh(nh(b),{l:Su,m:1023,h:0});f=kh(d,e);i=sh(d,e);o!=c&&(f=uh(f));o<0&&(i=uh(i));return Vd(Rd(jf,1),Ru,5,0,[Ll(f),Ll(i)])}h=o==c?1:-1;g=Sd(ke,Ru,0,n,7,1);j=Vd(Rd(ke,1),Ru,0,7,[$l(g,m,n,b)]);k=new zl(h,n,g);l=new zl(o,1,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\n\tfunction am(a,b,c,d,e){var f,g,h;f={l:0,m:0,h:0};g={l:0,m:0,h:0};for(h=0;h<d;h++){f=(mm(),ih(th(jh(nh(c[h]),{l:Su,m:1023,h:0}),jh(nh(e),{l:Su,m:1023,h:0})),jh(nh(Ch(f)),{l:Su,m:1023,h:0})));g=ih(Ah(jh(nh(a[b+h]),{l:Su,m:1023,h:0}),jh(f,{l:Su,m:1023,h:0})),g);a[b+h]=Ch(g);g=yh(g,32);f=zh(f,32)}g=ih(Ah(jh(nh(a[b+d]),{l:Su,m:1023,h:0}),f),g);a[b+d]=Ch(g);return Ch(yh(g,32))}\n\tfunction _l(a,b){var c,d,e,f,g;d=jh(nh(b),{l:Su,m:1023,h:0});if(ph(a,{l:0,m:0,h:0})){f=kh(a,d);g=sh(a,d)}else{c=zh(a,1);e=nh(b>>>1);f=kh(c,e);g=sh(c,e);g=ih(xh(g,1),jh(a,{l:1,m:0,h:0}));if((b&1)!=0){if(rh(f,g)){g=Ah(g,f)}else{if(rh(Ah(f,g),d)){g=ih(g,Ah(d,f));f=Ah(f,{l:1,m:0,h:0})}else{g=ih(g,Ah(xh(d,1),f));f=Ah(f,{l:2,m:0,h:0})}}}}return wh(xh(g,32),jh(f,{l:Su,m:1023,h:0}))}\n\tfunction lu(a,b,c){ku();var d,e,f,g,h,i,j,k,l,m,n,o;i=~~(~~((b.b-1)/b.a)/2);h=a[0][0];g=a[a.length-1][0];k=Ch(mh(zj((g-h)/c*b.a)))+2*b.a*i+1;o=Sd(je,av,0,k,7,1);for(m=0,n=a.length;m<n;++m){l=a[m];d=Ch(mh(zj((l[0]-h)/c*b.a+b.a*i)));for(f=0;f<b.c.length;f++){o[d+f-b.a*i]+=b.c[f]*l[1]}}j=Td(je,[Ru,av],[28,0],7,[k,2],2);for(e=0;e<k;e++){j[e][0]=(e/b.a-i)*c+h;j[e][1]=o[e]}return j}\n\tfunction $k(a,b,c){var d;d=0;switch(c.b){case 7:if(b!=0){throw new Zh('Rounding necessary')}break;case 0:d=b==0?0:b<0?-1:1;break;case 2:d=(b==0?0:b<0?-1:1)>0?b==0?0:b<0?-1:1:0;break;case 3:d=(b==0?0:b<0?-1:1)<0?b==0?0:b<0?-1:1:0;break;case 4:(b<0?-b:b)>=5&&(d=b==0?0:b<0?-1:1);break;case 5:(b<0?-b:b)>5&&(d=b==0?0:b<0?-1:1);break;case 6:(b<0?-b:b)+a>5&&(d=b==0?0:b<0?-1:1);}return d}\n\tfunction zt(a,b,c,d){var e,f,g,h,i,j,k,l,m;if(b.indexOf(',')==-1)throw new It('Syntax error: combinatorial');if(c!=d)throw new It('Combinatorial range formulae are not allowed');j=Qj(b,',',0);i=0;h=j.length;m=new nk('{');for(g=0;g<h-1;g++){l=Tj(j[g]);f=new ut(l,a.c,a.d);lk(m,st(f)+',');i+=nt(f)}k=Tj(j[h-1]);e=new ut(k,a.c,a.d);lk(m,st(e)+'}');i+=nt(e);i/=h;kt(a,new js(m.a,i,c,d))}\n\tfunction Yg(a,b,c,d,e,f){var g,h,i,j,k,l,m;j=_g(b)-_g(a);g=xh(b,j);i=Ug(0,0,0);while(j>=0){h=gh(a,g);if(h){j<22?(i.l|=1<<j,undefined):j<44?(i.m|=1<<j-22,undefined):(i.h|=1<<j-44,undefined);if(a.l==0&&a.m==0&&a.h==0){break}}k=g.m;l=g.h;m=g.l;bh(g,l>>>1);g.m=k>>>1|(l&1)<<21;g.l=m>>>1|(k&1)<<21;--j}c&&$g(i);if(f){if(d){Rg=uh(a);e&&(Rg=Ah(Rg,(Jh(),Hh)))}else{Rg=Ug(a.l,a.m,a.h)}}return i}\n\tfunction Vh(){var a=navigator.userAgent.toLowerCase();var b=$doc.documentMode;if(function(){return a.indexOf('webkit')!=-1}())return 'safari';if(function(){return a.indexOf('msie')!=-1&&b>=10&&b<11}())return 'ie10';if(function(){return a.indexOf('msie')!=-1&&b>=9&&b<11}())return 'ie9';if(function(){return a.indexOf('msie')!=-1&&b>=8&&b<11}())return 'ie8';if(function(){return a.indexOf('gecko')!=-1||b>=11}())return 'gecko1_8';return 'unknown'}\n\tfunction vm(a){mm();var b,c,d,e;b=ge(a);if(a<km.length){return km[b]}else if(a<=50){return sl((hl(),el),b)}else if(a<=1000){return tl(sl(jm[1],b),b)}if(a>cv){throw new Zh('power of ten too big')}if(a<=Ou){return tl(sl(jm[1],b),b)}d=sl(jm[1],Ou);e=d;c=mh(a-Ou);b=ge(a%Ou);while(oh(c,{l:Su,m:511,h:0})){e=rl(e,d);c=Ah(c,{l:Su,m:511,h:0})}e=rl(e,sl(jm[1],b));e=tl(e,Ou);c=mh(a-Ou);while(oh(c,{l:Su,m:511,h:0})){e=tl(e,Ou);c=Ah(c,{l:Su,m:511,h:0})}e=tl(e,b);return e}\n\tfunction Qj(l,a,b){var c=new RegExp(a,'g');var d=[];var e=0;var f=l;var g=null;while(true){var h=c.exec(f);if(h==null||f==''||e==b-1&&b>0){d[e]=f;break}else{d[e]=f.substring(0,h.index);f=f.substring(h.index+h[0].length,f.length);c.lastIndex=0;if(g==f){d[e]=f.substring(0,1);f=f.substring(1)}g=f;e++}}if(b==0&&l.length>0){var i=d.length;while(i>0&&d[i-1]==''){--i}i<d.length&&d.splice(i,d.length-i)}var j=Vj(d.length);for(var k=0;k<d.length;++k){j[k]=d[k]}return j}\n\tfunction gm(a,b){var c,d,e,f,g,h,i,j,k,l;g=a.e;i=b.e;if(i==0){return a}if(g==0){return b.e==0?b:new zl(-b.e,b.d,b.a)}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});g<0&&(c=uh(c));i<0&&(d=uh(d));return Ll(Ah(c,d))}e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==-1){l=-i;k=g==i?hm(b.a,h,a.a,f):cm(b.a,h,a.a,f)}else{l=g;if(g==i){if(e==0){return hl(),gl}k=hm(a.a,f,b.a,h)}else{k=cm(a.a,f,b.a,h)}}j=new zl(l,k.length,k);kl(j);return j}\n\tfunction $l(a,b,c,d){var e,f,g,h,i,j,k;j={l:0,m:0,h:0};f=jh(nh(d),{l:Su,m:1023,h:0});for(h=c-1;h>=0;h--){k=wh(xh(j,32),jh(nh(b[h]),{l:Su,m:1023,h:0}));if(ph(k,{l:0,m:0,h:0})){i=kh(k,f);j=sh(k,f)}else{e=zh(k,1);g=nh(d>>>1);i=kh(e,g);j=sh(e,g);j=ih(xh(j,1),jh(k,{l:1,m:0,h:0}));if((d&1)!=0){if(rh(i,j)){j=Ah(j,i)}else{if(rh(Ah(i,j),f)){j=ih(j,Ah(f,i));i=Ah(i,{l:1,m:0,h:0})}else{j=ih(j,Ah(xh(f,1),i));i=Ah(i,{l:2,m:0,h:0})}}}}a[h]=Ch(jh(i,{l:Su,m:1023,h:0}))}return Ch(j)}\n\tfunction wk(a,b,c,d,e){var f,g,h,i,j,k,l,m,n;Gc(a,'src');Gc(c,'dest');m=hb(a);i=hb(c);Ac((m.e&4)!=0,'srcType is not an array');Ac((i.e&4)!=0,'destType is not an array');l=m.c;g=i.c;Ac((l.e&1)!=0?l==g:(g.e&1)==0,\"Array types don't match\");n=a.length;j=c.length;if(b<0||d<0||e<0||b+e>n||d+e>j){throw new $h}if(((l.e&1)==0||(l.e&4)!=0)&&m!=i){k=a;f=c;if(ee(a)===ee(c)&&b<d){b+=e;for(h=d+e;h-->d;){f[h]=k[--b]}}else{for(h=d+e;d<h;){f[d++]=k[b++]}}}else e>0&&Xd(a,b,c,d,e,true)}\n\tfunction Ul(){Ul=Lg;Sl=Vd(Rd(ke,1),Ru,0,7,[$u,1162261467,gv,1220703125,362797056,1977326743,gv,387420489,Yu,214358881,429981696,815730721,1475789056,170859375,268435456,410338673,612220032,893871739,1280000000,1801088541,113379904,148035889,191102976,244140625,308915776,387420489,481890304,594823321,729000000,887503681,gv,1291467969,1544804416,1838265625,60466176]);Tl=Vd(Rd(ke,1),Ru,0,7,[-1,-1,31,19,15,13,11,11,10,9,9,8,8,8,8,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5])}\n\tfunction Nk(a){var b,c,d,e,f;if(a.g!=null){return a.g}if(a.a<32){a.g=Wl(mh(a.f),ge(a.e));return a.g}e=Xl((!a.c&&(a.c=Kl(a.f)),a.c),0);if(a.e==0){return e}b=(!a.c&&(a.c=Kl(a.f)),a.c).e<0?2:1;c=e.length;d=-a.e+c-b;f=new sk;f.a+=e;if(a.e>0&&d>=-6){if(d>=0){rk(f,c-ge(a.e),'.')}else{f.a=Sj(f.a,0,b-1)+'0.'+Rj(f.a,b-1);rk(f,b+1,dk(Ak,0,-ge(d)-1))}}else{if(c-b>=1){f.a=Sj(f.a,0,b)+'.'+Rj(f.a,b);++c}f.a=Sj(f.a,0,c)+'E'+Rj(f.a,c);d>0&&rk(f,++c,'+');rk(f,++c,''+Dh(mh(d)))}a.g=f.a;return a.g}\n\tfunction Nt(b){var c,d,e;if(b.e.c.d==0)throw new tb('No isotopic distribution data');mr(b.e.c,new Ri(Ao(er(b.e.c)).a-2),new Ri(0));mr(b.e.c,new Ri(Ao(fr(b.e.c)).a+2),new Ri(0));d=new zp;hn(d,'FWHM',b.b+'');hn(d,'Threshold',b.a+'');try{if(b.d.d.b.length==1){e=Ro(b.d.d,0);hn(d,'Monoisotopic mass',ot(e)+'');hn(d,'Molecular weight',nt(e)+'');!!gu(e,null)&&hn(d,'Unsaturation',gu(e,null)+'')}}catch(a){a=Hg(a);if(_d(a,6)){c=a;nb(c)}else throw Gg(a)}return Bs(b.e.c,b.d+' - fwhm: '+b.b,b.g,d)}\n\tfunction Vk(a,b,c){var d,e,f,g,h,i,j;f=ll(a,b);g=f[0];i=f[1];if(i.e==0){return new Rk(g)}j=a.e*b.e;if(Ml(b)<54){h=ql(i);e=ql(b);d=qh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?-1:oh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?1:0;d=$k(wl(g,0)?1:0,j*(5+d),c)}else{d=jl(ul(i.e<0?new zl(1,i.d,i.a):i),b.e<0?new zl(1,b.d,b.a):b);d=$k(wl(g,0)?1:0,j*(5+d),c)}if(d!=0){if(Ml(g)<54){return al(ih(ql(g),nh(d)))}g=bm(g,Ll(nh(d)));return new Rk(g)}return new Rk(g)}\n\tfunction _j(a,b,c){if(c<128){a[b]=fe(c&127);return 1}else if(c<2048){a[b++]=fe(c>>6&31|192);a[b]=fe(c&63|128);return 2}else if(c<Zu){a[b++]=fe(c>>12&15|224);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 3}else if(c<2097152){a[b++]=fe(c>>18&7|240);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 4}else if(c<67108864){a[b++]=fe(c>>24&3|248);a[b++]=fe(c>>18&63|128);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 5}throw new cj('Character out of range: '+c)}\n\tfunction bm(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;g=a.e;i=b.e;if(g==0){return b}if(i==0){return a}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});if(g==i){k=ih(c,d);o=Ch(k);n=Ch(zh(k,32));return n==0?new yl(g,o):new zl(g,2,Vd(Rd(ke,1),Ru,0,7,[o,n]))}return Ll(g<0?Ah(d,c):Ah(c,d))}else if(g==i){m=g;l=f>=h?cm(a.a,f,b.a,h):cm(b.a,h,a.a,f)}else{e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==0){return hl(),gl}if(e==1){m=g;l=hm(a.a,f,b.a,h)}else{m=i;l=hm(b.a,h,a.a,f)}}j=new zl(m,l.length,l);kl(j);return j}\n\tfunction dm(a,b,c,d,e){var f,g;f=ih(jh(nh(b[0]),{l:Su,m:1023,h:0}),jh(nh(d[0]),{l:Su,m:1023,h:0}));a[0]=Ch(f);f=yh(f,32);if(c>=e){for(g=1;g<e;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}else{for(g=1;g<c;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<e;g++){f=ih(f,jh(nh(d[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}vh(f,{l:0,m:0,h:0})&&(a[g]=Ch(f))}\n\tfunction wm(a,b,c){var d,e,f,g,h;for(f=0;f<b;f++){d={l:0,m:0,h:0};for(h=f+1;h<b;h++){d=ih(ih(th(jh(nh(a[f]),{l:Su,m:1023,h:0}),jh(nh(a[h]),{l:Su,m:1023,h:0})),jh(nh(c[f+h]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[f+h]=Ch(d);d=zh(d,32)}c[f+b]=Ch(d)}Pl(c,c,b<<1);d={l:0,m:0,h:0};for(e=0,g=0;e<b;++e,g++){d=ih(ih(th(jh(nh(a[e]),{l:Su,m:1023,h:0}),jh(nh(a[e]),{l:Su,m:1023,h:0})),jh(nh(c[g]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32);++g;d=ih(d,jh(nh(c[g]),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32)}return c}\n\tfunction th(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;c=a.l&8191;d=a.l>>13|(a.m&15)<<9;e=a.m>>4&8191;f=a.m>>17|(a.h&255)<<5;g=(a.h&1048320)>>8;h=b.l&8191;i=b.l>>13|(b.m&15)<<9;j=b.m>>4&8191;k=b.m>>17|(b.h&255)<<5;l=(b.h&1048320)>>8;B=c*h;C=d*h;D=e*h;F=f*h;G=g*h;if(i!=0){C+=c*i;D+=d*i;F+=e*i;G+=f*i}if(j!=0){D+=c*j;F+=d*j;G+=e*j}if(k!=0){F+=c*k;G+=d*k}l!=0&&(G+=c*l);n=B&Su;o=(C&511)<<13;m=n+o;q=B>>22;r=C>>9;s=(D&262143)<<4;t=(F&31)<<17;p=q+r+s+t;v=D>>18;w=F>>5;A=(G&4095)<<8;u=v+w+A;p+=m>>22;m&=Su;u+=p>>22;p&=Su;u&=Tu;return Ug(m,p,u)}\n\tfunction jt(b,c,d,e,f,g){var h,i,j,k,l,m;if(Jj(c,'Zcharge')){b.a+=d;return}if(c.charCodeAt(0)==91){h=1;while(ni(c.charCodeAt(h)))++h;if(f==0){try{f=Pi(c.substr(1,h-1))}catch(a){a=Hg(a);if(_d(a,6)){throw new It('Bad isotope syntax')}else throw Gg(a)}}c=Sj(c,h,c.length-1)}i=en(b.c,c);if(!i){l=en(b.d,c);if(!l)throw new It('Unrecognized symbol: '+c);if(f!=0)throw new It('Syntax error: cannot specify isotopes for groups');if(g){k=Fo(new Go(l.a.g));while(Fn(k.a.a)){j=Ko(k);m=new ks(j);m.d*=d;m.c*=e;kt(b,m)}}else{kt(b,new ms(l,d,e))}}else{kt(b,new ls(i,f,d,e))}}\n\tfunction Uh(a){Th.call(this,''+('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.'),_d('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.',9)?'Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.':null)}\n\tfunction Tt(a,b){var c,d,e,f,g,h,i,j,k,l,m;m=new wt(new bu(a));Im(m,b);j=1;for(e=Fo(new Go(m.g));Fn(e.a.a);){c=Ko(e);h=en(a.a,c.i);h.b.b>j&&(j=h.b.b)}k=2*j*vj(qt(m)+1)/vj(2);l=a.d.b/(k*4);Yt(a,l);mr(a.c,new Ri(0),new Ri(1));for(d=Fo(new Go(m.g));Fn(d.a.a);){c=Ko(d);h=en(a.a,c.i);if(c.a!=0){f=new Os(c.b,c.b,h.g,h.e,h.a);h=f}if(h.b.b==0){i=new Ct(ge(h.c+0.5),h.c,1,h.g);gn(h.b,new fj(i.c),i)}if(fs(c)<0){throw new It('Number of element under 0')}else if(fs(c)==0);else if(fs(c)==1){a.c=Ut(a,new $t(a.d,h,a.a))}else{g=new $t(a.d,h,a.a);Yt(g,a.b);a.c=Ut(a,St(g,fs(c)))}}}\n\tfunction Vg(a,b,c){var d,e,f,g,h,i;if(b.l==0&&b.m==0&&b.h==0){throw new Zh('divide by zero')}if(a.l==0&&a.m==0&&a.h==0){c&&(Rg=Ug(0,0,0));return Ug(0,0,0)}if(b.h==Uu&&b.m==0&&b.l==0){return Wg(a,c)}i=false;if(b.h>>19!=0){b=uh(b);i=true}g=ah(b);f=false;e=false;d=false;if(a.h==Uu&&a.m==0&&a.l==0){e=true;f=true;if(g==-1){a=Tg((Jh(),Fh));d=true;i=!i}else{h=yh(a,g);i&&$g(h);c&&(Rg=Ug(0,0,0));return h}}else if(a.h>>19!=0){f=true;a=uh(a);d=true;i=!i}if(g!=-1){return Xg(a,g,i,f,c)}if(!ph(a,b)){c&&(f?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h)));return Ug(0,0,0)}return Yg(d?a:Ug(a.l,a.m,a.h),b,i,f,e,c)}\n\tfunction uc(a,b){var c,d,e,f,g,h,i,j,k;if(!b.length){return a.q('Unknown','anonymous',-1,-1)}k=Tj(b);Jj(k.substr(0,3),'at ')&&(k=Wj(k,3,k.length-3));k=k.replace(/\\[.*?\\]/g,'');g=k.indexOf('(');if(g==-1){g=k.indexOf('@');if(g==-1){j=k;k=''}else{j=Tj(Wj(k,g+1,k.length-(g+1)));k=Tj(k.substr(0,g))}}else{c=k.indexOf(')',g);j=k.substr(g+1,c-(g+1));k=Tj(k.substr(0,g))}g=Lj(k,ak(46));g!=-1&&(k=Wj(k,g+1,k.length-(g+1)));(!k.length||Jj(k,'Anonymous function'))&&(k='anonymous');h=Mj(j,ak(58));e=Nj(j,ak(58),h-1);i=-1;d=-1;f='Unknown';if(h!=-1&&e!=-1){f=j.substr(0,e);i=pc(j.substr(e+1,h-(e+1)));d=pc(Wj(j,h+1,j.length-(h+1)))}return a.q(f,k,i,d)}\n\tfunction pr(a,b,c){var d,e,f,g,h,i,j,k,l,m,n;if(!a.c){return false}g=null;m=null;i=new Gr(null,null);e=1;i.a[1]=a.c;l=i;while(l.a[e]){j=e;h=m;m=l;l=l.a[e];d=a.b.Y(b,l.c);e=d<0?0:1;d==0&&(!c.c||Pq(l.d,c.d))&&(g=l);if(!(!!l&&l.b)&&!lr(l.a[e])){if(lr(l.a[1-e])){m=m.a[j]=sr(l,e)}else if(!lr(l.a[1-e])){n=m.a[1-j];if(n){if(!lr(n.a[1-j])&&!lr(n.a[j])){m.b=false;n.b=true;l.b=true}else{f=h.a[1]==m?1:0;lr(n.a[j])?(h.a[f]=rr(m,j)):lr(n.a[1-j])&&(h.a[f]=sr(m,j));l.b=h.a[f].b=true;h.a[f].a[0].b=false;h.a[f].a[1].b=false}}}}}if(g){c.b=true;c.d=g.d;if(l!=g){k=new Gr(l.c,l.d);qr(a,i,g,k);m==g&&(m=k)}m.a[m.a[1]==l?1:0]=l.a[!l.a[0]?1:0];--a.d}a.c=i.a[1];!!a.c&&(a.c.b=false);return c.b}\n\tfunction Vt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);!!c&&!!d&&(rj(c.a-m)<rj(d.a-m)?(d=null):(c=null));if(c){if(to(k,c).a>l){l+=to(k,c).a;m=c.a}else{l+=to(k,c).a;nr(k,c)}}else if(d){if(to(k,d).a>l){l+=to(k,d).a;m=d.a}else{l+=to(k,d).a;nr(k,d)}}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\n\tfunction vt(a,b,c,d,e){var f,g,h,i,j,k,l;$r.call(this);this.c=b;this.d=c;this.f=d;h=a.indexOf('$');if(h>-1){this.b=Wj(a,h+1,a.length-(h+1));a=a.substr(0,h)}g=new RegExp('(\\\\([0-9]+[+-]\\\\))');for(j=g.exec(a);j;j=g.exec(a)){f=j[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9]+)([+-])$','$2$1'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('(\\\\([+-][0-9]+\\\\))');for(k=g.exec(a);k;k=g.exec(a)){f=k[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9])([+-])$','$1$2'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('([+-])(?![0-9])');for(i=g.exec(a);i;i=g.exec(a)){f=i[0];Jj(f,'+')?(a=a.replace(g,'Zcharge')):(a=a.replace(g,'(Zcharge-1)'))}Oj(a,'[a-zA-Z][0-9]+-[0-9]')&&(this.e=true);a.indexOf('}')!=-1;yt(this,a,e)}\n\tfunction Wt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);if(!!c&&!!d){m=(m*l+c.a*to(k,c).a+d.a*to(k,d).a)/(l+to(k,c).a+to(k,d).a);l+=to(k,c).a+to(k,d).a;nr(k,c);nr(k,d)}else if(c){m=(m*l+c.a*to(k,c).a)/(l+to(k,c).a);l+=to(k,c).a;nr(k,c)}else if(d){m=(m*l+d.a*to(k,d).a)/(l+to(k,d).a);l+=to(k,d).a;nr(k,d)}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\n\tfunction Hk(){Hk=Lg;var a,b,c;new Qk({l:1,m:0,h:0},0);new Qk({l:10,m:0,h:0},0);new Qk({l:0,m:0,h:0},0);zk=Sd(hf,Ru,14,11,0,1);Ak=Sd(ie,Ru,0,100,7,1);Bk=Vd(Rd(je,1),av,0,7,[1,5,25,125,625,3125,15625,78125,390625,1953125,9765625,48828125,244140625,1220703125,6103515625,30517578125,152587890625,762939453125,3814697265625,19073486328125,95367431640625,476837158203125,2384185791015625]);Ck=Sd(ke,Ru,0,Bk.length,7,1);Dk=Vd(Rd(je,1),av,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu,dv,100000000000,1000000000000,10000000000000,100000000000000,1000000000000000,10000000000000000]);Ek=Sd(ke,Ru,0,Dk.length,7,1);Fk=Sd(hf,Ru,14,11,0,1);a=0;for(;a<Fk.length;a++){zk[a]=new Qk(nh(a),0);Fk[a]=new Qk({l:0,m:0,h:0},a);Ak[a]=48}for(;a<Ak.length;a++){Ak[a]=48}for(c=0;c<Ck.length;c++){Ck[c]=Sk(Bk[c])}for(b=0;b<Ek.length;b++){Ek[b]=Sk(Dk[b])}mm()}\n\tfunction Jk(a,b){var c,d,e,f,g,h,i,j;c=0;g=0;f=b.length;j=new tk(b.length);if(0<f&&b.charCodeAt(0)==43){++g;++c;if(g<f&&(b.charCodeAt(g)==43||b.charCodeAt(g)==45)){throw new Dj('For input string: \"'+b+'\"')}}while(g<f&&b.charCodeAt(g)!=46&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}Wh(j,b,c,g);if(g<f&&b.charCodeAt(g)==46){++g;c=g;while(g<f&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}a.e=g-c;Wh(j,b,c,g)}else{a.e=0}if(g<f&&(b.charCodeAt(g)==101||b.charCodeAt(g)==69)){++g;c=g;if(g<f&&b.charCodeAt(g)==43){++g;g<f&&b.charCodeAt(g)!=45&&++c}h=b.substr(c,f-c);a.e=a.e-Pi(h);if(a.e!=ge(a.e)){throw new Dj('Scale out of range.')}}i=j.a;if(i.length<16){a.f=Zk(i);if(Xi(a.f)){throw new Dj('For input string: \"'+b+'\"')}a.a=Sk(a.f)}else{Lk(a,new Cl(i))}a.d=j.a.length;for(e=0;e<j.a.length;++e){d=Ij(j.a,e);if(d!=45&&d!=48){break}--a.d}a.d==0&&(a.d=1)}\n\tfunction Yl(a,b,c,d,e,f){var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;q=Sd(ke,Ru,0,d+1,7,1);r=Sd(ke,Ru,0,f+1,7,1);i=kj(e[f-1]);if(i!=0){Ol(r,e,0,i);Ol(q,c,0,i)}else{wk(c,0,q,0,d);wk(e,0,r,0,f)}j=r[f-1];l=b-1;m=d;while(l>=0){if(q[m]==j){k=-1}else{s=ih(xh(jh(nh(q[m]),{l:Su,m:1023,h:0}),32),jh(nh(q[m-1]),{l:Su,m:1023,h:0}));v=_l(s,j);k=Ch(v);u=Ch(yh(v,32));if(k!=0){t=false;++k;do{--k;if(t){break}o=th(jh(nh(k),{l:Su,m:1023,h:0}),jh(nh(r[f-2]),{l:Su,m:1023,h:0}));w=ih(xh(nh(u),32),jh(nh(q[m-2]),{l:Su,m:1023,h:0}));p=ih(jh(nh(u),{l:Su,m:1023,h:0}),jh(nh(j),{l:Su,m:1023,h:0}));kj(Ch(zh(p,32)))<32?(t=true):(u=Ch(p))}while(oh(Eh(o,{l:0,m:0,h:Uu}),Eh(w,{l:0,m:0,h:Uu})))}}if(k!=0){g=am(q,m-f,r,f,k);if(g!=0){--k;h={l:0,m:0,h:0};for(n=0;n<f;n++){h=ih(h,ih(jh(nh(q[m-f+n]),{l:Su,m:1023,h:0}),jh(nh(r[n]),{l:Su,m:1023,h:0})));q[m-f+n]=Ch(h);h=zh(h,32)}}}a[l]=k;--m;--l}if(i!=0){Rl(r,f,q,0,i);return r}wk(q,0,r,0,f);return q}\n\tfunction Db(){var a=['\\\\u0000','\\\\u0001','\\\\u0002','\\\\u0003','\\\\u0004','\\\\u0005','\\\\u0006','\\\\u0007','\\\\b','\\\\t','\\\\n','\\\\u000B','\\\\f','\\\\r','\\\\u000E','\\\\u000F','\\\\u0010','\\\\u0011','\\\\u0012','\\\\u0013','\\\\u0014','\\\\u0015','\\\\u0016','\\\\u0017','\\\\u0018','\\\\u0019','\\\\u001A','\\\\u001B','\\\\u001C','\\\\u001D','\\\\u001E','\\\\u001F'];a[34]='\\\\\"';a[92]='\\\\\\\\';a[173]='\\\\u00ad';a[1536]='\\\\u0600';a[1537]='\\\\u0601';a[1538]='\\\\u0602';a[1539]='\\\\u0603';a[1757]='\\\\u06dd';a[1807]='\\\\u070f';a[6068]='\\\\u17b4';a[6069]='\\\\u17b5';a[8203]='\\\\u200b';a[8204]='\\\\u200c';a[8205]='\\\\u200d';a[8206]='\\\\u200e';a[8207]='\\\\u200f';a[8232]='\\\\u2028';a[8233]='\\\\u2029';a[8234]='\\\\u202a';a[8235]='\\\\u202b';a[8236]='\\\\u202c';a[8237]='\\\\u202d';a[8238]='\\\\u202e';a[8288]='\\\\u2060';a[8289]='\\\\u2061';a[8290]='\\\\u2062';a[8291]='\\\\u2063';a[8292]='\\\\u2064';a[8298]='\\\\u206a';a[8299]='\\\\u206b';a[8300]='\\\\u206c';a[8301]='\\\\u206d';a[8302]='\\\\u206e';a[8303]='\\\\u206f';a[65279]='\\\\ufeff';a[65529]='\\\\ufff9';a[65530]='\\\\ufffa';a[65531]='\\\\ufffb';return a}\n\tfunction Wl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n;h=qh(a,{l:0,m:0,h:0});h&&(a=uh(a));if(lh(a,{l:0,m:0,h:0})){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:l=new sk;b<0?(l.a+='0E+',l):(l.a+='0E',l);l.a+=b==$u?'2147483648':''+-b;return l.a;}}j=Sd(ie,Ru,0,19,7,1);c=18;n=a;do{i=n;n=kh(n,{l:10,m:0,h:0});j[--c]=Ch(ih({l:48,m:0,h:0},Ah(i,th(n,{l:10,m:0,h:0}))))&_u}while(vh(n,{l:0,m:0,h:0}));d=Ah(Ah(Ah({l:18,m:0,h:0},nh(c)),nh(b)),{l:1,m:0,h:0});if(b==0){h&&(j[--c]=45);return dk(j,c,18-c)}if(b>0&&ph(d,{l:4194298,m:Su,h:Tu})){if(ph(d,{l:0,m:0,h:0})){e=c+Ch(d);for(g=17;g>=e;g--){j[g+1]=j[g]}j[++e]=46;h&&(j[--c]=45);return dk(j,c,18-c+1)}for(f=2;qh(nh(f),ih(uh(d),{l:1,m:0,h:0}));f++){j[--c]=48}j[--c]=46;j[--c]=48;h&&(j[--c]=45);return dk(j,c,18-c)}m=c+1;k=new tk;h&&(k.a+='-',k);if(18-m>=1){ok(k,j[c]);k.a+='.';k.a+=dk(j,c+1,18-c-1)}else{k.a+=dk(j,c,18-c)}k.a+='E';oh(d,{l:0,m:0,h:0})&&(k.a+='+',k);k.a+=''+Dh(d);return k.a}\n\tfunction dt(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;b=Pj(b,' ','');b=Pj(b,'^([0-9]+[A-Z][a-z]?)$','[$1]');Oj(b,'.*[a-zA-Z][0-9]+-[0-9].*')&&(a.c=true);r=new RegExp('([A-Z][a-z]?\\\\{[0-9.,]*\\\\})');for(t=r.exec(b);t;t=r.exec(b)){h=t[1];p=(v=$s(h),w=Pj(h,'\\\\{.*',''),an(a.a,v)||hn(a.a,v,new Qs(en(a.a,w),v,h)),v);b=b.replace(r,p)}r=new RegExp('(\\\\{[A-Za-z0-9]*\\\\})');for(s=r.exec(b);s;s=r.exec(b)){h=s[1];q=(A=$s(h),B=Pj(h,'[\\\\{\\\\}]',''),an(a.b,A)||hn(a.b,A,new Bt(A,h,B,a.a,a.b)),A);b=b.replace(r,q)}b.indexOf('}')!=-1;g=Qj(b,'\\\\.',0);n=1;o=false;for(e=0,f=g.length;e<f;++e){d=g[e];if(ct(d)){if(o)throw new It(\"Syntax error: 'number.number.'\");n=Oi(d);o=true;continue}u=d.indexOf('/');if(u!=-1){if(o)throw new It(\"Syntax error: 'number.number/number'\");k=u+1;l=d.length;while(ni(Ij(d,k++))){if(k>=l)break}k<l&&--k;n=et(d.substr(0,k));o=true;if(k>=l)continue;else d=Wj(d,k,d.length-k)}j=0;for(;j<d.length;j++){if(!ni(d.charCodeAt(j)))break}if(j>0){m=Oi(d.substr(0,j));d=Wj(d,j,d.length-j);o?(n+=m/yj(10,j)):(n=m)}i=new vt(d,a.a,a.b,n,c);i.f==0&&(a.e=true);i.e&&(a.c=true);Qo(a.d,i);n=1;o=false}}\n\tfunction Bs(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;t=new mk;s=a.d;s>~~(a.a/2)&&(s=~~(a.a/2));t.a+='##TITLE= '+b+'\\r\\n'+'##JCAMP-DX= 5.00\\r\\n'+'##DATA TYPE= MASS SPECTRUM\\r\\n'+'##DATA CLASS= PEAK TABLE\\r\\n'+'##ORIGIN= Generated spectrum based on ChemCalc www.chemcalc.org\\r\\n'+'##SPECTROMETER/DATA SYSTEM= Based on ChemCalc isotopic distribution calculator\\r\\n'+'##XUNITS= M/Z\\r\\n'+'##YUNITS= RELATIVE ABUNDANCE\\r\\n'+'##NPOINTS=         \\r\\n';e=t.a.length;t.a+='##MAXY= 100\\r\\n##MINY= 0\\r\\n';for(n=Mn(new Nn(d));un(n.a);){m=Rn(n);lk(t,'##$'+m+'='+(m==null?Xm(Dp(d.a,null)):d.c.gb(m))+'\\r\\n')}t.a+='##PEAK TABLE= (XY..XY)\\r\\n';p=0;l=(new Fr(a)).a.W();o=(new Nn(c)).H(Sd(Pe,Ru,7,(new Nn(c)).a.b,0,1));jp(o,0,o.length,(pp(),pp(),op));g=0;q=mv;j=true;f=0;r=false;w='';while(Fn(l.a)&&f<s){++f;h=l.b=Gn(l.a);u=h.T().a;v=h.U().a;v<1.0E-9&&(v=0);if(v!=0&&w.length>0){t.a+=w;++p;w=''}i=true;for(k=g;k<o.length;k++){if(!Fn(l.a)||rj(o[k].a-q)<rj(o[k].a-u)){if(i){t.a+='  $$ ';i=false}else{t.a+=','}lk(t,dn(c,o[k]));++g}else{break}}q=u;if(j){j=false;lk(t,As(u)+', '+As(v*100));++p}else{if(!r||v!=0){t.a+='\\r\\n';lk(t,As(u)+', '+As(v*100));++p}else{w='\\r\\n'+As(u)+', '+As(0)}v==0?(r=true):(r=false)}}t.a+='\\r\\n##END=\\r\\n';t.a=Sj(t.a,0,e-10)+(p+'')+Rj(t.a,e-2);return t}\n\tfunction Xl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;A=a.e;n=a.d;e=a.a;if(A==0){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:v=new sk;b<0?(v.a+='0E+',v):(v.a+='0E',v);v.a+=-b;return v.a;}}s=n*10+1+7;t=Sd(ie,Ru,0,s+1,7,1);c=s;if(n==1){g=e[0];if(g<0){G=jh(nh(g),{l:Su,m:1023,h:0});do{o=G;G=kh(G,{l:10,m:0,h:0});t[--c]=48+Ch(Ah(o,th(G,{l:10,m:0,h:0})))&_u}while(vh(G,{l:0,m:0,h:0}))}else{G=g;do{o=G;G=~~(G/10);t[--c]=48+(o-G*10)&_u}while(G!=0)}}else{C=Sd(ke,Ru,0,n,7,1);F=n;wk(e,0,C,0,n);H:while(true){w={l:0,m:0,h:0};for(i=F-1;i>=0;i--){D=ih(xh(w,32),jh(nh(C[i]),{l:Su,m:1023,h:0}));q=Vl(D);C[i]=Ch(q);w=nh(Ch(yh(q,32)))}r=Ch(w);p=c;do{t[--c]=48+r%10&_u}while((r=~~(r/10))!=0&&c!=0);d=9-p+c;for(h=0;h<d&&c>0;h++){t[--c]=48}k=F-1;for(;C[k]==0;k--){if(k==0){break H}}F=k+1}while(t[c]==48){++c}}m=A<0;f=s-c-b-1;if(b==0){m&&(t[--c]=45);return dk(t,c,s-c)}if(b>0&&f>=-6){if(f>=0){j=c+f;for(l=s-1;l>=j;l--){t[l+1]=t[l]}t[++j]=46;m&&(t[--c]=45);return dk(t,c,s-c+1)}for(k=2;k<-f+1;k++){t[--c]=48}t[--c]=46;t[--c]=48;m&&(t[--c]=45);return dk(t,c,s-c)}B=c+1;u=new tk;m&&(u.a+='-',u);if(s-B>=1){ok(u,t[c]);u.a+='.';u.a+=dk(t,c+1,s-c-1)}else{u.a+=dk(t,c,s-c)}u.a+='E';f>0&&(u.a+='+',u);u.a+=''+f;return u.a}\n\tfunction Wb(a,b){var c,d,e,f;Yb(b,a.e);c=a.d[0];d=a.d[1];e=a.d[2];f=a.d[3];c=Zb(c,d,e,f,a.e[0],7,-680876936);f=Zb(f,c,d,e,a.e[1],12,-389564586);e=Zb(e,f,c,d,a.e[2],17,606105819);d=Zb(d,e,f,c,a.e[3],22,-1044525330);c=Zb(c,d,e,f,a.e[4],7,-176418897);f=Zb(f,c,d,e,a.e[5],12,1200080426);e=Zb(e,f,c,d,a.e[6],17,-1473231341);d=Zb(d,e,f,c,a.e[7],22,-45705983);c=Zb(c,d,e,f,a.e[8],7,1770035416);f=Zb(f,c,d,e,a.e[9],12,-1958414417);e=Zb(e,f,c,d,a.e[10],17,-42063);d=Zb(d,e,f,c,a.e[11],22,-1990404162);c=Zb(c,d,e,f,a.e[12],7,1804603682);f=Zb(f,c,d,e,a.e[13],12,-40341101);e=Zb(e,f,c,d,a.e[14],17,-1502002290);d=Zb(d,e,f,c,a.e[15],22,1236535329);c=$b(c,d,e,f,a.e[1],5,-165796510);f=$b(f,c,d,e,a.e[6],9,-1069501632);e=$b(e,f,c,d,a.e[11],14,643717713);d=$b(d,e,f,c,a.e[0],20,-373897302);c=$b(c,d,e,f,a.e[5],5,-701558691);f=$b(f,c,d,e,a.e[10],9,38016083);e=$b(e,f,c,d,a.e[15],14,-660478335);d=$b(d,e,f,c,a.e[4],20,-405537848);c=$b(c,d,e,f,a.e[9],5,568446438);f=$b(f,c,d,e,a.e[14],9,-1019803690);e=$b(e,f,c,d,a.e[3],14,-187363961);d=$b(d,e,f,c,a.e[8],20,1163531501);c=$b(c,d,e,f,a.e[13],5,-1444681467);f=$b(f,c,d,e,a.e[2],9,-51403784);e=$b(e,f,c,d,a.e[7],14,1735328473);d=$b(d,e,f,c,a.e[12],20,-1926607734);c=_b(c,d,e,f,a.e[5],4,-378558);f=_b(f,c,d,e,a.e[8],11,-2022574463);e=_b(e,f,c,d,a.e[11],16,1839030562);d=_b(d,e,f,c,a.e[14],23,-35309556);c=_b(c,d,e,f,a.e[1],4,-1530992060);f=_b(f,c,d,e,a.e[4],11,1272893353);e=_b(e,f,c,d,a.e[7],16,-155497632);d=_b(d,e,f,c,a.e[10],23,-1094730640);c=_b(c,d,e,f,a.e[13],4,681279174);f=_b(f,c,d,e,a.e[0],11,-358537222);e=_b(e,f,c,d,a.e[3],16,-722521979);d=_b(d,e,f,c,a.e[6],23,76029189);c=_b(c,d,e,f,a.e[9],4,-640364487);f=_b(f,c,d,e,a.e[12],11,-421815835);e=_b(e,f,c,d,a.e[15],16,530742520);d=_b(d,e,f,c,a.e[2],23,-995338651);c=ac(c,d,e,f,a.e[0],6,-198630844);f=ac(f,c,d,e,a.e[7],10,1126891415);e=ac(e,f,c,d,a.e[14],15,-1416354905);d=ac(d,e,f,c,a.e[5],21,-57434055);c=ac(c,d,e,f,a.e[12],6,1700485571);f=ac(f,c,d,e,a.e[3],10,-1894986606);e=ac(e,f,c,d,a.e[10],15,-1051523);d=ac(d,e,f,c,a.e[1],21,-2054922799);c=ac(c,d,e,f,a.e[8],6,1873313359);f=ac(f,c,d,e,a.e[15],10,-30611744);e=ac(e,f,c,d,a.e[6],15,-1560198380);d=ac(d,e,f,c,a.e[13],21,1309151649);c=ac(c,d,e,f,a.e[4],6,-145523070);f=ac(f,c,d,e,a.e[11],10,-1120210379);e=ac(e,f,c,d,a.e[2],15,718787259);d=ac(d,e,f,c,a.e[9],21,-343485551);a.d[0]=~~(a.d[0]+c);a.d[1]=~~(a.d[1]+d);a.d[2]=~~(a.d[2]+e);a.d[3]=~~(a.d[3]+f)}\n\tfunction yt(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;c=Tj(c);c=Pj(c,'[=]','');if(c.indexOf('.')!=-1)throw new tb('Error: the formula \"'+c+'\"contains dots (error in parsing)');if(Jj(c,'')){return}if(ni(c.charCodeAt(0))){throw new tb('Error: the formula starts with a number')}c.charCodeAt(0)==120&&(c='X'+Sj(c,1,c.length));g=new dr;k=1;j=1;m=1;l=1;r=1;q=1;w=c.length-1;while(w>=0){if(ni(c.charCodeAt(w))){f=w;while(w>0&&ni(c.charCodeAt(w)))--w;e=c.substr(w+1,f+1-(w+1));u=Pi(e);if(c.charCodeAt(w)==45){--w;if(w<0)throw new It(\"Syntax error: the formula starts with '-': \"+c);f=w;while(w>0&&ni(c.charCodeAt(w)))--w;w==0&&ni(c.charCodeAt(0))&&--w;o=c.substr(w+1,f+1-(w+1));if(o.length==0){u=Pi('-'+e);v=u}else{v=Pi(o)}}else v=u;if(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l;l*=u;m*=v}else{k=v;j=u}}else{if(c.charCodeAt(w)==93){s=w;--w;if(w<=1)throw new It('Syntax error: bad isotope syntax');if(!oi(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');while(w>0&&qi(c.charCodeAt(w)))--w;if(!ri(c.charCodeAt(w)))throw new It('Syntax error: bad symbol (must start with uppercase)');t=c.substr(w,s-w);--w;if(w<0)throw new It('Syntax error: bad isotope syntax');if(!ni(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');f=w;while(w>0&&c.charCodeAt(w)!=91)--w;p=c.substr(w+1,f+1-(w+1));try{n=Pi(p)}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad isotope number '+p)}else throw Gg(a)}if(c.charCodeAt(w)!=91)throw new It(\"Isotope syntax error: no opening '['\");jt(b,t,k*m,j*l,n,d);j=1;k=1;if(w>0)--w;else return}else{if(oi(c.charCodeAt(w))){s=w;while(w>0&&qi(c.charCodeAt(w)))--w;if(s==0&&w==0&&c.charCodeAt(0)==110){b.f=0;return}if(!ri(c.charCodeAt(w)))throw new It('Syntax error: the symbol must start with uppercase');t=c.substr(w,s+1-w);if(Jj(t,'X')&&w==0){b.f=0;return}--w;jt(b,t,k*m,j*l,0,d);j=1;k=1}else{while(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l}if(w<0)break;while(c.charCodeAt(w)==40){l=q;m=r;if(g.a.b.length==0){q=1;r=1}else{q=br(g).a;r=br(g).a}--w;if(w<0)break}if(w<0)break;if(c.charCodeAt(w)==125){i=w;while(w>0&&c.charCodeAt(w)!=123)--w;if(c.charCodeAt(w)!=123)throw new It('Syntax error (combinatorial): no opening brace');zt(b,c.substr(w+1,i-(w+1)),k*m,j*l);--w}}}}if(w<0)break;h=c.charCodeAt(w);if(h==123)throw new It('Syntax error (combinatorial): no closing brace');if(h==91)throw new It('Syntax error (isotope): no closing bracket');if(!(null!=String.fromCharCode(h).match(/[A-Z\\d]/i))&&h!=40&&h!=91&&h!=123&&h!=93&&h!=41&&h!=125)throw new It(\"Syntax error: unrecognized character: '\"+Zd(h)+\"'\")}}\n\tfunction wu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N;u=new Mu;if(!b){Ju(u,'error',new Id('options is null'));return u}J=b.c.gb('referenceVersion');J!=null&&!Jj(J,'')&&(d=(Ht(),Ht(),Ft));C=b.c.gb('mf');r=b.c.gb('isotopomers');M=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;n=new Ri(0.001);try{n=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}L=new Ri(1.0E-5);try{L=new Ri(Oi(b.c.gb('threshold')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}p=0;try{p=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}h=null;try{h=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}t=0;!(b.c.gb('joiningAlgorithm')===undefined)&&Jj(b.c.gb('joiningAlgorithm').toLowerCase(),'center')&&(t=Jt);w=new Mu;C==null?Ju(w,'mf',(cd(),cd(),bd)):Ju(w,'mf',new Id(C));Ju(w,'threshold',new hd(L.a));Ju(w,'fwhm',new hd(n.a));Ju(w,'typedResult',(Xc(),M?Wc:Vc));r==null?Ju(w,'isotopomers',(cd(),cd(),bd)):Ju(w,'isotopomers',new Id(r));p>0&&Ju(w,'gaussianWidth',new hd(p));J==null?Ju(w,'referenceVersion',(cd(),cd(),bd)):Ju(w,'referenceVersion',new Id(J));Ju(u,'options',w.a);if(C!=null){C=Tj(C);Jj(C,'')&&(C=null)}if(C!=null){try{k=new gt(C,d,c);if(k.d.b.length>0){if(k.e){Ju(u,'error',new Id('mass not defined'))}else{if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',ft(k));Ju(u,'mf',D.a)}else{Lu(u,'mf',ft(k))}Ju(u,'mw',new hd(_s(k)));Ju(u,'em',new hd(at(k)));Ju(u,'nominalMass',new hd(bt(k)));if(r!=null&&!Jj(r,'')){K=new Qt(d,k,n.a,L.a);K.f=t;Lt(K);Mt(K);if(p>0){o=mu(p);Kt(K,o,n.a)}Ju(w,'numberLines',new hd(K.e.c.d));if(r.indexOf('jcamp')>-1){if(M){s=new Mu;Ju(s,'type',new Id('jcamp'));Lu(s,'value',Nt(K).a);Ju(u,'jcamp',s.a)}else{Lu(u,'jcamp',Nt(K).a)}}if(r.indexOf('xy')>-1){if(M){N=new Mu;Ju(N,'type',new Id('xy'));Lu(N,'value',Ot(K).a);Ju(u,'xy',N.a)}else{Lu(u,'xy',Ot(K).a)}}if(r.indexOf('array')>-1&&r.indexOf('arrayX')==-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'spectrum',v.a)}if(r.indexOf('arrayXXYY')>-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'arrayXXYY',v.a)}if(r.indexOf('arrayXYXY')>-1){e=Pt(K);Ju(u,'arrayXYXY',(new Iu(e)).a)}}I=new Gu;Ju(u,'parts',I.a);for(m=new In(k.d);m.a<m.c.G();){l=(Dc(m.a<m.c.G()),m.c.R(m.b=m.a++));H=new Mu;Fu(I,H.a);if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',tt(l));Ju(H,'mf',D.a)}else{Lu(H,'mf',tt(l))}Ju(H,'mw',new hd(nt(l)));Ju(H,'em',new hd(ot(l)));l.b.length>0&&Lu(H,'comment',l.b);Ku(H,gu(l,h));G=ot(l)-l.a*nv;if(l.a!=0){Ju(H,'charge',new hd(l.a));G=G/sj(l.a)}Ju(H,'msem',new hd(G));lt(l);i=new Gu;for(g=Fo(new Go(l.g));Fn(g.a.a);){f=Ko(g);j=new Mu;Lu(j,'element',f.i);Ju(j,'number',new hd(fs(f)));Ju(j,'percentage',new hd(f.g));Fu(i,j.a)}Ju(H,'ea',i.a)}}}else{Ju(u,'error',new Id('there is no part in the molecule'))}}catch(a){a=Hg(a);if(_d(a,4)){F=a;Lu(u,'error',F.f)}else throw Gg(a)}}else{Ju(u,'error',new Id('parameter mf not specified'))}return u}\n\tfunction zu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb;F=0.5;Q=0;K=50;I=1000;s=false;bb=false;R=false;v=b.c.gb('jcampLink')!=null&&(ei(),Kj('true',b.c.gb('jcampLink'))?di:ci).a;u=b.c.gb('jcampBaseURL')==null?'http://www.chemcalc.org/service/jcamp/':b.c.gb('jcampBaseURL');N='C0-100H0-202N0-10O0-10F0-3Cl0-3Br0-1';Y=mv;X=new $r;$=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;q=new Ri(0.001);try{q=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}r=0;try{r=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}A=new Mu;if(!b){Ju(A,'error',new Id('options is null'));return A}U=b.c.gb('referenceVersion');U!=null&&!Jj(U,'')&&(d=(Ht(),Ht(),Ft));l=null;try{l=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Q=Oi(b.c.gb('minUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{K=Oi(b.c.gb('maxUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}if(!(b.c.gb('integerUnsaturation')===undefined)){try{s=(ei(),Kj('true',b.c.gb('integerUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('useUnsaturation')===undefined)){try{bb=(ei(),Kj('true',b.c.gb('useUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('numberOfResultsOnly')===undefined)){try{R=(ei(),Kj('true',b.c.gb('numberOfResultsOnly')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}try{I=Oi(b.c.gb('maxNumberRows'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Y=Oi(b.c.gb('monoisotopicMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{F=Oi(b.c.gb('massRange'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}P=Y-F;H=Y+F;try{H=Oi(b.c.gb('maxMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}!(b.c.gb('mfRange')===undefined)&&b.c.gb('mfRange')!=null&&b.c.gb('mfRange').length>0&&(N=b.c.gb('mfRange'));if(Y<0){Ju(A,'error',new Id('monoisotopicMass must be specified and larger than 0'));return A}B=new Mu;Ju(B,'minUnsaturation',new hd(Q));Ju(B,'maxUnsaturation',new hd(K));Ju(B,'integerUnsaturation',(Xc(),s?Wc:Vc));Ju(B,'useUnsaturation',bb?Wc:Vc);Ju(B,'numberOfResultsOnly',R?Wc:Vc);Ju(B,'minMass',new hd(Bh(mh(Math.round(P*dv)))/dv));Ju(B,'maxMass',new hd(Bh(mh(Math.round(H*dv)))/dv));Ju(B,'massRange',new hd(Bh(mh(Math.round(F*dv)))/dv));N==null?Ju(B,'mfRange',(cd(),cd(),bd)):Ju(B,'mfRange',new Id(N));Ju(B,'monoisotopicMass',new hd(Bh(mh(Math.round(Y*dv)))/dv));U==null?Ju(B,'referenceVersion',(cd(),cd(),bd)):Ju(B,'referenceVersion',new Id(U));Ju(B,'jcampLink',v?Wc:Vc);u==null?Ju(B,'jcampBaseURL',(cd(),cd(),bd)):Ju(B,'jcampBaseURL',new Id(u));Ju(B,'typedResult',$?Wc:Vc);Ju(A,'options',B.a);t={l:0,m:0,h:0};S={l:0,m:0,h:0};f=0;g=0;try{e=new ht(N,d,c,false);if(e.d.b.length!=1){Ju(A,'error',new Id('Number of parts not equal to 1'));return A}f=Ro(e.d,0).a;g=f<0?-f:f;if(f!=0){Y=Y*g+f*nv;P=P*g+f*nv;H=H*g+f*nv;F=F*g}T=Bu(Ro(e.d,0),Y+F);if(T){j=Sd(je,av,0,T.a.b.length,7,1);O=Sd(je,av,0,T.a.b.length,7,1);G=Sd(je,av,0,T.a.b.length,7,1);xu(T,O,G);Ju(A,'bruteForceIteration',new hd(Oi(Xl(yu(T),0))));Z=false;k=0;J=T.a.b.length;Ws((Vq(0,T.a.b.length),Ro(T.a,0)),0,Y,O[0],G[0],F);while(!Z){if(oh(t,{l:3511296,m:476,h:0})){throw new It('Iteration number is over the current maximum of: 2000000000')}if(j[k]>=P&&j[k]<=H){ab=hu(T,l);if(!bb||!ab||ab.a>=Q&&ab.a<=K&&(!s||ab.a==ge(ab.a))){S=ih(S,{l:1,m:0,h:0});if(!R){if(X.g.d>=I){if(rj(Ao(fr(X.g)).a)>rj(j[k]-Y)){Wm(vo(X.g));Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}else{Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}}}while(k<J&&k>=0){t=ih(t,{l:1,m:0,h:0});i=(Vq(k,T.a.b.length),Ro(T.a,k));if(i.b<i.c){++i.b;k==0?(j[0]=i.a.e*i.b):(j[k]=j[k-1]+i.a.e*i.b);if(k<J-1){++k;Ws((Vq(k,T.a.b.length),Ro(T.a,k)),j[k-1],Y,O[k],G[k],F)}else{break}}else{--k}}k<0&&(Z=true)}}Ju(A,'realIteration',new hd(Bh(Ah(t,{l:1,m:0,h:0}))));Ju(A,'numberResults',new hd(Bh(S)));Ju(A,'charge',new hd(f))}catch(a){a=Hg(a);if(_d(a,4)){m=a;Lu(A,'error',ob(m)+'\\r'+(ti(Dg),Dg.k+'@'+nj(Nb(B),16)))}else throw Gg(a)}D=new Gu;h='';f!=0&&(f>0?(h='(+'+f+')'):(h='('+f+')'));for(W=Fo(new Go(X.g));Fn(W.a.a);){V=Ko(W);C=new Mu;if(f==0){p=Bh(mh(zj(V.a*dv)))/dv;o=Bh(mh(zj(V.c*dv)))/dv}else{p=Bh(mh(zj(V.a/g*dv)))/dv;o=Bh(mh(zj((V.c-f*nv)/g*dv)))/dv}Ju(C,'error',new hd(p));Ju(C,'em',new hd(o));Ju(C,'ppm',new hd(Bh(mh(Math.round(p/o*dv)))/dv*cv));Lu(C,'info',V.b+h);try{w=u+V.b+'&fwhm='+q;r>0&&(w+='&gaussianWidth='+r);if($){L=new Mu;Ju(L,'type',new Id('mf'));Lu(L,'value',ft(new gt(V.b+h,d,c)));Ju(C,'mf',L.a);if(v){M=new Mu;Ju(M,'type',new Id('jcamp'));w==null?Ju(M,'url',(cd(),cd(),bd)):Ju(M,'url',new Id(w));Ju(C,'jcamp',M.a)}}else{Lu(C,'mf',ft(new gt(V.b+h,d,c)));v&&(w==null?Ju(C,'jcampURL',(cd(),cd(),bd)):Ju(C,'jcampURL',new Id(w)))}}catch(a){a=Hg(a);if(_d(a,4)){n=a;Lu(C,'mf',ob(n))}else throw Gg(a)}try{Ju(C,'unsat',new hd(Bh(mh(zj(V.d.a*dv)))/dv))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}Fu(D,C.a)}Ju(A,'results',D.a);return A}\n\tfunction Ht(){Ht=Lg;var b,c,d,e,f,g,h,i,j,k,l,m;Ft=new zp;e=new zp;k=Qj('1\\tH\\tHydrogen\\t1.0079407538967635\\n2\\tHe\\tHelium\\t4.002601932146926\\n3\\tLi\\tLithium\\t6.940037632200444\\n4\\tBe\\tBeryllium\\t9.01218224\\n5\\tB\\tBoron\\t10.8110281284\\n6\\tC\\tCarbon\\t12.010735896764565\\n7\\tN\\tNitrogen\\t14.006703211872013\\n8\\tO\\tOxygen\\t15.99940492727602\\n9\\tF\\tFluorine\\t18.998403227\\n10\\tNe\\tNeon\\t20.180046379828486\\n11\\tNa\\tSodium\\t22.989769280929\\n12\\tMg\\tMagnesium\\t24.305051612756515\\n13\\tAl\\tAluminium\\t26.9815386312\\n14\\tSi\\tSilicon\\t28.085498706539465\\n15\\tP\\tPhosphorus\\t30.973761632000002\\n16\\tS\\tSulfur\\t32.0647872364133\\n17\\tCl\\tChlorine\\t35.4529375824264\\n18\\tAr\\tArgon\\t39.947676713373\\n19\\tK\\tPotassium\\t39.0983011264695\\n20\\tCa\\tCalcium\\t40.078022655762524\\n21\\tSc\\tScandium\\t44.95591199\\n22\\tTi\\tTitanium\\t47.86674933516\\n23\\tV\\tVanadium\\t50.9414675085\\n24\\tCr\\tChromium\\t51.99613314762095\\n25\\tMn\\tManganese\\t54.93804517\\n26\\tFe\\tIron\\t55.8451456935552\\n27\\tCo\\tCobalt\\t58.93319506999999\\n28\\tNi\\tNickel\\t58.69335163208455\\n29\\tCu\\tCopper\\t63.546039795084994\\n30\\tZn\\tZinc\\t65.40872812701322\\n31\\tGa\\tGallium\\t69.72306563428617\\n32\\tGe\\tGermanium\\t72.63984326005341\\n33\\tAs\\tArsenic\\t74.92159652\\n34\\tSe\\tSelenium\\t78.9593882599375\\n35\\tBr\\tBromine\\t79.9035279923569\\n36\\tKr\\tKrypton\\t83.7980066431168\\n37\\tRb\\tRubidium\\t85.46766359470149\\n38\\tSr\\tStrontium\\t87.6166441185128\\n39\\tY\\tYttrium\\t88.905848327\\n40\\tZr\\tZirconium\\t91.22364763203382\\n41\\tNb\\tNiobium\\t92.90637812599999\\n42\\tMo\\tMolybdenum\\t95.93759212713759\\n43\\tTc\\tTechnetium\\t98.0\\n44\\tRu\\tRuthenium\\t101.0649455723334\\n45\\tRh\\tRhodium\\t102.90550430000002\\n46\\tPd\\tPalladium\\t106.41532914746399\\n47\\tAg\\tSilver\\t107.868151248228\\n48\\tCd\\tCadmium\\t112.41155226203729\\n49\\tIn\\tIndium\\t114.81808621342\\n50\\tSn\\tTin\\t118.71010849931781\\n51\\tSb\\tAntimony\\t121.75978615571421\\n52\\tTe\\tTellurium\\t127.60312786587177\\n53\\tI\\tIodine\\t126.9044734\\n54\\tXe\\tXenon\\t131.29276070673757\\n55\\tCs\\tCaesium\\t132.90545193324\\n56\\tBa\\tBarium\\t137.3268918829641\\n57\\tLa\\tLanthanum\\t138.90545400916656\\n58\\tCe\\tCerium\\t140.11572627079408\\n59\\tPr\\tPraseodymium\\t140.907652826\\n60\\tNd\\tNeodymium\\t144.236131428275\\n61\\tPm\\tPromethium\\t145.0\\n62\\tSm\\tSamarium\\t150.3663485610868\\n63\\tEu\\tEuropium\\t151.96437050019\\n64\\tGd\\tGadolinium\\t157.25212224243995\\n65\\tTb\\tTerbium\\t158.925346827\\n66\\tDy\\tDysprosium\\t162.49946572489424\\n67\\tHo\\tHolmium\\t164.930322127\\n68\\tEr\\tErbium\\t167.25907628559352\\n69\\tTm\\tThulium\\t168.934213327\\n70\\tYb\\tYtterbium\\t173.0376956147714\\n71\\tLu\\tLutetium\\t174.96672140854997\\n72\\tHf\\tHafnium\\t178.4849721651158\\n73\\tTa\\tTantalum\\t180.9478757552806\\n74\\tW\\tTungsten\\t183.8417781725967\\n75\\tRe\\tRhenium\\t186.206706624852\\n76\\tOs\\tOsmium\\t190.2248630659075\\n77\\tIr\\tIridium\\t192.2160564328\\n78\\tPt\\tPlatinum\\t195.077807984934\\n79\\tAu\\tGold\\t196.96656876\\n80\\tHg\\tMercury\\t200.599166666798\\n81\\tTl\\tThallium\\t204.38341252384\\n82\\tPb\\tLead\\t207.21690767600003\\n83\\tBi\\tBismuth\\t208.98039871599997\\n84\\tPo\\tPolonium\\t209.0\\n85\\tAt\\tAstatine\\t210.0\\n86\\tRn\\tRadon\\t222.0\\n87\\tFr\\tFrancium\\t223.0\\n88\\tRa\\tRadium\\t226.0\\n89\\tAc\\tActinium\\t227.0\\n90\\tTh\\tThorium\\t232.038055321\\n91\\tPa\\tProtactinium\\t231.035884024\\n92\\tU\\tUranium\\t238.02891028165737\\n93\\tNp\\tNeptunium\\t237.0\\n94\\tPu\\tPlutonium\\t244.0\\n95\\tAm\\tAmericium\\t0.0\\n96\\tCm\\tCurium\\t0.0\\n97\\tBk\\tBerkelium\\t0.0\\n98\\tCf\\tCalifornium\\t0.0\\n99\\tEs\\tEinsteinium\\t0.0\\n100\\tFm\\tFermium\\t0.0\\n101\\tMd\\tMendelevium\\t0.0\\n102\\tNo\\tNobelium\\t0.0\\n103\\tLr\\tLawrencium\\t0.0\\n104\\tRf\\tRutherfordium\\t0.0\\n105\\tDb\\tDubnium\\t0.0\\n106\\tSg\\tSeaborgium\\t0.0\\n107\\tBh\\tBohrium\\t0.0\\n108\\tHs\\tHassium\\t0.0\\n109\\tMt\\tMeitnerium\\t0.0\\n110\\tDs\\tDarmstadtium\\t0.0\\n111\\tRg\\tRoentgenium\\t0.0\\n112\\tCn\\tCopernicium\\t0.0\\n113\\tUut\\tUnuntrium\\t0.0\\n114\\tUuq\\t\\t0.0\\n115\\tUup\\tUnunpentium\\t0.0\\n116\\tUuh\\t\\t0.0\\n117\\tUus\\tUnunseptium\\t0.0','[\\r\\n]+',0);for(g=0;g<k.length;g++){m=Qj(k[g],'\\t',0);c=new Ps(Oi(m[3]),Tj(m[1]),m[2],Pi(m[0]));hn(Ft,c.g,c);hn(e,m[0],c)}k=Qj('1\\t1.007825032071\\t99.9885\\t1\\n2\\t2.01410177784\\t0.0115\\t1\\n3\\t3.016049277725\\t0\\t1\\n4\\t3.016029319126\\t0.00013\\t2\\n5\\t4.002603254156\\t99.99987\\t2\\n6\\t6.01512279516\\t7.59\\t3\\n7\\t7.016004558\\t92.41\\t3\\n8\\t9.01218224\\t100\\t4\\n9\\t10.01293704\\t19.9\\t5\\n10\\t11.00930544\\t80.1\\t5\\n11\\t12.0\\t98.93\\t6\\n12\\t13.00335483781\\t1.07\\t6\\n13\\t14.0032419894\\t0\\t6\\n14\\t14.00307400486\\t99.636\\t7\\n15\\t15.00010889827\\t0.364\\t7\\n17\\t16.9991317012\\t0.038\\t8\\n16\\t15.9949146195616\\t99.757\\t8\\n18\\t17.99916107\\t0.205\\t8\\n19\\t18.998403227\\t100\\t9\\n21\\t20.993846684\\t0.27\\t10\\n20\\t19.992440175419\\t90.48\\t10\\n22\\t21.99138511419\\t9.25\\t10\\n23\\t22.989769280929\\t100\\t11\\n25\\t24.985836923\\t10\\t12\\n24\\t23.98504170014\\t78.99\\t12\\n26\\t25.9825929293\\t11.01\\t12\\n27\\t26.9815386312\\t100\\t13\\n29\\t28.97649470022\\t4.685\\t14\\n28\\t27.976926532519\\t92.223\\t14\\n30\\t29.973770173\\t3.092\\t14\\n31\\t30.973761632\\t100\\t15\\n34\\t33.9678669012\\t4.25\\t16\\n35\\t35.967080762\\t0.01\\t16\\n32\\t31.9720710015\\t94.99\\t16\\n33\\t32.9714587615\\t0.75\\t16\\n36\\t34.968852684\\t75.76\\t17\\n37\\t36.965902595\\t24.24\\t17\\n38\\t35.96754510629\\t0.3365\\t18\\n39\\t37.96273244\\t0.0632\\t18\\n40\\t39.962383122529\\t99.6003\\t18\\n42\\t39.9639984821\\t0.0117\\t19\\n43\\t40.9618257621\\t6.7302\\t19\\n41\\t38.963706682\\t93.2581\\t19\\n49\\t47.9525344\\t0.187\\t20\\n48\\t45.953692624\\t0.004\\t20\\n46\\t42.95876663\\t0.135\\t20\\n47\\t43.95548184\\t2.086\\t20\\n44\\t39.9625909822\\t96.941\\t20\\n45\\t41.9586180127\\t0.647\\t20\\n50\\t44.95591199\\t100\\t21\\n51\\t45.95263169\\t8.25\\t22\\n55\\t49.94479129\\t5.18\\t22\\n54\\t48.94787009\\t5.41\\t22\\n53\\t47.94794639\\t73.72\\t22\\n52\\t46.95176319\\t7.44\\t22\\n57\\t50.943959511\\t99.75\\t23\\n56\\t49.947158511\\t0.25\\t23\\n59\\t51.94050758\\t83.789\\t24\\n58\\t49.946044211\\t4.345\\t24\\n61\\t53.93888048\\t2.365\\t24\\n60\\t52.94064948\\t9.501\\t24\\n62\\t54.93804517\\t100\\t25\\n64\\t55.93493757\\t91.754\\t26\\n65\\t56.93539407\\t2.119\\t26\\n66\\t57.93327568\\t0.282\\t26\\n63\\t53.93961057\\t5.845\\t26\\n67\\t58.93319507\\t100\\t27\\n68\\t57.93534297\\t68.0769\\t28\\n69\\t59.93078647\\t26.2231\\t28\\n70\\t60.93105607\\t1.1399\\t28\\n71\\t61.92834516\\t3.6345\\t28\\n72\\t63.92796607\\t0.9256\\t28\\n73\\t62.92959756\\t69.15\\t29\\n74\\t64.92778957\\t30.85\\t29\\n76\\t65.92603341\\t27.975\\t30\\n77\\t66.92712731\\t4.102\\t30\\n78\\t67.92484421\\t19.024\\t30\\n79\\t69.925319321\\t0.631\\t30\\n75\\t63.92914227\\t48.268\\t30\\n81\\t70.924701311\\t39.892\\t31\\n80\\t68.925573613\\t60.108\\t31\\n85\\t73.921177818\\t36.72\\t32\\n84\\t72.923458918\\t7.76\\t32\\n86\\t75.921402618\\t7.83\\t32\\n83\\t71.922075818\\t27.31\\t32\\n82\\t69.924247411\\t20.38\\t32\\n87\\t74.92159652\\t100\\t33\\n93\\t81.916699422\\t8.73\\t34\\n92\\t79.916521321\\t49.61\\t34\\n89\\t75.919213618\\t9.37\\t34\\n88\\t73.922476418\\t0.89\\t34\\n91\\t77.917309118\\t23.77\\t34\\n90\\t76.919914018\\t7.63\\t34\\n95\\t80.916290621\\t49.31\\t35\\n94\\t78.918337122\\t50.69\\t35\\n100\\t83.9115073\\t56.987\\t36\\n101\\t85.9106107311\\t17.279\\t36\\n98\\t81.913483619\\t11.593\\t36\\n99\\t82.9141363\\t11.5\\t36\\n96\\t77.920364812\\t0.355\\t36\\n97\\t79.916379016\\t2.286\\t36\\n102\\t84.91178973812\\t72.17\\t37\\n103\\t86.90918052713\\t27.83\\t37\\n106\\t86.908877112\\t7\\t38\\n107\\t87.905612112\\t82.58\\t38\\n104\\t83.9134253\\t0.56\\t38\\n105\\t85.909260212\\t9.86\\t38\\n108\\t88.905848327\\t100\\t39\\n113\\t95.90827343\\t2.8\\t40\\n112\\t93.906315226\\t17.38\\t40\\n110\\t90.905645825\\t11.22\\t40\\n111\\t91.905040825\\t17.15\\t40\\n109\\t89.904704425\\t51.45\\t40\\n114\\t92.906378126\\t100\\t41\\n119\\t96.906021521\\t9.56\\t42\\n118\\t95.904679521\\t16.68\\t42\\n117\\t94.905842121\\t15.9\\t42\\n116\\t93.905088321\\t9.23\\t42\\n115\\t91.9068114\\t14.77\\t42\\n121\\t99.9074776\\t9.67\\t42\\n120\\t97.905408221\\t24.19\\t42\\n124\\t98.906254721\\t0\\t43\\n123\\t97.9072164\\t0\\t43\\n122\\t96.9063655\\t0\\t43\\n129\\t100.905582122\\t17.06\\t44\\n127\\t98.905939322\\t12.76\\t44\\n128\\t99.904219522\\t12.6\\t44\\n126\\t97.9052877\\t1.87\\t44\\n131\\t103.9054333\\t18.62\\t44\\n125\\t95.9075988\\t5.54\\t44\\n130\\t101.904349322\\t31.55\\t44\\n132\\t102.9055043\\t100\\t45\\n137\\t107.9038924\\t26.46\\t46\\n136\\t105.9034864\\t27.33\\t46\\n138\\t109.90515312\\t11.72\\t46\\n133\\t101.9056093\\t1.02\\t46\\n135\\t104.9050854\\t22.33\\t46\\n134\\t103.9040364\\t11.14\\t46\\n139\\t106.9050975\\t51.839\\t47\\n140\\t108.9047523\\t48.161\\t47\\n141\\t105.9064596\\t1.25\\t48\\n143\\t109.903002129\\t12.49\\t48\\n142\\t107.9041846\\t0.89\\t48\\n144\\t110.904178129\\t12.8\\t48\\n145\\t111.902757829\\t24.13\\t48\\n146\\t112.904401729\\t12.22\\t48\\n147\\t113.903358529\\t28.73\\t48\\n148\\t115.9047563\\t7.49\\t48\\n149\\t112.9040583\\t4.29\\t49\\n150\\t114.9038785\\t95.71\\t49\\n152\\t113.9027793\\t0.66\\t50\\n153\\t114.9033423\\t0.34\\t50\\n154\\t115.9017413\\t14.54\\t50\\n155\\t116.9029523\\t7.68\\t50\\n156\\t117.9016033\\t24.22\\t50\\n157\\t118.9033083\\t8.59\\t50\\n158\\t119.902194727\\t32.58\\t50\\n159\\t121.903439029\\t4.63\\t50\\n160\\t123.905273915\\t5.79\\t50\\n151\\t111.9048185\\t0.97\\t50\\n162\\t122.904214022\\t42.79\\t51\\n161\\t120.903815724\\t57.21\\t51\\n170\\t129.906224421\\t34.08\\t52\\n169\\t127.904463119\\t31.74\\t52\\n168\\t125.903311716\\t18.84\\t52\\n163\\t119.9040201\\t0.09\\t52\\n167\\t124.904430716\\t7.07\\t52\\n166\\t123.902817916\\t4.74\\t52\\n165\\t122.904270016\\t0.89\\t52\\n164\\t121.903043916\\t2.55\\t52\\n171\\t126.9044734\\t100\\t53\\n175\\t128.90477948\\t26.4006\\t54\\n174\\t127.903531315\\t1.9102\\t54\\n173\\t125.9042747\\t0.089\\t54\\n172\\t123.90589302\\t0.0952\\t54\\n178\\t131.90415351\\t26.9086\\t54\\n179\\t133.90539459\\t10.4357\\t54\\n176\\t129.90350808\\t4.071\\t54\\n177\\t130.90508241\\t21.2324\\t54\\n180\\t135.9072198\\t8.8573\\t54\\n181\\t132.90545193324\\t100\\t55\\n186\\t135.90457594\\t7.854\\t56\\n187\\t136.90582745\\t11.232\\t56\\n184\\t133.90450844\\t2.417\\t56\\n185\\t134.90568864\\t6.592\\t56\\n188\\t137.90524725\\t71.698\\t56\\n182\\t129.90632083\\t0.106\\t56\\n183\\t131.905061311\\t0.101\\t56\\n190\\t138.906353326\\t99.91\\t57\\n189\\t137.9071124\\t0.09\\t57\\n191\\t135.90717214\\t0.185\\t58\\n193\\t139.905438726\\t88.45\\t58\\n192\\t137.90599111\\t0.251\\t58\\n194\\t141.9092443\\t11.114\\t58\\n195\\t140.907652826\\t100\\t59\\n201\\t147.9168933\\t5.7\\t60\\n200\\t145.913116925\\t17.2\\t60\\n202\\t149.9208913\\t5.6\\t60\\n197\\t142.909814325\\t12.2\\t60\\n196\\t141.907723325\\t27.2\\t60\\n199\\t144.912573625\\t8.3\\t60\\n198\\t143.910087325\\t23.8\\t60\\n204\\t146.915138526\\t0\\t61\\n203\\t144.9127493\\t0\\t61\\n205\\t143.9119993\\t3.07\\t62\\n207\\t147.914822726\\t11.24\\t62\\n206\\t146.914897926\\t14.99\\t62\\n208\\t148.917184726\\t13.82\\t62\\n209\\t149.917275526\\t7.38\\t62\\n210\\t151.919732427\\t26.75\\t62\\n211\\t153.922209327\\t22.75\\t62\\n212\\t150.919850226\\t47.81\\t63\\n213\\t152.921230326\\t52.19\\t63\\n220\\t159.927054127\\t21.86\\t64\\n216\\t154.922622027\\t14.8\\t64\\n217\\t155.922122727\\t20.47\\t64\\n218\\t156.923960127\\t15.65\\t64\\n219\\t157.924103927\\t24.84\\t64\\n214\\t151.919791027\\t0.2\\t64\\n215\\t153.920865627\\t2.18\\t64\\n221\\t158.925346827\\t100\\t65\\n222\\t155.9242837\\t0.056\\t66\\n223\\t157.9244094\\t0.095\\t66\\n228\\t163.929174827\\t28.26\\t66\\n227\\t162.928731227\\t24.896\\t66\\n226\\t161.926798427\\t25.475\\t66\\n225\\t160.926933427\\t18.889\\t66\\n224\\t159.925197527\\t2.329\\t66\\n229\\t164.930322127\\t100\\t67\\n235\\t169.93546433\\t14.91\\t68\\n234\\t167.932370227\\t26.978\\t68\\n233\\t166.932048227\\t22.869\\t68\\n232\\t165.930293127\\t33.503\\t68\\n231\\t163.9292003\\t1.601\\t68\\n230\\t161.9287784\\t0.139\\t68\\n236\\t168.934213327\\t100\\t69\\n239\\t170.936325826\\t14.28\\t70\\n238\\t169.934761826\\t3.04\\t70\\n237\\t167.9338975\\t0.13\\t70\\n242\\t173.938862126\\t31.83\\t70\\n243\\t175.942571728\\t12.76\\t70\\n240\\t171.936381526\\t21.83\\t70\\n241\\t172.938210826\\t16.13\\t70\\n244\\t174.940771823\\t97.41\\t71\\n245\\t175.942686323\\t2.59\\t71\\n250\\t178.945816123\\t13.62\\t72\\n251\\t179.946550023\\t35.08\\t72\\n248\\t176.943220723\\t18.6\\t72\\n249\\t177.943698823\\t27.28\\t72\\n246\\t173.9400463\\t0.16\\t72\\n247\\t175.941408624\\t5.26\\t72\\n252\\t179.947464824\\t0.012\\t73\\n253\\t180.947995819\\t99.988\\t73\\n258\\t185.954364119\\t28.43\\t74\\n254\\t179.9467044\\t0.12\\t74\\n255\\t181.94820429\\t26.5\\t74\\n256\\t182.95022309\\t14.31\\t74\\n257\\t183.95093129\\t30.64\\t74\\n259\\t184.952955013\\t37.4\\t75\\n260\\t186.955753115\\t62.6\\t75\\n262\\t185.953838215\\t1.59\\t76\\n263\\t186.955750515\\t1.96\\t76\\n261\\t183.952489114\\t0.02\\t76\\n266\\t189.958447016\\t26.26\\t76\\n267\\t191.961480727\\t40.78\\t76\\n264\\t187.955838215\\t13.24\\t76\\n265\\t188.958147516\\t16.15\\t76\\n268\\t190.960594018\\t37.3\\t77\\n269\\t192.962926418\\t62.7\\t77\\n275\\t197.9678933\\t7.163\\t78\\n274\\t195.96495159\\t25.242\\t78\\n273\\t194.96479119\\t33.832\\t78\\n272\\t193.96268039\\t32.967\\t78\\n270\\t189.9599326\\t0.014\\t78\\n271\\t191.961038027\\t0.782\\t78\\n276\\t196.96656876\\t100\\t79\\n279\\t198.96827994\\t16.87\\t80\\n278\\t197.96676904\\t9.97\\t80\\n277\\t195.9658333\\t0.15\\t80\\n283\\t203.97349394\\t6.87\\t80\\n282\\t201.97064306\\t29.86\\t80\\n281\\t200.97030236\\t13.18\\t80\\n280\\t199.96832604\\t23.1\\t80\\n285\\t204.974427514\\t70.48\\t81\\n284\\t202.972344214\\t29.52\\t81\\n288\\t206.975896913\\t22.1\\t82\\n289\\t207.976652113\\t52.4\\t82\\n287\\t205.974465313\\t24.1\\t82\\n286\\t203.973043613\\t1.4\\t82\\n290\\t208.980398716\\t100\\t83\\n291\\t208.98243042\\t0\\t84\\n292\\t209.982873713\\t0\\t84\\n293\\t209.9871488\\t0\\t85\\n294\\t210.98749633\\t0\\t85\\n295\\t210.9906017\\t0\\t86\\n296\\t220.011394024\\t0\\t86\\n297\\t222.017577725\\t0\\t86\\n298\\t223.019735926\\t0\\t87\\n299\\t223.018502227\\t0\\t88\\n300\\t224.020211824\\t0\\t88\\n301\\t226.025409825\\t0\\t88\\n302\\t228.031070326\\t0\\t88\\n303\\t227.027752126\\t0\\t89\\n305\\t232.038055321\\t100\\t90\\n304\\t230.033133819\\t0\\t90\\n306\\t231.035884024\\t100\\t91\\n307\\t233.039635229\\t0\\t92\\n309\\t235.04392992\\t0.7204\\t92\\n308\\t234.04095212\\t0.0054\\t92\\n311\\t238.05078822\\t99.2742\\t92\\n310\\t236.04556802\\t0\\t92\\n313\\t237.04817342\\t0\\t93\\n312\\t236.0465705\\t0\\t93\\n315\\t239.05216342\\t0\\t94\\n314\\t238.04955992\\t0\\t94\\n317\\t241.05685152\\t0\\t94\\n316\\t240.05381352\\t0\\t94\\n319\\t244.0642045\\t0\\t94\\n318\\t242.05874262\\t0\\t94\\n320\\t241.05682912\\t0\\t95\\n321\\t243.061381125\\t0\\t95\\n326\\t247.0703545\\t0\\t96\\n327\\t248.0723495\\t0\\t96\\n324\\t245.065491222\\t0\\t96\\n325\\t246.067223722\\t0\\t96\\n322\\t243.061389122\\t0\\t96\\n323\\t244.06275262\\t0\\t96\\n328\\t247.0703076\\t0\\t97\\n329\\t249.074986728\\t0\\t97\\n332\\t251.0795875\\t0\\t98\\n333\\t252.0816265\\t0\\t98\\n330\\t249.074853524\\t0\\t98\\n331\\t250.076406122\\t0\\t98\\n334\\t252.0829805\\t0\\t99\\n335\\t257.0951057\\t0\\t100\\n337\\t260.1036534\\t0\\t101\\n336\\t258.0984315\\t0\\t101\\n338\\t259.1010311\\t0\\t102\\n339\\t262.1096322\\t0\\t103\\n340\\t265.1167046\\t0\\t104\\n341\\t268.1254557\\t0\\t105\\n342\\t271.133477\\t0\\t106\\n343\\t272.1380365\\t0\\t107\\n344\\t270.1346531\\t0\\t108\\n345\\t276.1511673\\t0\\t109\\n346\\t281.1620678\\t0\\t110\\n347\\t280.164478\\t0\\t111\\n348\\t285.1741178\\t0\\t112\\n349\\t284.1780886\\t0\\t113\\n350\\t289.1872879\\t0\\t114\\n351\\t288.1924992\\t0\\t115\\n352\\t292.20755101\\t0\\t117','[\\r\\n]+',0);for(h=0;h<k.length;h++){m=Qj(k[h],'\\t',0);c=en(e,m[3]);i=Oi(m[1]);j=Oi(m[2]);b=new Ct(ge(i+0.5),i,j,c.g);gn(c.b,new fj(b.c),b)}for(d=Vn(new Wn(Ft));un(d.a);){c=$n(d);Ks(c);if(c.b.b==0){l=new Ct(ge(c.c+0.5),c.c,100,c.g);gn(c.b,new fj(l.c),l)}}Gt=new zp;k=Qj(\"1\\tAbu\\t2-Aminobutyric acid diradical\\tC4H7NO\\r\\n2\\tAcet\\tAcetyl\\tC2H3O\\r\\n3\\tAcm\\tAcetamidomethyl\\tC3H6NO\\r\\n4\\tAdao\\tAdamantyloxy\\tC10H15O\\r\\n5\\tAib\\talpha-Aminoisobutyric acid diradical\\tC4H7NO\\r\\n6\\tAla\\tAlainine diradical\\tC3H5NO\\r\\n7\\tArg\\tArginine diradical\\tC6H12N4O\\r\\n8\\tArgp\\tArginine triradical\\tC6H11N4O\\r\\n9\\tAsn\\tAsparagine diradical\\tC4H6N2O2\\r\\n10\\tAsnp\\tAsparagine triradical\\tC4H5N2O2\\r\\n11\\tAsp\\tAspartic acid diradical\\tC4H5NO3\\r\\n12\\tAspp\\tAspartic acid triradical\\tC4H4NO3\\r\\n13\\tAsu\\talpha-Aminosuberic acid diradical\\tC8H13NO3\\r\\n14\\tAsup\\talpha-Aminosuberic acid triradical\\tC8H12NO3\\r\\n15\\tBoc\\tt-Butoxycarbonyl\\tC5H9O2\\r\\n16\\tBom\\tBenzyloxymethyl\\tC8H9O\\r\\n17\\tBrz\\t2-Bromobenzyloxycarbonyl\\tC8H6BrO2\\r\\n18\\tBu\\tButyl\\tC4H9\\r\\n19\\tBum\\tt-Butoxymethyl\\tC5H11O\\r\\n20\\tBz\\tBenzoyl\\tC7H5O\\r\\n21\\tBzl\\tBenzyl\\tC7H7\\r\\n22\\tBn\\tBenzyl\\tC7H7\\r\\n23\\tBzlo\\tBenzyloxy\\tC7H7O\\r\\n24\\tCha\\tbeta-Cyclohexylalanine diradical\\tC9H15NO\\r\\n25\\tChxo\\tCyclohexyloxy\\tC6H11O\\r\\n26\\tCit\\tCitrulline diradical\\tC6H11N3O2\\r\\n27\\tCitp\\tCitrulline triradical\\tC6H10N3O2\\r\\n28\\tClz\\t2-Chlorobenzyloxycarbonyl\\tC8H6ClO2\\r\\n29\\tCp\\tCyclopentadienyl\\tC5H5\\r\\n30\\tCys\\tCysteine diradical\\tC3H5NOS\\r\\n31\\tCysp\\tCysteine triradical\\tC3H4NOS\\r\\n32\\tD\\tDeuterium\\t[2H]\\r\\n33\\tDde\\tDde\\tC10H13O2\\r\\n34\\tDnp\\t2,4-Dinitrophenyl\\tC6H3N2O4\\r\\n35\\tEt\\tEthyl\\tC2H5\\r\\n36\\tFmoc\\tFluorenylmethoxycarbonyl\\tC15H11O2\\r\\n37\\tFor\\tFormyl\\tCHO\\r\\n38\\tGln\\tGlutamine diradical\\tC5H8N2O2\\r\\n39\\tGlnp\\tGlutamine triradical\\tC5H7N2O2\\r\\n40\\tGlp\\tPyroglutamine\\tC5H5NO2\\r\\n41\\tGlu\\tGlutamic acid diradical\\tC5H7NO3\\r\\n42\\tGlup\\tGlutamic acid triradical\\tC5H6NO3\\r\\n43\\tGly\\tGlycine diradical\\tC2H3NO\\r\\n44\\tHci\\tHomocitrulline diradical\\tC7H13N3O2\\r\\n45\\tHcip\\tHomocitrulline triradical\\tC7H12N3O2\\r\\n46\\tHis\\tHistidine diradical\\tC6H7N3O\\r\\n47\\tHisp\\tHistidine triradical\\tC6H6N3O\\r\\n48\\tHser\\tHomoserine diradical\\tC4H7NO2\\r\\n49\\tHserp\\tHomoserine triradical\\tC4H6NO2\\r\\n50\\tHyp\\tHydroxyproline diradical\\tC5H7NO2\\r\\n51\\tHypp\\tHydroxyproline triradical\\tC5H6NO2\\r\\n52\\tIle\\tIsoleucine diradical\\tC6H11NO\\r\\n53\\tIvdde\\t1-[4,4-dimethyl-2,6-dioxocyclohexylidene)3-methylb\\tC14H21O2\\r\\n54\\tLeu\\tLeucine diradical\\tC6H11NO\\r\\n55\\tLys\\tLysine diradical\\tC6H12N2O\\r\\n56\\tLysp\\tLysine triradical\\tC6H11N2O\\r\\n57\\tMbh\\t4,4'-Dimethoxybenzhydryl\\tC15H15O2\\r\\n58\\tMe\\tMethyl\\tCH3\\r\\n59\\tMebzl\\t4-Methylbenzyl\\tC8H9\\r\\n60\\tMeobzl\\t4-Methoxybenzyl1-[4,4-dimethyl-2,6-dioxocyclohexyl\\tC8H9O\\r\\n61\\tMet\\tMethionine diradical\\tC5H9NOS\\r\\n62\\tMmt\\t4-Methoxytrityl\\tC20H17O\\r\\n63\\tMtc\\t2,2,5,7,8-pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n64\\tMtr\\t4-Methoxy-2,3,6-trimethylbenzenesulphonyl\\tC10H13O3S\\r\\n65\\tMts\\tMesitylene-2-sulphonyl\\tC9H11O2S\\r\\n66\\tMtt\\t4-Methyltrityl\\tC20H17\\r\\n67\\tNle\\tNorleucine diradical\\tC6H11NO\\r\\n68\\tNpys\\t3-Nitro-2-pyridinesulphenyl\\tC5H3N2O2S\\r\\n69\\tNva\\tNorvaline diradical\\tC5H9NO\\r\\n70\\tOdmab\\tOdmab\\tC20H26NO3\\r\\n71\\tOrn\\tOrnithine diradical\\tC5H10N2O\\r\\n72\\tOrnp\\tOrnithine triradical\\tC5H9N2O\\r\\n73\\tPbf\\t2,2,4,6,7-pentamethyldihydrobenzofurane-5-sulfonyl\\tC13H17O3S\\r\\n74\\tPen\\tPenicillamine diradical\\tC5H9NOS\\r\\n75\\tPenp\\tPenicillamine triradical\\tC5H8NOS\\r\\n76\\tPh\\tPhenyl\\tC6H5\\r\\n77\\tPhe\\tPhenylalanine diradical\\tC9H9NO\\r\\n78\\tPhepcl\\t4-Chlorophenylalanine diradical\\tC9H8ClNO\\r\\n79\\tPhg\\tPhenylglycine\\tC8H7NO\\r\\n80\\tPmc\\t2,2,5,7,8-Pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n81\\tPro\\tProline diradical\\tC5H7NO\\r\\n82\\tPyr\\tPyroglutamine\\tC5H5NO2\\r\\n83\\tSar\\tSarcosine diradical\\tC3H5NO\\r\\n84\\tSer\\tSerine diradical\\tC3H5NO2\\r\\n85\\tSerp\\tSerine triradical\\tC3H4NO2\\r\\n86\\tSta\\tStatine diradical\\tC8H15NO2\\r\\n87\\tStap\\tStatine triradical\\tC8H14NO2\\r\\n88\\tTacm\\tTrimethylacetamidomethyl\\tC6H12NO\\r\\n89\\tTbdms\\tt-Butyldimethylsilyl\\tC6H15Si\\r\\n90\\tTbu\\tt-Butyl\\tC4H9\\r\\n91\\tTbuo\\tt-Butoxy\\tC4H9O\\r\\n92\\tTbuthio\\tt-Butylthio\\tC4H9S\\r\\n93\\tTfa\\tTrifluoroacetyl\\tC2F3O\\r\\n94\\tThi\\tbeta-(2-thenyl)alanine\\tC7H7NOS\\r\\n95\\tThr\\tThreonine diradical\\tC4H7NO2\\r\\n96\\tThrp\\tThreonine triradical\\tC4H6NO2\\r\\n97\\tTips\\tTriisopropylsilyl\\tC9H21Si\\r\\n98\\tTms\\tTrimethylsilyl\\tC3H9Si\\r\\n99\\tTos\\tTosyl\\tC7H7O2S\\r\\n100\\tTrp\\tTryptophan diradical\\tC11H10N2O\\r\\n101\\tTrpp\\tTryptophan triradical\\tC11H9N2O\\r\\n102\\tTrt\\tTrityl\\tC19H15\\r\\n103\\tTyr\\tTyrosine diradical\\tC9H9NO2\\r\\n104\\tTyrp\\tTyrosine triradical\\tC9H8NO2\\r\\n105\\tVal\\tValine\\tC5H9NO\\r\\n106\\tValoh\\tbeta-Hydroxyvaline diradical\\tC5H9NO2\\r\\n107\\tValohp\\tbeta-Hydroxyvaline triradical\\tC5H8NO2\\r\\n108\\tXan\\tXanthyl\\tC13H9O\\r\\n109\\tZ\\tBenzyloxycarbonyl\\tC8H7O2\\r\\n110\\tT\\tTritium\\t[3H]\",'[\\r\\n]+',0);for(f=0;f<k.length;f++){m=Qj(k[f],'\\t',0);try{hn(Gt,m[1],new Bt(m[1],m[2],m[3],Ft,Gt))}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}}}\n\tvar Ou=2147483647,Pu={3:1,9:1},Qu={3:1,6:1,9:1},Ru={3:1},Su=4194303,Tu=1048575,Uu=524288,Vu=4194304,Wu=17592186044416,Xu=-9223372036854775808,Yu=1000000000,Zu=65536,$u=-2147483648,_u=65535,av={28:1,3:1},bv=100000,cv=1000000,dv=10000000000,ev=0.3010299956639812,fv=4294967296,gv=1073741824,hv={35:1},iv={37:1,27:1},jv={3:1,51:1},kv={3:1,50:1},lv={3:1,18:1,29:1,26:1},mv=4.9E-324,nv=5.4857990946E-4;var _,Kh,Ig={},Eg=-1;Kg(1,null,{},db);_.eQ=function eb(a){return this===a};_.gC=function gb(){return this.cZ};_.hC=function ib(){return Nb(this)};_.tS=function kb(){return cb(this)};_.toString=function(){return this.tS()};Yd={3:1,116:1,18:1,2:1};Ng();var Yd;Kg(68,1,{},vi);_.u=function wi(a){var b;b=new vi;b.e=4;a>1?(b.c=Di(this,a-1)):(b.c=this);return b};_.v=function Ci(){ti(this);return this.b};_.w=function Ei(){return ui(this)};_.A=function Gi(){ti(this);return this.i};_.B=function Ii(){return (this.e&4)!=0};_.C=function Ji(){return (this.e&1)!=0};_.tS=function Mi(){return ((this.e&2)!=0?'interface ':(this.e&1)!=0?'':'class ')+(ti(this),this.k)};_.e=0;_.g=0;var si=1;var $e=yi(1),me=yi(0),Oe=yi(68);Kg(9,1,Pu);_.n=function pb(){return this.f};_.tS=function qb(){return ob(this)};var ff=yi(9);Kg(6,9,Qu);var Se=yi(6);Kg(10,6,Qu,tb);var _e=yi(10);Kg(83,10,Qu);var oe=yi(83);Kg(38,83,{38:1,3:1,6:1,9:1},xb);_.n=function yb(){wb(this);return this.c};var ub;var le=yi(38);var Ab;Kg(117,1,{});var ne=yi(117);var Eb=0,Fb=0,Gb=0,Hb=-1;Kg(138,1,{});var lf=yi(138);Kg(139,138,{});var mf=yi(139);Kg(112,139,{},Xb);_.b={l:0,m:0,h:0};_.c=0;var Sb;var pe=yi(112);Kg(107,117,{},hc);var dc;var qe=yi(107);var kc;Kg(133,1,{});var ue=yi(133);Kg(84,133,{},qc);_.o=function rc(a,b){var c={},j;a.fnStack=[];var d=arguments.callee.caller;while(d){var e=(lc(),d.name||(d.name=oc(d.toString())));a.fnStack.push(e);var f=':'+e;var g=c[f];if(g){var h,i;for(h=0,i=g.length;h<i;h++){if(g[h]===d){return}}}(g||(c[f]=[])).push(d);d=d.caller}};_.p=function sc(a){var b,c,d,e;d=(lc(),a&&a.fnStack&&a.fnStack instanceof Array?a.fnStack:[]);c=d.length;e=Sd(af,Ru,31,c,0,1);for(b=0;b<c;b++){e[b]=new Ej(d[b],null,-1)}return e};var re=yi(84);Kg(134,133,{});_.o=function vc(c,d){function e(b){if(!('stack' in b)){try{throw b}catch(a){}}return b}\n\tvar f;typeof d=='string'?(f=e(new Error(d))):d instanceof Object&&'stack' in d?(f=d):(f=e(new Error));c.__gwt$backingJsError=f};_.q=function wc(a,b,c,d){return new Ej(b,a+'@'+d,c<0?-1:c)};_.p=function xc(a){var b,c,d,e,f,g,h;e=(lc(),h=a.__gwt$backingJsError,h&&h.stack?h.stack.split('\\n'):[]);f=Sd(af,Ru,31,0,0,1);b=0;d=e.length;if(d==0){return f}g=uc(this,e[0]);Jj(g.d,'anonymous')||(f[b++]=g);for(c=1;c<d;c++){f[b++]=uc(this,e[c])}return f};var te=yi(134);Kg(85,134,{},yc);_.q=function zc(a,b,c,d){return new Ej(b,a,-1)};var se=yi(85);Kg(132,1,{});_.s=function Kc(){return null};var Ce=yi(132);Kg(66,132,{66:1},Oc,Pc);_.eQ=function Qc(a){if(!_d(a,66)){return false}return this.a==a.a};_.r=function Rc(){return Uc};_.hC=function Sc(){return Nb(this.a)};_.tS=function Tc(){var a,b,c;c=new uk('[');for(b=0,a=this.a.length;b<a;b++){b>0&&(c.a+=',',c);pk(c,Lc(this,b))}c.a+=']';return c.a};var ve=yi(66);Kg(76,132,{},Yc);_.r=function Zc(){return _c};_.tS=function $c(){return ei(),''+this.a};_.a=false;var Vc,Wc;var we=yi(76);Kg(110,10,Qu,ad);var xe=yi(110);Kg(106,132,{},dd);_.r=function ed(){return gd};_.tS=function fd(){return 'null'};var bd;var ye=yi(106);Kg(8,132,{8:1},hd);_.eQ=function jd(a){if(!_d(a,8)){return false}return this.a==a.a};_.r=function kd(){return nd};_.hC=function ld(){return ge((new Ri(this.a)).a)};_.tS=function md(){return this.a+''};_.a=0;var ze=yi(8);Kg(54,132,{54:1},td,ud);_.eQ=function vd(a){if(!_d(a,54)){return false}return this.a==a.a};_.r=function wd(){return zd};_.hC=function xd(){return Nb(this.a)};_.tS=function yd(){var a,b,c,d,e,f;f=new uk('{');a=true;e=od(this,Sd(ef,Ru,2,0,4,1));for(c=0,d=e.length;c<d;++c){b=e[c];a?(a=false):(f.a+=', ',f);qk(f,Cb(b));f.a+=':';pk(f,pd(this,b))}f.a+='}';return f.a};var Ae=yi(54);var Ad;Kg(11,132,{11:1},Id);_.eQ=function Jd(a){if(!_d(a,11)){return false}return Jj(this.a,a.a)};_.r=function Kd(){return Od};_.hC=function Ld(){return jk(this.a)};_.s=function Md(){return this};_.tS=function Nd(){return Cb(this.a)};var Be=yi(11);var Rg;var hh;var Fh,Gh,Hh,Ih;Kg(60,9,Pu);var Re=yi(60);Kg(17,60,Pu);var Me=yi(17);Kg(78,17,Pu,Uh);var He=yi(78);Kg(45,1,{});_.tS=function Yh(){return this.a};var Ie=yi(45);Kg(41,10,Qu,Zh);var Je=yi(41);Kg(49,10,Qu,$h,_h);var Ve=yi(49);Kg(109,49,Qu,ai);var Ke=yi(109);Kg(43,10,Qu,bi);var Le=yi(43);Kg(52,1,{3:1,52:1,18:1},fi);_.t=function hi(a){return gi(this.a,a.a)};_.eQ=function ii(a){return _d(a,52)&&a.a==this.a};_.hC=function ji(){return this.a?1231:1237};_.tS=function ki(){return ''+this.a};_.a=false;var ci,di;var Ne=yi(52);Kg(44,1,{3:1,44:1});var Ni;var Ze=yi(44);Kg(7,44,{3:1,18:1,7:1,44:1},Ri);_.t=function Ti(a){return Si(this.a,a.a)};_.eQ=function Ui(a){return Qi(this,a)};_.hC=function Vi(){return ge(this.a)};_.tS=function Yi(){return ''+this.a};_.a=0;var Pe=yi(7);Kg(29,1,{3:1,18:1,29:1});_.t=function $i(a){return this.b-a.b};_.eQ=function _i(a){return this===a};_.hC=function aj(){return Nb(this)};_.tS=function bj(){return this.a!=null?this.a:''+this.b};_.b=0;var Qe=yi(29);Kg(56,10,Qu,cj);var Te=yi(56);Kg(111,10,Qu,dj);var Ue=yi(111);Kg(19,44,{3:1,18:1,19:1,44:1},fj);_.t=function hj(a){return ej(this,a)};_.eQ=function ij(a){return _d(a,19)&&a.a==this.a};_.hC=function jj(){return this.a};_.tS=function mj(){return ''+this.a};_.a=0;var We=yi(19);var pj;Kg(59,10,Qu,Bj,Cj);var Xe=yi(59);Kg(20,56,{3:1,6:1,20:1,9:1},Dj);var Ye=yi(20);Kg(31,1,{3:1,31:1},Ej);_.eQ=function Fj(a){var b;if(_d(a,31)){b=a;return this.c==b.c&&Pq(this.d,b.d)&&Pq(this.a,b.a)&&Pq(this.b,b.b)}return false};_.hC=function Gj(){return gp(Vd(Rd($e,1),Ru,1,3,[oj(this.c),this.a,this.d,this.b]))};_.tS=function Hj(){return this.a+'.'+this.d+'('+(this.b!=null?this.b:'Unknown Source')+(this.c>=0?':'+this.c:'')+')'};_.c=0;var af=yi(31);var ef=yi(2);var ek,fk=0,gk;Kg(34,45,{116:1},mk,nk);var bf=yi(34);\n\tKg(23,45,{116:1},sk,tk,uk);var cf=yi(23);Kg(67,49,Qu,vk);var df=yi(67);Kg(42,10,Qu,xk,yk);var gf=yi(42);Kg(14,44,{3:1,18:1,44:1,14:1},Ok,Pk,Qk,Rk);_.t=function Uk(a){return Ik(this,a)};_.eQ=function Xk(a){var b;if(this===a){return true}if(_d(a,14)){b=a;return b.e==this.e&&(this.a<54?b.f==this.f:ml(this.c,b.c))}return false};_.hC=function Yk(){var a;if(this.b!=0){return this.b}if(this.a<54){a=mh(this.f);this.b=Ch(jh(a,{l:Su,m:Su,h:Tu}));this.b=33*this.b+Ch(jh(yh(a,32),{l:Su,m:Su,h:Tu}));this.b=17*this.b+ge(this.e);return this.b}this.b=17*pl(this.c)+ge(this.e);return this.b};_.tS=function _k(){return Nk(this)};_.a=0;_.b=0;_.d=0;_.e=0;_.f=0;var zk,Ak,Bk,Ck,Dk,Ek,Fk,Gk;var hf=yi(14);Kg(5,44,{3:1,18:1,44:1,5:1},xl,yl,zl,Al,Bl,Cl);_.t=function El(a){return jl(this,a)};_.eQ=function Fl(a){return ml(this,a)};_.hC=function Hl(){return pl(this)};_.tS=function Jl(){return Xl(this,0)};_.b=-2;_.c=0;_.d=0;_.e=0;var bl,cl,dl,el,fl,gl;var jf=yi(5);var Sl,Tl;var jm,km,lm;Kg(24,29,{3:1,18:1,29:1,24:1},Gm);var xm,ym,zm,Am,Bm,Cm,Dm,Em;var kf=zi(24,Hm);Kg(130,1,{});_.F=function Mm(a){return Jm(this,a)};_.H=function Nm(a){var b,c,d;d=this.G();a.length<d&&(a=Qd(a,d));c=this.D();for(b=0;b<d;++b){a[b]=c.O()}a.length>d&&(a[d]=null);return a};_.tS=function Om(){return Lm(this)};var nf=yi(130);Kg(129,1,{50:1});_.I=function Sm(a){return Pm(this,a)};_.J=function Tm(a){return !!Qm(this,a)};_.eQ=function Um(a){var b,c,d;if(a===this){return true}if(!_d(a,50)){return false}d=a;if(this.G()!=d.G()){return false}for(c=d.K().D();c.N();){b=c.O();if(!this.I(b)){return false}}return true};_.L=function Vm(a){return Xm(Qm(this,a))};_.hC=function Ym(){return lp(this.K())};_.G=function Zm(){return this.K().G()};_.tS=function $m(){var a,b,c,d;d=new uk('{');a=false;for(c=this.K().D();c.N();){b=c.O();a?(d.a+=', ',d):(a=true);qk(d,Rm(this,b.T()));d.a+='=';qk(d,Rm(this,b.U()))}d.a+='}';return d.a};var Cf=yi(129);Kg(79,129,{50:1});_.J=function jn(a){return _m(this,a)};_.K=function kn(){return new qn(this)};_.L=function ln(a){return dn(this,a)};_.M=function mn(a,b){return gn(this,a,b)};_.G=function nn(){return this.b};_.b=0;var qf=yi(79);Kg(131,130,hv);_.eQ=function on(a){var b;if(a===this){return true}if(!_d(a,35)){return false}b=a;if(b.G()!=this.G()){return false}return Km(this,b)};_.hC=function pn(){return lp(this)};var Hf=yi(131);Kg(61,131,hv,qn);_.F=function rn(a){if(_d(a,27)){return Pm(this.a,a)}return false};_.D=function sn(){return new wn(this.a)};_.G=function tn(){return this.a.b};var pf=yi(61);Kg(62,1,{},wn);_.N=function xn(){return un(this)};_.O=function yn(){return vn(this)};var of=yi(62);Kg(135,130,{51:1});_.P=function zn(a,b){throw new yk('Add not supported on this list')};_.Q=function An(a){this.P(this.G(),a);return true};_.eQ=function Bn(a){var b,c,d,e,f;if(a===this){return true}if(!_d(a,51)){return false}f=a;if(this.G()!=f.G()){return false}e=f.D();for(c=this.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(!(ee(b)===ee(d)||b!=null&&fb(b,d))){return false}}return true};_.hC=function Cn(){return mp(this)};_.D=function Dn(){return new In(this)};_.S=function En(a){throw new yk('Remove not supported on this list')};var tf=yi(135);Kg(21,1,{},In);_.N=function Jn(){return Fn(this)};_.O=function Kn(){return Gn(this)};_.a=0;_.b=-1;var rf=yi(21);Kg(90,21,{},Ln);var sf=yi(90);Kg(63,131,hv,Nn);_.F=function On(a){return _m(this.a,a)};_.D=function Pn(){return Mn(this)};_.G=function Qn(){return this.a.b};var vf=yi(63);Kg(81,1,{},Sn);_.N=function Tn(){return un(this.a)};_.O=function Un(){return Rn(this)};var uf=yi(81);Kg(25,130,{},Wn);_.F=function Xn(a){return an(this.a,a)};_.D=function Yn(){return Vn(this)};_.G=function Zn(){return this.a.b};var xf=yi(25);Kg(82,1,{},_n);_.N=function ao(){return un(this.a)};_.O=function bo(){return $n(this)};var wf=yi(82);Kg(37,1,iv);_.eQ=function fo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.c,b.T())&&Pq(this.d,b.U())};_.T=function go(){return this.c};_.U=function ho(){return this.d};_.hC=function io(){return Qq(this.c)^Qq(this.d)};_.V=function jo(a){return co(this,a)};_.tS=function ko(){return this.c+'='+this.d};var yf=yi(37);Kg(53,37,{37:1,53:1,27:1},lo);var zf=yi(53);Kg(80,37,iv,mo);_.V=function no(a){throw new xk};var Af=yi(80);Kg(136,1,{27:1});_.eQ=function oo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.T(),b.T())&&Pq(this.U(),b.U())};_.hC=function po(){return Qq(this.T())^Qq(this.U())};_.tS=function qo(){return this.T()+'='+this.U()};var Bf=yi(136);Kg(137,129,{50:1});_.I=function wo(a){return ro(this,a)};_.J=function xo(a){return so(this,a)};_.K=function yo(){return new Bo(this)};_.L=function zo(a){return to(this,a)};var Gf=yi(137);Kg(73,131,hv,Bo);_.F=function Co(a){return _d(a,27)&&ro(this.a,a)};_.D=function Do(){return this.a.W()};_.G=function Eo(){return this.a.G()};var Df=yi(73);Kg(13,131,hv,Go);_.F=function Ho(a){return so(this.a,a)};_.D=function Io(){return Fo(this)};_.G=function Jo(){return this.a.d};var Ff=yi(13);Kg(97,1,{},Lo);_.N=function Mo(){return Fn(this.a.a)};_.O=function No(){return Ko(this)};var Ef=yi(97);Kg(46,135,jv,Xo,Yo);_.P=function Zo(a,b){Po(this,a,b)};_.Q=function $o(a){return Qo(this,a)};_.F=function _o(a){return So(this,a,0)!=-1};_.R=function ap(a){return Ro(this,a)};_.S=function bp(a){return To(this,a)};_.G=function cp(){return this.b.length};_.H=function fp(a){return Wo(this,a)};var If=yi(46);var op;Kg(108,1,{},qp);_.Y=function rp(a,b){Fc(a);Fc(b);return $j(a,b)};var Jf=yi(108);Kg(115,10,Qu,vp);var Kf=yi(115);Kg(114,10,Qu,wp);var Lf=yi(114);Kg(22,79,kv,zp);var Mf=yi(22);Kg(75,1,{},Hp);_.Z=function Ip(a){var b,c,d,e,f,g,h,i;for(g=Ep(this),h=0,i=g.length;h<i;++h){f=g[h];for(c=this.a[f],d=0,e=c.length;d<e;++d){b=c[d];if(xp(a,b.U())){return true}}}return false};_.$=function Jp(){return Object.create(null)};_._=function Kp(){return new Mp(this)};var Qf=yi(75);Kg(102,1,{},Mp);_.N=function Np(){return Lp(this)};_.O=function Op(){return Dc(Lp(this)),this.e=this.a[this.c++],this.e};_.b=-1;_.c=0;_.e=null;var Nf=yi(102);Kg(100,75,{},Pp);_.Z=function Qp(a){var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){var g=d[e];var h=g.U();if(this.ab(a,h)){return true}}}}return false};_.$=function Rp(){return {}};_._=function Sp(){var a=this.bb();var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){a.Q(d[e])}}}return a.D()};_.ab=function Tp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.bb=function Up(){return new Vp(this)};var Pf=yi(100);Kg(101,46,jv,Vp);_.S=function Wp(a){var b;return b=To(this,a),Gp(this.a,b.T()),b};var Of=yi(101);Kg(103,1,{},Xp);_.cb=function Yp(){return new Hp};_.db=function Zp(){return new mq};var Tf=yi(103);var $p;Kg(105,103,{},cq);_.db=function dq(){return new Lq};var Rf=yi(105);Kg(104,103,{},eq);_.cb=function fq(){return new Pp};_.db=function gq(){return new Cq};var Sf=yi(104);Kg(64,1,{},mq);_.Z=function nq(a){return hq(this,a)};_.eb=function oq(){return Object.create(null)};_._=function pq(){var a;a=this.hb();return new vq(this,a)};_.fb=function qq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.gb=function rq(a){return this.a[a]};_.hb=function sq(){return iq(this)};_.ib=function tq(a){return new yq(this,a)};_.jb=function uq(a,b){return jq(this,a,b)};var Zf=yi(64);Kg(89,1,{},vq);_.N=function wq(){return this.a<this.c.length};_.O=function xq(){return Dc(this.a<this.c.length),new yq(this.b,this.c[this.a++])};_.a=0;var Uf=yi(89);Kg(71,136,{27:1},yq);_.T=function zq(){return this.b};_.U=function Aq(){return this.a.gb(this.b)};_.V=function Bq(a){return this.a.jb(this.b,a)};var Vf=yi(71);Kg(86,64,{},Cq);_.Z=function Dq(a){var b=this.a;for(var c in b){if(c.charCodeAt(0)==58){var d=b[c];if(this.fb(a,d)){return true}}}return false};_.eb=function Eq(){return {}};_._=function Fq(){var a=this.kb();for(var b in this.a){if(b.charCodeAt(0)==58){var c=this.ib(b.substring(1));a.Q(c)}}return a.D()};_.gb=function Gq(a){return this.a[':'+a]};_.kb=function Hq(){return new Jq(this)};_.jb=function Iq(a,b){return jq(this,':'+a,b)};var Xf=yi(86);Kg(88,46,jv,Jq);_.S=function Kq(a){var b;return b=To(this,a),kq(this.a,':'+b.T()),b};var Wf=yi(88);Kg(87,64,{},Lq);_.Z=function Mq(a){var b;b=this.a['__proto__'];if(!(b===undefined)&&(ee(a)===ee(b)||a!=null&&fb(a,b))){return true}return hq(this,a)};_.hb=function Nq(){var a;a=iq(this);!(this.a['__proto__']===undefined)&&(a[a.length]='__proto__');return a};var Yf=yi(87);var $f=Ai();Kg(77,10,Qu,Oq);var _f=yi(77);Kg(74,135,jv,Sq);_.P=function Tq(a,b){Vq(a,this.a.b.length+1);Po(this.a,a,b)};_.Q=function Uq(a){return Rq(this,a)};_.F=function Wq(a){return So(this.a,a,0)!=-1};_.R=function Xq(a){return Vq(a,this.a.b.length),Ro(this.a,a)};_.D=function Yq(){return new In(this.a)};_.S=function Zq(a){return Vq(a,this.a.b.length),this.a.S(a)};_.G=function $q(){return this.a.b.length};_.H=function _q(a){return Wo(this.a,a)};_.tS=function ar(){return Lm(this.a)};var lg=yi(74);Kg(113,74,jv,dr);var ag=yi(113);Kg(58,137,kv,tr,ur);_.W=function vr(){return new Br(this)};_.K=function wr(){return new Fr(this)};_.X=function xr(a){var b,c,d;d=this.c;while(d){b=this.b.Y(a,d.c);if(b==0){return d}c=b<0?0:1;d=d.a[c]}return null};_.G=function yr(){return this.d};_.d=0;var jg=yi(58);Kg(72,1,{},Br);_.N=function Dr(){return Fn(this.a)};_.O=function Er(){return zr(this)};var bg=yi(72);Kg(12,73,hv,Fr);var cg=yi(12);Kg(40,53,{37:1,53:1,27:1,40:1},Gr);_.b=false;var dg=yi(40);Kg(65,1,{},Hr);_.tS=function Ir(){return 'State: mv='+this.c+' value='+this.d+' done='+this.a+' found='+this.b};_.a=false;_.b=false;_.c=false;var eg=yi(65);Kg(26,29,lv,Or);_.lb=function Pr(){return false};_.mb=function Qr(){return false};var Jr,Kr,Lr,Mr;var ig=zi(26,Rr);Kg(94,26,lv,Sr);_.mb=function Tr(){return true};var fg=zi(94,null);Kg(95,26,lv,Ur);_.lb=function Vr(){return true};_.mb=function Wr(){return true};var gg=zi(95,null);Kg(96,26,lv,Xr);_.lb=function Yr(){return true};var hg=zi(96,null);Kg(57,131,{3:1,35:1},$r,_r);_.F=function as(a){return so(this.g,a)};_.D=function bs(){return Fo(new Go(this.g))};_.G=function cs(){return this.g.d};var kg=yi(57);Kg(32,1,{18:1,32:1},js,ks,ls,ms);_.t=function ns(a){if(!_d(a,32))throw new yk('Not comparable: Atoms and '+ui(hb(a)));return ds(this,a)};_.eQ=function os(a){return es(this,a)};_.hC=function ps(){var a;a=this.a+this.i;return jk(a)};_.tS=function qs(){return is(this,null)};_.a=0;_.b=0;_.c=0;_.d=0;_.e=0;_.f=0;_.g=0;var mg=yi(32);Kg(33,58,kv,Fs);_.tS=function Gs(){return Cs(this)};_.a=10000;var og=yi(33);Kg(98,1,{},Hs);_.Y=function Is(a,b){return -$j(a.U(),b.U())};var ng=yi(98);Kg(55,1,{18:1},Os,Ps,Qs);_.t=function Rs(a){this.g+'-'+a.g;return Zj(this.g,a.g)};_.eQ=function Ss(a){var b;if(this===a)return true;if(pg!=hb(a))return false;b=a;if(Jj(this.g,b.g))return true;return false};_.tS=function Ts(){return Ns(this)};_.a=0;_.c=0;_.d=0;_.f=0;var pg=yi(55);Kg(99,1,{18:1},Xs);_.t=function Ys(a){return ej(new fj(this.a.c-this.a.d),oj(a.a.c-a.a.d))};_.tS=function Zs(){return this.a.i+' - '+this.a.d+' to '+this.a.c+' - current: '+this.b};_.b=0;_.c=0;_.d=0;var qg=yi(99);Kg(47,1,{},gt,ht);_.tS=function it(){return ft(this)};_.c=false;_.e=false;var sg=yi(47);Kg(30,57,{3:1,35:1},ut,vt,wt);_.tS=function xt(){return tt(this)};_.a=0;_.b='';_.e=false;_.f=0;var rg=yi(30);Kg(70,1,{},Bt);var tg=yi(70);Kg(39,1,{18:1,39:1},Ct);_.t=function Dt(a){var b;if(_d(a,39)){b=a;return this.c=b.c}else throw new yk('Cannot compare Isotope to '+a)};_.tS=function Et(){return 'Number: '+this.c+' - mass: '+this.b+' - percentage: '+this.d+' - symbol: '+this.a};_.b=0;_.c=0;_.d=0;var ug=yi(39);var Ft,Gt;Kg(4,6,{3:1,6:1,9:1,4:1},It);var vg=yi(4);Kg(91,1,{},Qt);_.a=0;_.b=0;_.e=null;_.f=0;var Jt=1;var yg=yi(91);Kg(48,1,{},Zt,$t,_t);_.b=0;var xg=yi(48);Kg(92,1,{},bu);_.Y=function cu(a,b){return au(this,a,b)};var wg=yi(92);var du;Kg(93,1,{},iu);_.a=0;_.b=0;_.c=null;var zg=yi(93);var ju;Kg(128,1,{},pu);_.nb=function ou(){};var nu=null;var Ag=yi(128);Kg(69,1,{18:1},Du);_.t=function Eu(a){return Cu(this,a)};_.a=0;_.c=0;var Bg=yi(69);Kg(16,1,{},Gu,Hu,Iu);var Cg=yi(16);Kg(15,1,{},Mu);var Dg=yi(15);var ke=Bi('I'),De=yi(119),Ee=yi(121),Fe=yi(null),Ge=yi(124),he=Bi('B'),je=Bi('D'),$f=Ai(),ie=Bi('C');_=Pg('$wnd.CI.Chemcalc');_.analyseMF=ru;_.getInfo=tu;_.mfFromMonoisotopicMass=uu;_.aa=nu;var Nu=Oh();var gwtOnLoad=gwtOnLoad=Nh;Lh(Rh);Ph('permProps',[[['user.agent','safari']]]);$sendStats('moduleStartup', 'moduleEvalEnd');gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);$sendStats('moduleStartup', 'end');$gwt && $gwt.permProps && __gwtModuleFunction.__moduleStartupDone($gwt.permProps);\n\t//# sourceURL=chemcalc-0.js\n\t\n\t        // End GWT code\n\t\n\t        var toReturn = $wnd[\"CI\"][\"Chemcalc\"];\n\t\n\t        toReturn.version = '3.0.6';\n\t\n\t        return toReturn;\n\t    }\n\t\n\t    var isBrowser, globalEnv;\n\t\n\t    if (typeof window !== 'undefined') { // usual browser window\n\t        isBrowser = true;\n\t        globalEnv = window;\n\t    } else if (typeof self !== 'undefined') { // Web Worker\n\t        isBrowser = true;\n\t        globalEnv = self;\n\t    } else { // Node.js\n\t        isBrowser = false;\n\t        globalEnv = global;\n\t    }\n\t\n\t    var fakeWindow;\n\t    if (isBrowser && !true) {\n\t        fakeWindow = globalEnv;\n\t    } else {\n\t        fakeWindow = {};\n\t        fakeWindow.setTimeout = globalEnv.setTimeout.bind(globalEnv);\n\t        fakeWindow.clearTimeout = globalEnv.clearTimeout.bind(globalEnv);\n\t        fakeWindow.setInterval = globalEnv.setInterval.bind(globalEnv);\n\t        fakeWindow.clearInterval = globalEnv.clearInterval.bind(globalEnv);\n\t    }\n\t\n\t    fakeWindow.document = isBrowser ? (globalEnv.document || {}) : {};\n\t\n\t    if (typeof module !== 'undefined' && module.exports) { // NodeJS\n\t        module.exports = getExports(fakeWindow);\n\t    } else if (true) { // AMD\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return getExports(fakeWindow);\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else { // Global\n\t        var path = [\"CI\",\"Chemcalc\"];\n\t        var l = path.length - 1;\n\t        var obj = globalEnv;\n\t        for (var i = 0; i < l; i++) {\n\t            obj = obj[path[i]] || (obj[path[i]] = {});\n\t        }\n\t        obj[path[l]] = getExports(fakeWindow);\n\t    }\n\t\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar aa = __webpack_require__(3);\n\tvar IEP = __webpack_require__(4);\n\t\n\tconsole.log(IEP);\n\t\n\t\n\texports.getInfo = function () {\n\t    return aa;\n\t}\n\t\n\t// sequence should be in the \"right\" format like HAlaGlyProOH\n\t\n\texports.calculateIEP = function (sequence) {\n\t    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n\t    aas=aas.slice(2,aas.length-2);\n\t    var result=IEP.calculateIEP(aas);\n\t    return result;\n\t}\n\t\n\texports.calculateIEPChart = function (sequence) {\n\t    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n\t    aas=aas.slice(2,aas.length-2);\n\t    var result=IEP.calculateChart(aas);\n\t    return result;\n\t}\n\t\n\t\n\texports.generatePeptideFragments = function generatePeptideFragments(mf, options) {\n\t    if (options === undefined) {\n\t        options = {\n\t            a: false,\n\t            b: true,\n\t            c: false,\n\t            x: false,\n\t            y: true,\n\t            z: false,\n\t            i: false\n\t        };\n\t    }\n\t\n\t    var mfs = [];\n\t    var mfparts=mf.replace(/([a-z\\)])([A-Z][a-z](?=[a-z]))/g,\"$1 $2\").split(/ /);\n\t\n\t    var nTerm=\"\";\n\t    var cTerm=\"\";\n\t    for (var i=1; i<mfparts.length; i++) {\n\t        nTerm+=mfparts[i-1];\n\t        cTerm=mfparts[mfparts.length-i]+cTerm;\n\t        addNTerm(mfs, nTerm, i, options);\n\t        addCTerm(mfs, cTerm, i, options);\n\t        if (options.i) mfs.push(mfparts[i]+\"HC-1O-1(+1)$i:\"+mfparts[i]);\n\t    }\n\t\n\t    if (mfs.length === 0) {\n\t        mfs = mfs.concat([mf]);\n\t    }\n\t\n\t    return mfs;\n\t\n\t};\n\t\n\texports.chargePeptide = function chargePeptide(mf) {\n\t    return mf.replace(/^H([^+])/, 'H+H$1').replace(/(Arg|His|Lys)(?!\\()/g, '$1(H+)');\n\t};\n\t\n\tfunction aa1To3(code) {\n\t    for (var i = 0; i < aa.length; i++) {\n\t        if (aa[i].aa1 === code) {\n\t            return aa[i].aa3;\n\t        }\n\t    }\n\t    throw new Error('Invalid 1 letter code: ' + code);\n\t}\n\t\n\tfunction converAA1To3(mf) {\n\t    var newmf = '';\n\t    for (var i = 0; i < mf.length; i++) {\n\t        newmf += aa1To3(mf.charAt(i));\n\t    }\n\t    return newmf;\n\t}\n\t\n\tfunction capitalizeAA3(mf) {\n\t    for (var i = 0; i < aa.length; i++) {\n\t        var regexp = new RegExp(aa[i].aa3, 'gi');\n\t        mf = mf.replace(regexp, aa[i].aa3);\n\t    }\n\t    return mf;\n\t}\n\t\n\t\n\texports.convertAASequence = function convertAASequence(mf) {\n\t    // this function will check if it is a sequence of aa in 1 letter or 3 letters and convert them if it is the case\n\t    // it could be a multiline mf !\n\t    // if it is a multiline we could make some \"tricks\" ...\n\t    var newmf = mf;\n\t    // SEQRES   1 B  256  MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n\t    // SEQRES   2 B  256  GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n\t    // or\n\t    // MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n\t    // GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n\t    if (mf.search(/[A-Z]{3} [A-Z]{3} [A-Z]{3}/) > -1) {\n\t        // this is a PDB !\n\t        var tmpmf = mf.replace(/[\\r\\n]+/g, ' ');\n\t        tmpmf = tmpmf.replace(/(SEQRES|[0-9]+| [A-Z] | [0-9A-Z]{4-50})/g, '');\n\t        // we need to correct the uppercase / lowercase\n\t        var parts = tmpmf.split(' ');\n\t        newmf = 'H';\n\t        for (var i = 0; i < parts.length; i++) {\n\t            newmf += parts[i].substr(0, 1) + parts[i].substr(1).toLowerCase();\n\t        }\n\t        newmf += 'OH';\n\t    } else if ((mf.search(/[A-Z]{3}/) > -1) && (mf.search(/[a-zA-Z][a-z0-9]/) == -1)) {\n\t        // UNIPROT\n\t        //   370        380        390        400        410        420\n\t        //GFKPNLRKTF VSGLFRESCG AHFYRGVDVK PFYIKKPVDN LFALMLILNR LRGWGVVGGM\n\t        //\n\t        //    430        440        450        460        470        480\n\t        //SDPRLYKVWV RLSSQVPSMF FGGTDLAADY YVVSPPTAVS VYTKTPYGRL LADTRTSGFR\n\t        // We remove all the number, all the spaces, etc\n\t        newmf = 'H' + converAA1To3(newmf.replace(/[^A-Z]/g, '')) + 'OH';\n\t    }\n\t\n\t    return newmf;\n\t\n\t};\n\t\n\tfunction addNTerm(mfs, nTerm, i, options) {\n\t    if (options.a) mfs.push(nTerm+\"C-1O-1(+1)$a\"+i);\n\t    if (options.b) mfs.push(nTerm+\"(+1)$b\"+i);\n\t    if (options.c) mfs.push(nTerm+\"NH3(+1)$c\"+i);\n\t}\n\t\n\tfunction addCTerm(mfs, cTerm, i, options) {\n\t    if (options.x) mfs.push(\"CO(+1)\"+cTerm+\"$x\"+i);\n\t    if (options.y) mfs.push(\"H2(+1)\"+cTerm+\"$y\"+i);\n\t    if (options.z) mfs.push(\"N-1H-1(+1)\"+cTerm+\"$z\"+i);\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\n\tmodule.exports = [\n\t    // Standard amino acids\n\t    {\n\t        name: \"Alanine\",\n\t        aa3: \"Ala\",\n\t        aa1: \"A\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.33,\n\t        pKaN: 9.71\n\t    },\n\t    {\n\t        name: \"Arginine\",\n\t        aa3: \"Arg\",\n\t        aa1: \"R\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 12.10\n\t        },\n\t        pKaC: 2.03,\n\t        pKaN: 9.00\n\t    },\n\t    {\n\t        name: \"Asparagine\",\n\t        aa3: \"Asn\",\n\t        aa1: \"N\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.13,\n\t        pKaN: 9.05\n\t    },\n\t    {\n\t        name: \"Aspartic acid\",\n\t        aa3: \"Asp\",\n\t        aa1: \"D\",\n\t        sc: {\n\t            type: \"negative\",\n\t            pKa: 3.71\n\t        },\n\t        pKaC: 1.95,\n\t        pKaN: 9.66\n\t    },\n\t    {\n\t        name: \"Cysteine\",\n\t        aa3: \"Cys\",\n\t        aa1: \"C\",\n\t        sc: {\n\t            type: \"special\",\n\t            pKa: 8.14\n\t        },\n\t        pKaC: 1.91,\n\t        pKaN: 10.28\n\t    },\n\t    {\n\t        name: \"Glutamic acid\",\n\t        aa3: \"Glu\",\n\t        aa1: \"E\",\n\t        sc: {\n\t            type: \"negative\",\n\t            pKa: 4.15\n\t        },\n\t        pKaC: 2.16,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Glutamine\",\n\t        aa3: \"Gln\",\n\t        aa1: \"Q\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.18,\n\t        pKaN: 9.00\n\t    },\n\t    {\n\t        name: \"Glycine\",\n\t        aa3: \"Gly\",\n\t        aa1: \"G\",\n\t        sc: {\n\t            type: \"special\"\n\t        },\n\t        pKaC: 2.34,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Histidine\",\n\t        aa3: \"His\",\n\t        aa1: \"H\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 6.04\n\t        },\n\t        pKaC: 1.70,\n\t        pKaN: 9.09\n\t    },\n\t    {\n\t        name: \"Isoleucine\",\n\t        aa3: \"Ile\",\n\t        aa1: \"I\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.26,\n\t        pKaN: 9.60\n\t    },\n\t    {\n\t        name: \"Leucine\",\n\t        aa3: \"Leu\",\n\t        aa1: \"L\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.32,\n\t        pKaN: 9.58\n\t    },\n\t    {\n\t        name: \"Lysine\",\n\t        aa3: \"Lys\",\n\t        aa1: \"K\",\n\t        sc: {\n\t            type: \"positive\",\n\t            pKa: 10.67\n\t        },\n\t        pKaC: 2.15,\n\t        pKaN: 9.16\n\t    },\n\t    {\n\t        name: \"Methionine\",\n\t        aa3: \"Met\",\n\t        aa1: \"M\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.16,\n\t        pKaN: 9.08\n\t    },\n\t    {\n\t        name: \"Phenylalanine\",\n\t        aa3: \"Phe\",\n\t        aa1: \"F\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.18,\n\t        pKaN: 9.09\n\t    },\n\t    {\n\t        name: \"Proline\",\n\t        aa3: \"Pro\",\n\t        aa1: \"P\",\n\t        sc: {\n\t            type: \"special\"\n\t        },\n\t        pKaC: 1.95,\n\t        pKaN: 10.47\n\t    },\n\t    {\n\t        name: \"Serine\",\n\t        aa3: \"Ser\",\n\t        aa1: \"S\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.13,\n\t        pKaN: 9.05\n\t    },\n\t    {\n\t        name: \"Threonine\",\n\t        aa3: \"Thr\",\n\t        aa1: \"T\",\n\t        sc: {\n\t            type: \"polar\"\n\t        },\n\t        pKaC: 2.20,\n\t        pKaN: 8.96\n\t    },\n\t    {\n\t        name: \"Tryptophan\",\n\t        aa3: \"Trp\",\n\t        aa1: \"W\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.38,\n\t        pKaN: 9.34\n\t    },\n\t    {\n\t        name: \"Tyrosine\",\n\t        aa3: \"Tyr\",\n\t        aa1: \"Y\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.24,\n\t        pKaN: 9.04\n\t    },\n\t    {\n\t        name: \"Valine\",\n\t        aa3: \"Val\",\n\t        aa1: \"V\",\n\t        sc: {\n\t            type: \"hydrophobic\"\n\t        },\n\t        pKaC: 2.27,\n\t        pKaN: 9.52\n\t    },\n\t    // Additional\n\t    {\n\t        name: \"Selenocysteine\",\n\t        aa3: \"Sec\",\n\t        aa1: \"U\"\n\t    },\n\t    {\n\t        name: \"Pyrrolysine\",\n\t        aa3: \"Pyl\",\n\t        aa1: \"O\"\n\t    },\n\t    // Ambiguous\n\t    {\n\t        name: \"Asparagine or aspartic acid\",\n\t        aa3: \"Asx\",\n\t        aa1: \"B\"\n\t    },\n\t    {\n\t        name: \"Glutamine or glutamic acid\",\n\t        aa3: \"Glx\",\n\t        aa1: \"Z\"\n\t    },\n\t    {\n\t        name: \"Leucine or isoleucine\",\n\t        aa3: \"Xle\",\n\t        aa1: \"J\"\n\t    },\n\t    {\n\t        name: \"Unspecified or unknown\",\n\t        aa3: \"Xaa\",\n\t        aa1: \"X\"\n\t    }\n\t];\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\tvar aa = __webpack_require__(3);\n\t\n\t// we will convert the data to an object to be much faster\n\tvar aaObject={};\n\tfor (var i=0; i<aa.length; i++) {\n\t    aaObject[aa[i].aa3]=aa[i];\n\t}\n\t\n\t\n\t\n\tfunction calculateCharge(aaSequence, pH) {\n\t    if (! pH) pH=7.0;\n\t    var combined=combine(aaSequence);\n\t    if (!combined) return;\n\t    var charge=calculateForPh(combined, pH);\n\t    return Math.round(charge*1000)/1000;\n\t}\n\t\n\t// this methods required an array of aas\n\t\n\tfunction calculateIEP(aas) {\n\t    var combined=combine(aas);\n\t    if (!combined) return;\n\t    var first=0;\n\t    var last=14;\n\t    var current=14;\n\t    var previous=0;\n\t    var currentCharge;\n\t    while (Math.abs(current-previous)>0.0001) {\n\t        previous=current;\n\t        current=(last + first) / 2;\n\t        currentCharge=calculateForPh(combined, current);\n\t        if (currentCharge>0) {\n\t            first=current;\n\t        } else if (currentCharge<0) {\n\t            last=current;\n\t        } else {\n\t            previous=current;\n\t        }\n\t    }\n\t    return Math.round(current*1000)/1000;\n\t}\n\t\n\tfunction calculateChart(aas) {\n\t    var combined=combine(aas);\n\t    if (!combined) return;\n\t    var y=[];\n\t    var yAbs=[];\n\t    for (var i=0; i<=14; i=i+0.01) {\n\t        var charge=calculateForPh(combined, i);\n\t        y.push(charge);\n\t        yAbs.push(Math.abs(charge));\n\t    }\n\t    combined.y=y;\n\t    combined.yAbs=yAbs;\n\t\n\t    return combined;\n\t}\n\t\n\t\n\tfunction calculateForPh(combined, pH) {\n\t    var total=0;\n\t    total+=1/(1+Math.pow(10,pH-combined.first));\n\t    total+=-1/(1+Math.pow(10,combined.last-pH));\n\t    for (var key in combined.acid) {\n\t        total+=-combined.acid[key]/(1+Math.pow(10,aaObject[key].sc.pKa-pH));\n\t    }\n\t    for (var key in combined.basic) {\n\t        total+=combined.basic[key]/(1+Math.pow(10,pH-aaObject[key].sc.pKa));\n\t    }\n\t    return total;\n\t}\n\t\n\t// we will combine the amino acids\n\tfunction combine(aaSequence) {\n\t    var combined={};\n\t    if (aaObject[aaSequence[0]]) {\n\t        combined.first=aaObject[aaSequence[0]].pKaN;\n\t    } else {\n\t        return;\n\t    }\n\t    if (aaObject[aaSequence[aaSequence.length-1]]) {\n\t        combined.last=aaObject[aaSequence[aaSequence.length-1]].pKaC;\n\t    } else {\n\t        return;\n\t    }\n\t    combined.basic={};\n\t    combined.acid={};\n\t    for (var i=0; i<aaSequence.length; i++) {\n\t        var aa=aaSequence[i];\n\t        if (! aaObject[aa]) return;\n\t        if (aaObject[aa].sc && aaObject[aa].sc.type) {\n\t            if (aaObject[aa].sc.type==\"positive\") {\n\t                if (!combined.basic[aa]) {\n\t                    combined.basic[aa] = 0;\n\t                }\n\t                combined.basic[aa]++;\n\t            } else if (aaObject[aa].sc.type==\"negative\") {\n\t                if (!combined.acid[aa]) {\n\t                    combined.acid[aa] = 0;\n\t                }\n\t                combined.acid[aa]++;\n\t            }\n\t        }\n\t    }\n\t    return combined;\n\t}\n\t\n\t\n\t\n\tmodule.exports={\n\t    calculateIEP: calculateIEP,\n\t    calculateCharge: calculateCharge,\n\t    calculateChart: calculateChart\n\t}\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CC = __webpack_require__(1);\n\tvar Similarity = __webpack_require__(6);\n\t\n\tfunction MfProcessor(experimental, options) {\n\t    // we will copy the options to be sure ...\n\t    this.options=Object.create(options || {});\n\t    this.options.isotopomers = 'arrayXXYY';\n\t    // init with options ans experimental spectrum\n\t    this.options.zone = this.options.zone || {};\n\t    if (!this.options.zone.low) this.options.zone.low = -0.5;\n\t    if (!this.options.zone.high) this.options.zone.high = 4.5;\n\t\n\t    if (this.options.decimalsMass) this.factorMass = Math.pow(10, this.options.decimalsMass);\n\t    if (this.options.decimalsPPM) this.factorPPM = Math.pow(10, this.options.decimalsPPM);\n\t\n\t    this.widthFunction=undefined;\n\t    if (this.options.widthFunction) {\n\t         this.widthFunction = new Function('mass', 'charge',\n\t            this.options.widthFunction + \";\"+\n\t            \"return {widthBottom: widthBottom, widthTop: widthTop};\"\n\t         );\n\t\n\t    }\n\t\n\t\n\t    this.similarity = new Similarity({\n\t        widthTop: this.options.widthTop,\n\t        widthBottom: this.options.widthBottom,\n\t        common: this.options.common\n\t    });\n\t    this.similarity.setPeaks1(experimental);\n\t}\n\t\n\tMfProcessor.prototype.process = function (mf, result) {\n\t    // we allow to add information on an existing result\n\t    result = result || {};\n\t    var ccResult = CC.analyseMF(mf, this.options);\n\t\n\t    var charge = Math.abs(ccResult.parts[0].charge || 1);\n\t    var target = ccResult.parts[0].msem || ccResult.parts[0].em;\n\t\n\t    var from, to;\n\t    if (this.options.from && this.options.to) {\n\t        from = this.options.from;\n\t        to = this.options.to;\n\t    } else {\n\t        from = target + this.options.zone.low / charge;\n\t        to = target + this.options.zone.high / charge;\n\t    }\n\t\n\t    if (this.widthFunction) {\n\t        var width=this.widthFunction(target, charge)\n\t        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n\t    }\n\t\n\t\n\t    this.similarity.setFromTo(from, to);\n\t    this.similarity.setPeaks2(ccResult.arrayXXYY);\n\t\n\t    var similarityResult = this.similarity.getSimilarity();\n\t\n\t    if (!result.em) result.em = ccResult.em;\n\t    if (!result.info) result.info = mf;\n\t    if (!result.mf) result.mf = ccResult.mf;\n\t    if (!result.charge) result.charge = ccResult.parts[0].charge || 0;\n\t    if (!result.msem) result.msem = ccResult.parts[0].msem || 0;\n\t    result.fromTo = {from: from, to: to};\n\t    result.extract = similarityResult.extract2;\n\t    result.extractInfo = similarityResult.extractInfo2;\n\t    result.diff = similarityResult.diff;\n\t    result.similarity = Math.floor(similarityResult.similarity * 1e4) / 1e2;\n\t    result.color = 'hsla(' + Math.round(similarityResult.similarity * 120) + ',100%,60%,0.6)';\n\t    if (this.options.addExperimentalExtract) {\n\t        result.extractExperimental = similarityResult.extract1;\n\t        result.extractInfoExperimental = similarityResult.extractInfo1;\n\t    }\n\t\n\t    if (this.factorPPM) result.ppm = Math.round(result.ppm * this.factorPPM) / this.factorPPM;\n\t    if (this.factorMass) result.em = Math.round(result.em * this.factorMass) / this.factorMass;\n\t    if (this.factorMass && result.msem) result.msem = Math.round(result.msem * this.factorMass) / this.factorMass;\n\t\n\t    return result;\n\t};\n\t\n\tmodule.exports = MfProcessor;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar COMMON_NO=0;\n\tvar COMMON_FIRST=1;\n\tvar COMMON_SECOND=2;\n\tvar COMMON_BOTH=3; // should be a binary operation !\n\t\n\tvar Stat = __webpack_require__(7).array;\n\t\n\t\n\tmodule.exports = function Comparator(options) {\n\t    \n\t    var widthTop, widthBottom, from, to;\n\t    var array1Extract, array2Extract, widthSlope, array1ExtractInfo, array2ExtractInfo;\n\t    var common, commonFactor;\n\t\n\t    setOptions(options);\n\t\n\t    var array1=[];\n\t    var array2=[];\n\t \n\t    /*\n\t     2 formats are allowed:\n\t     [[x1,x2,...],[y1,y2,...]] or [[x1,y1],[x2,y2], ...]\n\t    */\n\t\n\t    function setOptions(newOptions) {\n\t        options=newOptions || {};\n\t        if (typeof options.common === 'string') {\n\t            if (options.common.toLowerCase()==='first') {\n\t                common=COMMON_FIRST;\n\t            } else if (options.common.toLowerCase()==='second') {\n\t                common=COMMON_SECOND;\n\t            } else if (options.common.toLowerCase()==='both') {\n\t                common=COMMON_BOTH;\n\t            } else {\n\t                common=COMMON_NO;\n\t            }\n\t        } else {\n\t            if (options.common==true) {\n\t                common=COMMON_BOTH;\n\t            } else {\n\t                common=COMMON_NO;\n\t            }\n\t        }\n\t        commonFactor=options.commonFactor || commonFactor || 4;\n\t\n\t        if (options.widthBottom==undefined) {\n\t            options.widthBottom=widthBottom || 2;\n\t        }\n\t        if (options.widthTop==undefined) {\n\t            options.widthTop=widthTop || 1;\n\t        }\n\t        setTrapezoid(options.widthBottom, options.widthTop);\n\t        setFromTo(options.from || from, options.to || to);\n\t    }\n\t\n\t    function setPeaks1(anArray) {\n\t        array1=checkArray(anArray);\n\t\n\t        if (common) {\n\t            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n\t            array1Extract=extracts.data1;\n\t            array1ExtractInfo=extracts.info1;\n\t            array2Extract=extracts.data2;\n\t            array2ExtractInfo=extracts.info2;\n\t        } else {\n\t            var extract=extractAndNormalize(array1, from, to);\n\t            array1Extract=extract.data;\n\t            array1ExtractInfo=extract.info;\n\t        }\n\t    }\n\t    function setPeaks2(anArray) {\n\t        array2=checkArray(anArray);\n\t        if (common) {\n\t            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n\t            array1Extract=extracts.data1;\n\t            array1ExtractInfo=extracts.info1;\n\t            array2Extract=extracts.data2;\n\t            array2ExtractInfo=extracts.info2;\n\t        } else {\n\t            var extract = extractAndNormalize(array2, from, to);\n\t            array2Extract = extract.data;\n\t            array2ExtractInfo = extract.info;\n\t        }\n\t    }\n\t\n\t    function getExtract1() {\n\t        return array1Extract;\n\t    }\n\t\n\t    function getExtract2() {\n\t        return array2Extract;\n\t    }\n\t\n\t\n\t    function getExtractInfo1() {\n\t        return array1ExtractInfo;\n\t    }\n\t\n\t    function getExtractInfo2() {\n\t        return array2ExtractInfo;\n\t    }\n\t\n\t    function setTrapezoid(newWidthBottom, newWidthTop) {\n\t        widthTop=newWidthTop;\n\t        widthBottom=newWidthBottom;\n\t        widthSlope=(widthBottom-widthTop)/2;\n\t        if (widthBottom<widthTop) throw \"widthBottom has to be larger than widthTop\";\n\t    }\n\t\n\t    function setFromTo(newFrom, newTo) {\n\t        if (newFrom===from && newTo===to) return\n\t        from=newFrom;\n\t        to=newTo;\n\t        if (common) {\n\t            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common, commonFactor);\n\t            array1Extract=extracts.data1;\n\t            array1ExtractInfo=extracts.info1;\n\t            array2Extract=extracts.data2;\n\t            array2ExtractInfo=extracts.info2;\n\t        } else {\n\t            var extract=extractAndNormalize(array1, from, to);\n\t            array1Extract=extract.data;\n\t            array1ExtractInfo=extract.info;\n\t            var extract=extractAndNormalize(array2, from, to);\n\t            array2Extract=extract.data;\n\t            array2ExtractInfo=extract.info;\n\t        }\n\t    }\n\t\n\t\n\t    function getOverlap(x1, y1, x2, y2) {\n\t        if (y1===0 || y2===0) return 0;\n\t\n\t        // TAKE CARE !!! We multiply the diff by 2 !!!\n\t        var diff=Math.abs(x1-x2)*2;\n\t\n\t        if (diff>widthBottom) return 0;\n\t        if (diff<=widthTop) {\n\t            return Math.min(y1,y2);\n\t        }\n\t\n\t        var maxValue=Math.max(y1,y2)*(widthBottom-diff)/(widthBottom-widthTop);\n\t        return Math.min(y1, y2, maxValue);\n\t\n\t        return NaN;\n\t    }\n\t\n\t    // This is the old trapezoid similarity\n\t    function getOverlapTrapezoid(x1, y1, x2, y2) {\n\t\n\t        var factor=2/(widthTop+widthBottom); // correction for surface=1\n\t        if (y1===0 || y2===0) return 0;\n\t        if (x1===x2) { // they have the same position\n\t            return Math.min(y1,y2);\n\t        }\n\t\n\t        var diff=Math.abs(x1-x2);\n\t        if (diff>=widthBottom) return 0;\n\t        if (y1===y2) { // do they have the same height ???\n\t            // we need to find the common length\n\t            if (diff<=widthTop) {\n\t                return (((widthTop+widthBottom)/2-diff)*y1)*factor;\n\t            } else if (diff<=widthBottom) {\n\t                return (widthBottom-diff)*y1/2*(diff-widthTop)/(widthBottom-widthTop)*factor;\n\t            }\n\t            return 0;\n\t        } else { // the height are different and not the same position ...\n\t            // we need to consider only one segment to find its intersection\n\t\n\t            var small=Math.min(y1,y2);\n\t            var big=Math.max(y1,y2);\n\t\n\t            var targets=[\n\t                [[0,0],[widthSlope,small]],\n\t                [[widthSlope,small],[widthSlope+widthTop,small]],\n\t                [[widthTop+widthSlope,small],[widthBottom,0]]\n\t            ];\n\t            if ((x1>x2 && y1>y2) || (x1<x2 && y1<y2)) {\n\t                var segment=[[diff,0],[diff+widthSlope,big]];\n\t            } else {\n\t                var segment=[[diff+widthSlope,big],[diff,0]];\n\t            }\n\t\n\t\n\t\n\t            for (var i=0; i<3; i++) {\n\t                var intersection=getIntersection(targets[i],segment);\n\t                if (intersection) {\n\t                    switch (i) {\n\t                        case 0:\n\t                            return small-((diff*intersection.y/2))*factor;\n\t                        case 1: // to simplify ...\n\t                            //     console.log(\"           \",widthSlope,small,big,intersection.x)\n\t                            return ((widthSlope*small/(2*big))*small+\n\t                                (widthTop+widthSlope-intersection.x)*small+\n\t                                widthSlope*small/2)*factor;\n\t                        case 2:\n\t                            return ((widthBottom-diff)*intersection.y/2)*factor;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return NaN;\n\t    }\n\t\n\t\n\t\n\t    // this method calculates the total diff. The sum of positive value will yield to overlap\n\t    function calculateDiff() {\n\t        // we need to take 2 pointers\n\t        // and travel progressively between them ...\n\t        var newFirst=[\n\t            [].concat(array1Extract[0]),\n\t            [].concat(array1Extract[1])\n\t        ];\n\t        var newSecond=[\n\t            [].concat(array2Extract[0]),\n\t            [].concat(array2Extract[1])\n\t        ];\n\t        var array1Length=array1Extract[0] ? array1Extract[0].length : 0;\n\t        var array2Length=array2Extract[0] ? array2Extract[0].length : 0;\n\t\n\t        var pos1=0;\n\t        var pos2=0;\n\t        var previous2=0;\n\t        while (pos1<array1Length) {\n\t            var diff=newFirst[0][pos1]-array2Extract[0][pos2];\n\t            if (Math.abs(diff)<widthBottom) { // there is some overlap\n\t                if (options.trapezoid) {\n\t                    var overlap=getOverlapTrapezoid(newFirst[0][pos1], newFirst[1][pos1], newSecond[0][pos2], newSecond[1][pos2], widthTop, widthBottom);\n\t                } else {\n\t                    var overlap=getOverlap(newFirst[0][pos1], newFirst[1][pos1], newSecond[0][pos2], newSecond[1][pos2], widthTop, widthBottom);\n\t                }\n\t                newFirst[1][pos1]-=overlap;\n\t                newSecond[1][pos2]-=overlap;\n\t                if (pos2<(array2Length-1)) {\n\t                    pos2++;\n\t                } else {\n\t                    pos1++;\n\t                    pos2=previous2;\n\t                }\n\t            } else {\n\t                if (diff>0 && pos2<(array2Length-1)) {\n\t                    pos2++;\n\t                    previous2=pos2;\n\t                } else {\n\t                    pos1++;\n\t                    pos2=previous2;\n\t                }\n\t            }\n\t        }\n\t        return newSecond;\n\t    }\n\t\n\t\n\t    /*\n\t        This code requires the use of an array like  [[x1,y1],[x2,y2], ...]\n\t        If it is not the right format, we will just convert it\n\t        Otherwise we return the correct format\n\t     */\n\t    function checkArray(points) {\n\t        // if it is already a 2D array of points, we just return them\n\t        if (Array.isArray(points) && Array.isArray(points[0]) && points.length===2) return points;\n\t        var x=new Array(points.length);\n\t        var y=new Array(points.length);\n\t        for (var i=0; i<points.length; i++) {\n\t            x[i]=points[i][0];\n\t            y[i]=points[i][1];\n\t        }\n\t        return [x,y];\n\t    }\n\t\n\t    function getSimilarity(newPeaks1, newPeaks2) {\n\t        if (newPeaks1) setPeaks1(newPeaks1);\n\t        if (newPeaks2) setPeaks2(newPeaks2);\n\t        var result={};\n\t        result.diff=calculateDiff();\n\t        result.extract1=getExtract1();\n\t        result.extract2=getExtract2();\n\t        result.extractInfo1=getExtractInfo1();\n\t        result.extractInfo2=getExtractInfo2();\n\t        result.similarity=calculateOverlapFromDiff(result.diff);\n\t        return result;\n\t    }\n\t\n\t    /*\n\t        This works mainly when you have a array1 that is fixed\n\t        newPeaks2 have to be normalized ! (sum to 1)\n\t     */\n\t    function fastSimilarity(newPeaks2, from, to) {\n\t        array1Extract=extract(array1, from, to);\n\t        array2Extract=newPeaks2;\n\t        if (common&COMMON_SECOND) array1Extract= getCommonArray(array1Extract, array2Extract, widthBottom)\n\t        normalize(array1Extract);\n\t        var diff=calculateDiff();\n\t        return calculateOverlapFromDiff(diff);\n\t    }\n\t\n\t\n\t    this.setPeaks1 = setPeaks1;\n\t    this.setPeaks2 = setPeaks2;\n\t    this.getExtract1 = getExtract1;\n\t    this.getExtract2 = getExtract2;\n\t    this.getExtractInfo1 = getExtractInfo1;\n\t    this.getExtractInfo2 = getExtractInfo2;\n\t    this.setFromTo = setFromTo;\n\t    this.setOptions = setOptions;\n\t    this.setTrapezoid = setTrapezoid;\n\t    this.getSimilarity = getSimilarity;\n\t    this.getCommonArray = getCommonArray;\n\t\n\t    this.fastSimilarity = fastSimilarity;\n\t\n\t};\n\t\n\t\n\t// returns an new array based on array1 where there is a peak of array2 at a distance under width/2\n\tfunction getCommonArray(array1, array2, width) {\n\t    var newArray=[[],[]];\n\t    var pos2=0;\n\t    width/=2;\n\t    var j=0;\n\t    var array1Length=array1[0] ? array1[0].length : 0;\n\t    var array2Length=array2[0] ? array2[0].length : 0;\n\t\n\t    for (var i=0; i<array1Length; i++) {\n\t        while (pos2<array2Length && (array1[0][i]>(array2[0][pos2]+width))) {\n\t            pos2++;\n\t        }\n\t        if ((pos2<array2Length) && (array1[0][i]>array2[0][pos2]-width)) {\n\t            newArray[0][j]=array1[0][i];\n\t            newArray[1][j]=array1[1][i];\n\t            j++;\n\t        }\n\t    }\n\t    return newArray;\n\t}\n\t\n\t\n\t// Adapted from: http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect/1968345#1968345\n\tfunction getIntersection(segment1, segment2) {\n\t    var p0_x=segment1[0][0];\n\t    var p0_y=segment1[0][1];\n\t    var p1_x=segment1[1][0];\n\t    var p1_y=segment1[1][1];\n\t    var p2_x=segment2[0][0];\n\t    var p2_y=segment2[0][1];\n\t    var p3_x=segment2[1][0];\n\t    var p3_y=segment2[1][1];\n\t\n\t    var s1_x, s1_y, s2_x, s2_y;\n\t    s1_x = p1_x - p0_x;\n\t    s1_y = p1_y - p0_y;\n\t    s2_x = p3_x - p2_x;\n\t    s2_y = p3_y - p2_y;\n\t    var s, t;\n\t    s = (-s1_y * (p0_x - p2_x) + s1_x * (p0_y - p2_y)) / (-s2_x * s1_y + s1_x * s2_y);\n\t    t = ( s2_x * (p0_y - p2_y) - s2_y * (p0_x - p2_x)) / (-s2_x * s1_y + s1_x * s2_y);\n\t    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n\t        return {\n\t            x:p0_x + (t * s1_x),\n\t            y:p0_y + (t * s1_y)\n\t        }\n\t    }\n\t    return null; // No collision\n\t}\n\t\n\tfunction normalize(array) {\n\t    var min=Stat.min(array[1]);\n\t    var max=Stat.max(array[1]);\n\t    var sum=Stat.sum(array[1]);\n\t    var length=array[1] ? array[1].length : 0;\n\t    if (sum!=0) {\n\t        for (var i=0; i<length; i++) {\n\t            array[1][i]/=sum;\n\t        }\n\t    }\n\t    return {\n\t        sum: sum,\n\t        min: min,\n\t        max: max\n\t    };\n\t}\n\t\n\t// this method will systemtatically take care of both array\n\tfunction commonExtractAndNormalize(array1, array2, width, from, to, common) {\n\t    if (! (Array.isArray(array1)) || ! (Array.isArray(array2))) return {\n\t        info: undefined,\n\t        data: undefined\n\t    };\n\t    var extract1=extract(array1, from, to);\n\t    var extract2=extract(array2, from, to);\n\t    var common1, common2, info1, info2;\n\t    if (common & COMMON_SECOND) {\n\t        common1=getCommonArray(extract1, extract2, width);\n\t        info1=normalize(common1);\n\t    } else {\n\t        common1=extract1;\n\t        info1=normalize(common1);\n\t    }\n\t    if (common & COMMON_FIRST) {\n\t        common2=getCommonArray(extract2, extract1, width);\n\t        info2=normalize(common2);\n\t    } else {\n\t        common2=extract2;\n\t        info2=normalize(common2);\n\t    }\n\t\n\t    return {\n\t        info1: info1,\n\t        info2: info2,\n\t        data1: common1,\n\t        data2: common2\n\t    }\n\t}\n\t\n\tfunction extract(array, from, to) {\n\t    var newArray=[[],[]];\n\t    var j=0;\n\t    var length=array[0] ? array[0].length : 0;\n\t    for (var i=0; i<length; i++) {\n\t        if ( (! from || array[0][i]>=from)  && (! to || array[0][i]<=to)) {\n\t            newArray[0][j] = array[0][i];\n\t            newArray[1][j] = array[1][i];\n\t            j++\n\t        }\n\t    }\n\t    return newArray;\n\t}\n\t\n\tfunction extractAndNormalize(array, from, to) {\n\t    if (! (Array.isArray(array))) return {\n\t        info: undefined,\n\t        data: undefined\n\t    };\n\t    var newArray=extract(array, from, to);\n\t    var info=normalize(newArray);\n\t    return {\n\t        info: info,\n\t        data: newArray\n\t    };\n\t}\n\t\n\tfunction calculateOverlapFromDiff(diffs) {\n\t    var sumPos=0;\n\t    for (var i=0; i<diffs[1].length; i++) {\n\t        sumPos+=Math.abs(diffs[1][i]);\n\t    }\n\t    return 1-sumPos;\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.array = __webpack_require__(8);\n\texports.matrix = __webpack_require__(9);\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction compareNumbers(a, b) {\n\t    return a - b;\n\t}\n\t\n\t/**\n\t * Computes the sum of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.sum = function sum(values) {\n\t    var sum = 0;\n\t    for (var i = 0; i < values.length; i++) {\n\t        sum += values[i];\n\t    }\n\t    return sum;\n\t};\n\t\n\t/**\n\t * Computes the maximum of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.max = function max(values) {\n\t    var max = -Infinity;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] > max) max = values[i];\n\t    }\n\t    return max;\n\t};\n\t\n\t/**\n\t * Computes the minimum of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.min = function min(values) {\n\t    var min = Infinity;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] < min) min = values[i];\n\t    }\n\t    return min;\n\t};\n\t\n\t/**\n\t * Computes the min and max of the given values\n\t * @param {Array} values\n\t * @returns {{min: number, max: number}}\n\t */\n\texports.minMax = function minMax(values) {\n\t    var min = Infinity;\n\t    var max = -Infinity;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] < min) min = values[i];\n\t        if (values[i] > max) max = values[i];\n\t    }\n\t    return {\n\t        min: min,\n\t        max: max\n\t    };\n\t};\n\t\n\t/**\n\t * Computes the arithmetic mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.arithmeticMean = function arithmeticMean(values) {\n\t    var sum = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        sum += values[i];\n\t    }\n\t    return sum / l;\n\t};\n\t\n\t/**\n\t * {@link arithmeticMean}\n\t */\n\texports.mean = exports.arithmeticMean;\n\t\n\t/**\n\t * Computes the geometric mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.geometricMean = function geometricMean(values) {\n\t    var mul = 1;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        mul *= values[i];\n\t    }\n\t    return Math.pow(mul, 1 / l);\n\t};\n\t\n\t/**\n\t * Computes the mean of the log of the given values\n\t * If the return value is exponentiated, it gives the same result as the\n\t * geometric mean.\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.logMean = function logMean(values) {\n\t    var lnsum = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        lnsum += Math.log(values[i]);\n\t    }\n\t    return lnsum / l;\n\t};\n\t\n\t/**\n\t * Computes the weighted grand mean for a list of means and sample sizes\n\t * @param {Array} means - Mean values for each set of samples\n\t * @param {Array} samples - Number of original values for each set of samples\n\t * @returns {number}\n\t */\n\texports.grandMean = function grandMean(means, samples) {\n\t    var sum = 0;\n\t    var n = 0;\n\t    var l = means.length;\n\t    for (var i = 0; i < l; i++) {\n\t        sum += samples[i] * means[i];\n\t        n += samples[i];\n\t    }\n\t    return sum / n;\n\t};\n\t\n\t/**\n\t * Computes the truncated mean of the given values using a given percentage\n\t * @param {Array} values\n\t * @param {number} percent - The percentage of values to keep (range: [0,1])\n\t * @param {boolean} [alreadySorted=false]\n\t * @returns {number}\n\t */\n\texports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n\t    if (alreadySorted === undefined) alreadySorted = false;\n\t    if (!alreadySorted) {\n\t        values = values.slice().sort(compareNumbers);\n\t    }\n\t    var l = values.length;\n\t    var k = Math.floor(l * percent);\n\t    var sum = 0;\n\t    for (var i = k; i < (l - k); i++) {\n\t        sum += values[i];\n\t    }\n\t    return sum / (l - 2 * k);\n\t};\n\t\n\t/**\n\t * Computes the harmonic mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.harmonicMean = function harmonicMean(values) {\n\t    var sum = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        if (values[i] === 0) {\n\t            throw new RangeError('value at index ' + i + 'is zero');\n\t        }\n\t        sum += 1 / values[i];\n\t    }\n\t    return l / sum;\n\t};\n\t\n\t/**\n\t * Computes the contraharmonic mean of the given values\n\t * @param {Array} values\n\t * @returns {number}\n\t */\n\texports.contraHarmonicMean = function contraHarmonicMean(values) {\n\t    var r1 = 0;\n\t    var r2 = 0;\n\t    var l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        r1 += values[i] * values[i];\n\t        r2 += values[i];\n\t    }\n\t    if (r2 < 0) {\n\t        throw new RangeError('sum of values is negative');\n\t    }\n\t    return r1 / r2;\n\t};\n\t\n\t/**\n\t * Computes the median of the given values\n\t * @param {Array} values\n\t * @param {boolean} [alreadySorted=false]\n\t * @returns {number}\n\t */\n\texports.median = function median(values, alreadySorted) {\n\t    if (alreadySorted === undefined) alreadySorted = false;\n\t    if (!alreadySorted) {\n\t        values = values.slice().sort(compareNumbers);\n\t    }\n\t    var l = values.length;\n\t    var half = Math.floor(l / 2);\n\t    if (l % 2 === 0) {\n\t        return (values[half - 1] + values[half]) * 0.5;\n\t    } else {\n\t        return values[half];\n\t    }\n\t};\n\t\n\t/**\n\t * Computes the variance of the given values\n\t * @param {Array} values\n\t * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n\t * @returns {number}\n\t */\n\texports.variance = function variance(values, unbiased) {\n\t    if (unbiased === undefined) unbiased = true;\n\t    var theMean = exports.mean(values);\n\t    var theVariance = 0;\n\t    var l = values.length;\n\t\n\t    for (var i = 0; i < l; i++) {\n\t        var x = values[i] - theMean;\n\t        theVariance += x * x;\n\t    }\n\t\n\t    if (unbiased) {\n\t        return theVariance / (l - 1);\n\t    } else {\n\t        return theVariance / l;\n\t    }\n\t};\n\t\n\t/**\n\t * Computes the standard deviation of the given values\n\t * @param {Array} values\n\t * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n\t * @returns {number}\n\t */\n\texports.standardDeviation = function standardDeviation(values, unbiased) {\n\t    return Math.sqrt(exports.variance(values, unbiased));\n\t};\n\t\n\texports.standardError = function standardError(values) {\n\t    return exports.standardDeviation(values) / Math.sqrt(values.length);\n\t};\n\t\n\texports.quartiles = function quartiles(values, alreadySorted) {\n\t    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n\t    if (!alreadySorted) {\n\t        values = values.slice();\n\t        values.sort(compareNumbers);\n\t    }\n\t\n\t    var quart = values.length / 4;\n\t    var q1 = values[Math.ceil(quart) - 1];\n\t    var q2 = exports.median(values, true);\n\t    var q3 = values[Math.ceil(quart * 3) - 1];\n\t\n\t    return {q1: q1, q2: q2, q3: q3};\n\t};\n\t\n\texports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n\t    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n\t};\n\t\n\texports.pooledVariance = function pooledVariance(samples, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var sum = 0;\n\t    var length = 0, l = samples.length;\n\t    for (var i = 0; i < l; i++) {\n\t        var values = samples[i];\n\t        var vari = exports.variance(values);\n\t\n\t        sum += (values.length - 1) * vari;\n\t\n\t        if (unbiased)\n\t            length += values.length - 1;\n\t        else\n\t            length += values.length;\n\t    }\n\t    return sum / length;\n\t};\n\t\n\texports.mode = function mode(values) {\n\t    var l = values.length,\n\t        itemCount = new Array(l),\n\t        i;\n\t    for (i = 0; i < l; i++) {\n\t        itemCount[i] = 0;\n\t    }\n\t    var itemArray = new Array(l);\n\t    var count = 0;\n\t\n\t    for (i = 0; i < l; i++) {\n\t        var index = itemArray.indexOf(values[i]);\n\t        if (index >= 0)\n\t            itemCount[index]++;\n\t        else {\n\t            itemArray[count] = values[i];\n\t            itemCount[count] = 1;\n\t            count++;\n\t        }\n\t    }\n\t\n\t    var maxValue = 0, maxIndex = 0;\n\t    for (i = 0; i < count; i++) {\n\t        if (itemCount[i] > maxValue) {\n\t            maxValue = itemCount[i];\n\t            maxIndex = i;\n\t        }\n\t    }\n\t\n\t    return itemArray[maxIndex];\n\t};\n\t\n\texports.covariance = function covariance(vector1, vector2, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var mean1 = exports.mean(vector1);\n\t    var mean2 = exports.mean(vector2);\n\t\n\t    if (vector1.length !== vector2.length)\n\t        throw \"Vectors do not have the same dimensions\";\n\t\n\t    var cov = 0, l = vector1.length;\n\t    for (var i = 0; i < l; i++) {\n\t        var x = vector1[i] - mean1;\n\t        var y = vector2[i] - mean2;\n\t        cov += x * y;\n\t    }\n\t\n\t    if (unbiased)\n\t        return cov / (l - 1);\n\t    else\n\t        return cov / l;\n\t};\n\t\n\texports.skewness = function skewness(values, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var theMean = exports.mean(values);\n\t\n\t    var s2 = 0, s3 = 0, l = values.length;\n\t    for (var i = 0; i < l; i++) {\n\t        var dev = values[i] - theMean;\n\t        s2 += dev * dev;\n\t        s3 += dev * dev * dev;\n\t    }\n\t    var m2 = s2 / l;\n\t    var m3 = s3 / l;\n\t\n\t    var g = m3 / (Math.pow(m2, 3 / 2.0));\n\t    if (unbiased) {\n\t        var a = Math.sqrt(l * (l - 1));\n\t        var b = l - 2;\n\t        return (a / b) * g;\n\t    }\n\t    else {\n\t        return g;\n\t    }\n\t};\n\t\n\texports.kurtosis = function kurtosis(values, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var theMean = exports.mean(values);\n\t    var n = values.length, s2 = 0, s4 = 0;\n\t\n\t    for (var i = 0; i < n; i++) {\n\t        var dev = values[i] - theMean;\n\t        s2 += dev * dev;\n\t        s4 += dev * dev * dev * dev;\n\t    }\n\t    var m2 = s2 / n;\n\t    var m4 = s4 / n;\n\t\n\t    if (unbiased) {\n\t        var v = s2 / (n - 1);\n\t        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n\t        var b = s4 / (v * v);\n\t        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\t\n\t        return a * b - 3 * c;\n\t    }\n\t    else {\n\t        return m4 / (m2 * m2) - 3;\n\t    }\n\t};\n\t\n\texports.entropy = function entropy(values, eps) {\n\t    if (typeof(eps) === 'undefined') eps = 0;\n\t    var sum = 0, l = values.length;\n\t    for (var i = 0; i < l; i++)\n\t        sum += values[i] * Math.log(values[i] + eps);\n\t    return -sum;\n\t};\n\t\n\texports.weightedMean = function weightedMean(values, weights) {\n\t    var sum = 0, l = values.length;\n\t    for (var i = 0; i < l; i++)\n\t        sum += values[i] * weights[i];\n\t    return sum;\n\t};\n\t\n\texports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n\t    return Math.sqrt(exports.weightedVariance(values, weights));\n\t};\n\t\n\texports.weightedVariance = function weightedVariance(values, weights) {\n\t    var theMean = exports.weightedMean(values, weights);\n\t    var vari = 0, l = values.length;\n\t    var a = 0, b = 0;\n\t\n\t    for (var i = 0; i < l; i++) {\n\t        var z = values[i] - theMean;\n\t        var w = weights[i];\n\t\n\t        vari += w * (z * z);\n\t        b += w;\n\t        a += w * w;\n\t    }\n\t\n\t    return vari * (b / (b * b - a));\n\t};\n\t\n\texports.center = function center(values, inPlace) {\n\t    if (typeof(inPlace) === 'undefined') inPlace = false;\n\t\n\t    var result = values;\n\t    if (!inPlace)\n\t        result = values.slice();\n\t\n\t    var theMean = exports.mean(result), l = result.length;\n\t    for (var i = 0; i < l; i++)\n\t        result[i] -= theMean;\n\t};\n\t\n\texports.standardize = function standardize(values, standardDev, inPlace) {\n\t    if (typeof(standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n\t    if (typeof(inPlace) === 'undefined') inPlace = false;\n\t    var l = values.length;\n\t    var result = inPlace ? values : new Array(l);\n\t    for (var i = 0; i < l; i++)\n\t        result[i] = values[i] / standardDev;\n\t    return result;\n\t};\n\t\n\texports.cumulativeSum = function cumulativeSum(array) {\n\t    var l = array.length;\n\t    var result = new Array(l);\n\t    result[0] = array[0];\n\t    for (var i = 1; i < l; i++)\n\t        result[i] = result[i - 1] + array[i];\n\t    return result;\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar arrayStat = __webpack_require__(8);\n\t\n\t// https://github.com/accord-net/framework/blob/development/Sources/Accord.Statistics/Tools.cs\n\t\n\tfunction entropy(matrix, eps) {\n\t    if (typeof(eps) === 'undefined') {\n\t        eps = 0;\n\t    }\n\t    var sum = 0,\n\t        l1 = matrix.length,\n\t        l2 = matrix[0].length;\n\t    for (var i = 0; i < l1; i++) {\n\t        for (var j = 0; j < l2; j++) {\n\t            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n\t        }\n\t    }\n\t    return -sum;\n\t}\n\t\n\tfunction mean(matrix, dimension) {\n\t    if (typeof(dimension) === 'undefined') {\n\t        dimension = 0;\n\t    }\n\t    var rows = matrix.length,\n\t        cols = matrix[0].length,\n\t        theMean, N, i, j;\n\t\n\t    if (dimension === -1) {\n\t        theMean = [0];\n\t        N = rows * cols;\n\t        for (i = 0; i < rows; i++) {\n\t            for (j = 0; j < cols; j++) {\n\t                theMean[0] += matrix[i][j];\n\t            }\n\t        }\n\t        theMean[0] /= N;\n\t    } else if (dimension === 0) {\n\t        theMean = new Array(cols);\n\t        N = rows;\n\t        for (j = 0; j < cols; j++) {\n\t            theMean[j] = 0;\n\t            for (i = 0; i < rows; i++) {\n\t                theMean[j] += matrix[i][j];\n\t            }\n\t            theMean[j] /= N;\n\t        }\n\t    } else if (dimension === 1) {\n\t        theMean = new Array(rows);\n\t        N = cols;\n\t        for (j = 0; j < rows; j++) {\n\t            theMean[j] = 0;\n\t            for (i = 0; i < cols; i++) {\n\t                theMean[j] += matrix[j][i];\n\t            }\n\t            theMean[j] /= N;\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t    return theMean;\n\t}\n\t\n\tfunction standardDeviation(matrix, means, unbiased) {\n\t    var vari = variance(matrix, means, unbiased), l = vari.length;\n\t    for (var i = 0; i < l; i++) {\n\t        vari[i] = Math.sqrt(vari[i]);\n\t    }\n\t    return vari;\n\t}\n\t\n\tfunction variance(matrix, means, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') {\n\t        unbiased = true;\n\t    }\n\t    means = means || mean(matrix);\n\t    var rows = matrix.length;\n\t    if (rows === 0) return [];\n\t    var cols = matrix[0].length;\n\t    var vari = new Array(cols);\n\t\n\t    for (var j = 0; j < cols; j++) {\n\t        var sum1 = 0, sum2 = 0, x = 0;\n\t        for (var i = 0; i < rows; i++) {\n\t            x = matrix[i][j] - means[j];\n\t            sum1 += x;\n\t            sum2 += x * x;\n\t        }\n\t        if (unbiased) {\n\t            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n\t        } else {\n\t            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n\t        }\n\t    }\n\t    return vari;\n\t}\n\t\n\tfunction median(matrix) {\n\t    var rows = matrix.length, cols = matrix[0].length;\n\t    var medians = new Array(cols);\n\t\n\t    for (var i = 0; i < cols; i++) {\n\t        var data = new Array(rows);\n\t        for (var j = 0; j < rows; j++) {\n\t            data[j] = matrix[j][i];\n\t        }\n\t        data.sort();\n\t        var N = data.length;\n\t        if (N % 2 === 0) {\n\t            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n\t        } else {\n\t            medians[i] = data[Math.floor(N / 2)];\n\t        }\n\t    }\n\t    return medians;\n\t}\n\t\n\tfunction mode(matrix) {\n\t    var rows = matrix.length,\n\t        cols = matrix[0].length,\n\t        modes = new Array(cols),\n\t        i, j;\n\t    for (i = 0; i < cols; i++) {\n\t        var itemCount = new Array(rows);\n\t        for (var k = 0; k < rows; k++) {\n\t            itemCount[k] = 0;\n\t        }\n\t        var itemArray = new Array(rows);\n\t        var count = 0;\n\t\n\t        for (j = 0; j < rows; j++) {\n\t            var index = itemArray.indexOf(matrix[j][i]);\n\t            if (index >= 0) {\n\t                itemCount[index]++;\n\t            } else {\n\t                itemArray[count] = matrix[j][i];\n\t                itemCount[count] = 1;\n\t                count++;\n\t            }\n\t        }\n\t\n\t        var maxValue = 0, maxIndex = 0;\n\t        for (j = 0; j < count; j++) {\n\t            if (itemCount[j] > maxValue) {\n\t                maxValue = itemCount[j];\n\t                maxIndex = j;\n\t            }\n\t        }\n\t\n\t        modes[i] = itemArray[maxIndex];\n\t    }\n\t    return modes;\n\t}\n\t\n\tfunction skewness(matrix, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var means = mean(matrix);\n\t    var n = matrix.length, l = means.length;\n\t    var skew = new Array(l);\n\t\n\t    for (var j = 0; j < l; j++) {\n\t        var s2 = 0, s3 = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var dev = matrix[i][j] - means[j];\n\t            s2 += dev * dev;\n\t            s3 += dev * dev * dev;\n\t        }\n\t\n\t        var m2 = s2 / n;\n\t        var m3 = s3 / n;\n\t        var g = m3 / Math.pow(m2, 3 / 2);\n\t\n\t        if (unbiased) {\n\t            var a = Math.sqrt(n * (n - 1));\n\t            var b = n - 2;\n\t            skew[j] = (a / b) * g;\n\t        } else {\n\t            skew[j] = g;\n\t        }\n\t    }\n\t    return skew;\n\t}\n\t\n\tfunction kurtosis(matrix, unbiased) {\n\t    if (typeof(unbiased) === 'undefined') unbiased = true;\n\t    var means = mean(matrix);\n\t    var n = matrix.length, m = matrix[0].length;\n\t    var kurt = new Array(m);\n\t\n\t    for (var j = 0; j < m; j++) {\n\t        var s2 = 0, s4 = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var dev = matrix[i][j] - means[j];\n\t            s2 += dev * dev;\n\t            s4 += dev * dev * dev * dev;\n\t        }\n\t        var m2 = s2 / n;\n\t        var m4 = s4 / n;\n\t\n\t        if (unbiased) {\n\t            var v = s2 / (n - 1);\n\t            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n\t            var b = s4 / (v * v);\n\t            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\t            kurt[j] = a * b - 3 * c;\n\t        } else {\n\t            kurt[j] = m4 / (m2 * m2) - 3;\n\t        }\n\t    }\n\t    return kurt;\n\t}\n\t\n\tfunction standardError(matrix) {\n\t    var samples = matrix.length;\n\t    var standardDeviations = standardDeviation(matrix), l = standardDeviations.length;\n\t    var standardErrors = new Array(l);\n\t    var sqrtN = Math.sqrt(samples);\n\t\n\t    for (var i = 0; i < l; i++) {\n\t        standardErrors[i] = standardDeviations[i] / sqrtN;\n\t    }\n\t    return standardErrors;\n\t}\n\t\n\tfunction covariance(matrix, dimension) {\n\t    return scatter(matrix, undefined, dimension);\n\t}\n\t\n\tfunction scatter(matrix, divisor, dimension) {\n\t    if (typeof(dimension) === 'undefined') {\n\t        dimension = 0;\n\t    }\n\t    if (typeof(divisor) === 'undefined') {\n\t        if (dimension === 0) {\n\t            divisor = matrix.length - 1;\n\t        } else if (dimension === 1) {\n\t            divisor = matrix[0].length - 1;\n\t        }\n\t    }\n\t    var means = mean(matrix, dimension),\n\t        rows = matrix.length;\n\t    if (rows === 0) {\n\t        return [[]];\n\t    }\n\t    var cols = matrix[0].length,\n\t        cov, i, j, s, k;\n\t\n\t    if (dimension === 0) {\n\t        cov = new Array(cols);\n\t        for (i = 0; i < cols; i++) {\n\t            cov[i] = new Array(cols);\n\t        }\n\t        for (i = 0; i < cols; i++) {\n\t            for (j = i; j < cols; j++) {\n\t                s = 0;\n\t                for (k = 0; k < rows; k++) {\n\t                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n\t                }\n\t                s /= divisor;\n\t                cov[i][j] = s;\n\t                cov[j][i] = s;\n\t            }\n\t        }\n\t    } else if (dimension === 1) {\n\t        cov = new Array(rows);\n\t        for (i = 0; i < rows; i++) {\n\t            cov[i] = new Array(rows);\n\t        }\n\t        for (i = 0; i < rows; i++) {\n\t            for (j = i; j < rows; j++) {\n\t                s = 0;\n\t                for (k = 0; k < cols; k++) {\n\t                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n\t                }\n\t                s /= divisor;\n\t                cov[i][j] = s;\n\t                cov[j][i] = s;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t\n\t    return cov;\n\t}\n\t\n\tfunction correlation(matrix) {\n\t    var means = mean(matrix),\n\t        standardDeviations = standardDeviation(matrix, true, means),\n\t        scores = zScores(matrix, means, standardDeviations),\n\t        rows = matrix.length,\n\t        cols = matrix[0].length,\n\t        i, j;\n\t\n\t    var cor = new Array(cols);\n\t    for (i = 0; i < cols; i++) {\n\t        cor[i] = new Array(cols);\n\t    }\n\t    for (i = 0; i < cols; i++) {\n\t        for (j = i; j < cols; j++) {\n\t            var c = 0;\n\t            for (var k = 0, l = scores.length; k < l; k++) {\n\t                c += scores[k][j] * scores[k][i];\n\t            }\n\t            c /= rows - 1;\n\t            cor[i][j] = c;\n\t            cor[j][i] = c;\n\t        }\n\t    }\n\t    return cor;\n\t}\n\t\n\tfunction zScores(matrix, means, standardDeviations) {\n\t    means = means || mean(matrix);\n\t    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix, true, means);\n\t    return standardize(center(matrix, means, false), standardDeviations, true);\n\t}\n\t\n\tfunction center(matrix, means, inPlace) {\n\t    means = means || mean(matrix);\n\t    var result = matrix,\n\t        l = matrix.length,\n\t        i, j, jj;\n\t\n\t    if (!inPlace) {\n\t        result = new Array(l);\n\t        for (i = 0; i < l; i++) {\n\t            result[i] = new Array(matrix[i].length);\n\t        }\n\t    }\n\t\n\t    for (i = 0; i < l; i++) {\n\t        var row = result[i];\n\t        for (j = 0, jj = row.length; j < jj; j++) {\n\t            row[j] = matrix[i][j] - means[j];\n\t        }\n\t    }\n\t    return result;\n\t}\n\t\n\tfunction standardize(matrix, standardDeviations, inPlace) {\n\t    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix);\n\t    var result = matrix,\n\t        l = matrix.length,\n\t        i, j, jj;\n\t\n\t    if (!inPlace) {\n\t        result = new Array(l);\n\t        for (i = 0; i < l; i++) {\n\t            result[i] = new Array(matrix[i].length);\n\t        }\n\t    }\n\t\n\t    for (i = 0; i < l; i++) {\n\t        var resultRow = result[i];\n\t        var sourceRow = matrix[i];\n\t        for (j = 0, jj = resultRow.length; j < jj; j++) {\n\t            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n\t                resultRow[j] = sourceRow[j] / standardDeviations[j];\n\t            }\n\t        }\n\t    }\n\t    return result;\n\t}\n\t\n\tfunction weightedVariance(matrix, weights) {\n\t    var means = mean(matrix);\n\t    var rows = matrix.length;\n\t    if (rows === 0) return [];\n\t    var cols = matrix[0].length;\n\t    var vari = new Array(cols);\n\t\n\t    for (var j = 0; j < cols; j++) {\n\t        var sum = 0;\n\t        var a = 0, b = 0;\n\t\n\t        for (var i = 0; i < rows; i++) {\n\t            var z = matrix[i][j] - means[j];\n\t            var w = weights[i];\n\t\n\t            sum += w * (z * z);\n\t            b += w;\n\t            a += w * w;\n\t        }\n\t\n\t        vari[j] = sum * (b / (b * b - a));\n\t    }\n\t\n\t    return vari;\n\t}\n\t\n\tfunction weightedMean(matrix, weights, dimension) {\n\t    if (typeof(dimension) === 'undefined') {\n\t        dimension = 0;\n\t    }\n\t    var rows = matrix.length;\n\t    if (rows === 0) return [];\n\t    var cols = matrix[0].length,\n\t        means, i, ii, j, w, row;\n\t\n\t    if (dimension === 0) {\n\t        means = new Array(cols);\n\t        for (i = 0; i < cols; i++) {\n\t            means[i] = 0;\n\t        }\n\t        for (i = 0; i < rows; i++) {\n\t            row = matrix[i];\n\t            w = weights[i];\n\t            for (j = 0; j < cols; j++) {\n\t                means[j] += row[j] * w;\n\t            }\n\t        }\n\t    } else if (dimension === 1) {\n\t        means = new Array(rows);\n\t        for (i = 0; i < rows; i++) {\n\t            means[i] = 0;\n\t        }\n\t        for (j = 0; j < rows; j++) {\n\t            row = matrix[j];\n\t            w = weights[j];\n\t            for (i = 0; i < cols; i++) {\n\t                means[j] += row[i] * w;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t\n\t    var weightSum = arrayStat.sum(weights);\n\t    if (weightSum !== 0) {\n\t        for (i = 0, ii = means.length; i < ii; i++) {\n\t            means[i] /= weightSum;\n\t        }\n\t    }\n\t    return means;\n\t}\n\t\n\tfunction weightedCovariance(matrix, weights, means, dimension) {\n\t    dimension = dimension || 0;\n\t    means = means || weightedMean(matrix, weights, dimension);\n\t    var s1 = 0, s2 = 0;\n\t    for (var i = 0, ii = weights.length; i < ii; i++) {\n\t        s1 += weights[i];\n\t        s2 += weights[i] * weights[i];\n\t    }\n\t    var factor = s1 / (s1 * s1 - s2);\n\t    return weightedScatter(matrix, weights, means, factor, dimension);\n\t}\n\t\n\tfunction weightedScatter(matrix, weights, means, factor, dimension) {\n\t    dimension = dimension || 0;\n\t    means = means || weightedMean(matrix, weights, dimension);\n\t    if (typeof(factor) === 'undefined') {\n\t        factor = 1;\n\t    }\n\t    var rows = matrix.length;\n\t    if (rows === 0) {\n\t        return [[]];\n\t    }\n\t    var cols = matrix[0].length,\n\t        cov, i, j, k, s;\n\t\n\t    if (dimension === 0) {\n\t        cov = new Array(cols);\n\t        for (i = 0; i < cols; i++) {\n\t            cov[i] = new Array(cols);\n\t        }\n\t        for (i = 0; i < cols; i++) {\n\t            for (j = i; j < cols; j++) {\n\t                s = 0;\n\t                for (k = 0; k < rows; k++) {\n\t                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n\t                }\n\t                cov[i][j] = s * factor;\n\t                cov[j][i] = s * factor;\n\t            }\n\t        }\n\t    } else if (dimension === 1) {\n\t        cov = new Array(rows);\n\t        for (i = 0; i < rows; i++) {\n\t            cov[i] = new Array(rows);\n\t        }\n\t        for (i = 0; i < rows; i++) {\n\t            for (j = i; j < rows; j++) {\n\t                s = 0;\n\t                for (k = 0; k < cols; k++) {\n\t                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n\t                }\n\t                cov[i][j] = s * factor;\n\t                cov[j][i] = s * factor;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Invalid dimension');\n\t    }\n\t\n\t    return cov;\n\t}\n\t\n\tmodule.exports = {\n\t    entropy: entropy,\n\t    mean: mean,\n\t    standardDeviation: standardDeviation,\n\t    variance: variance,\n\t    median: median,\n\t    mode: mode,\n\t    skewness: skewness,\n\t    kurtosis: kurtosis,\n\t    standardError: standardError,\n\t    covariance: covariance,\n\t    scatter: scatter,\n\t    correlation: correlation,\n\t    zScores: zScores,\n\t    center: center,\n\t    standardize: standardize,\n\t    weightedVariance: weightedVariance,\n\t    weightedMean: weightedMean,\n\t    weightedCovariance: weightedCovariance,\n\t    weightedScatter: weightedScatter\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\n\tvar Similarity = __webpack_require__(6);\n\t\n\tfunction SimilarityProcessor(experimental, options) {\n\t    // we will copy the options to be sure ...\n\t    this.options=Object.create(options || {});\n\t\n\t    this.widthFunction=undefined;\n\t    if (this.options.widthFunction) {\n\t         this.widthFunction = new Function('mass', 'charge',\n\t            this.options.widthFunction + \";\"+\n\t            \"return {widthBottom: widthBottom, widthTop: widthTop};\"\n\t         );\n\t    }\n\t\n\t    this.similarity = new Similarity({\n\t        widthTop: this.options.widthTop,\n\t        widthBottom: this.options.widthBottom,\n\t        common: this.options.common\n\t    });\n\t    this.similarity.setPeaks1(experimental);\n\t}\n\t\n\tSimilarityProcessor.prototype.process = function (spectrum, from, to) {\n\t\n\t    if (this.widthFunction) {\n\t        var width=this.widthFunction(spectrum[0][0])\n\t        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n\t    }\n\t\n\t    return this.similarity.fastSimilarity(spectrum, from, to);\n\t};\n\t\n\tmodule.exports = SimilarityProcessor;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CC = __webpack_require__(1);\n\tvar SimilarityProcessor = __webpack_require__(10);\n\tvar Stat = __webpack_require__(7).array;\n\t\n\t/*\n\toptions:\n\t  * before (default : 0.5)\n\t  * width (default : theoretical + 1)\n\t  * common\n\t  * widthBottom\n\t  * widthTop\n\t  * widthFunction\n\t */\n\t\n\tfunction MFSimilarityProcessor(experimental, mf, options) {\n\t    SimilarityProcessor.call(this, experimental, options);\n\t\n\t    // we calculate the theoretical spectrum, normalize (sum to 1) it\n\t    this.theoretical=CC.analyseMF(mf, {isotopomers:'arrayXXYY'}).arrayXXYY;\n\t    var xTheoretical=this.theoretical[0];\n\t    var yTheoretical=this.theoretical[1];\n\t    var sumY=Stat.sum(yTheoretical);\n\t    for (var i=0; i<yTheoretical.length; i++) {\n\t        yTheoretical[i]/=sumY;\n\t    }\n\t\n\t    if (!this.options.before) this.options.before=0.5;\n\t    if (!this.options.width) this.options.width=xTheoretical[xTheoretical.length]-xTheoretical[0]+0.5;\n\t}\n\t\n\tMFSimilarityProcessor.prototype.process = function (firstX) {\n\t    if (this.widthFunction) {\n\t        var width=this.widthFunction(spectrum[0][0])\n\t        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n\t    }\n\t\n\t    var xTheoretical=this.theoretical[0];\n\t    var yTheoretical=this.theoretical[1];\n\t    var shift=-xTheoretical[0]+firstX;\n\t    for (var i=0; i<yTheoretical.length; i++) {\n\t        xTheoretical[i]+=shift;\n\t    }\n\t\n\t    var from=firstX-this.options.before;\n\t    var to=firstX+this.options.width;\n\t\n\t    return this.similarity.fastSimilarity(this.theoretical, from, to);\n\t};\n\t\n\tmodule.exports = MFSimilarityProcessor;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Stat=__webpack_require__(7);\n\t\n\tmodule.exports=massPeakPicking;\n\t\n\t\n\tfunction massPeakPicking(x, y) {\n\t\n\t// we calculate the noise\n\t    var noiseLevel=Stat.array.median(y.filter(function(a) {return (a>0)}))*3;\n\t\n\t    return gsd(x, y, {\n\t        noiseLevel: noiseLevel\n\t    });\n\t}\n\t\n\tfunction gsd(x, y, options){\n\t    options=options || {};\n\t    if (options.minMaxRatio===undefined) options.minMaxRatio=0.00025;\n\t    if (options.noiseLevel===undefined) options.noiseLevel=0;;\n\t\n\t    if (options.noiseLevel>0) {\n\t        y=[].concat(y);\n\t        for (var i=0; i<y.length; i++){\n\t            if(Math.abs(y[i])<options.noiseLevel) {\n\t                y[i]=0;\n\t            }\n\t        }\n\t    }\n\t\n\t    // fill convolution frequency axis\n\t    var X = [];//x[2:(x.length-2)];\n\t\n\t    // fill Savitzky-Golay polynomes\n\t    var size= x.length-4;\n\t    var Y = new Array(size);\n\t    var dY = new Array(size);\n\t    var ddY = new Array(size);\n\t\n\t    //var dx = x[1]-x[0];\n\t\n\t    for (var j = 2; j < size+2; j++) {\n\t        var dx = x[j]-x[j-1];\n\t        Y[j-2]=(1/35.0)*(-3*y[j-2] + 12*y[j-1] + 17*y[j] + 12*y[j+1] - 3*y[j+2]);\n\t        X[j-2]=x[j];\n\t        dY[j-2]=(1/(12*dx))*(y[j-2] - 8*y[j-1] + 8*y[j+1] - y[j+2]);\n\t        ddY[j-2]=(1/(7*dx*dx))*(2*y[j-2] - y[j-1] - 2*y[j] - y[j+1] + 2*y[j+2]);\n\t    }\n\t\n\t    var maxDdy=0;\n\t    //console.log(Y.length);\n\t    for (var i = 0; i < Y.length ; i++){\n\t        if(Math.abs(ddY[i])>maxDdy){\n\t            maxDdy = Math.abs(ddY[i]);\n\t        }\n\t    }\n\t    //console.log(maxY+\"x\"+maxDy+\"x\"+maxDdy);\n\t    var minddY = [];\n\t    var intervals = [];\n\t    var stackInt = [];\n\t    for (var i = 1; i < Y.length -1 ; i++){\n\t        if ((dY[i] < dY[i-1]) && (dY[i] <= dY[i+1])||\n\t            (dY[i] <= dY[i-1]) && (dY[i] < dY[i+1])) {\n\t            //console.log(X[i])\n\t            stackInt.push(X[i]);\n\t        }\n\t\n\t        if ((dY[i] >= dY[i-1]) && (dY[i] > dY[i+1])||\n\t            (dY[i] > dY[i-1]) && (dY[i] >= dY[i+1])) {\n\t            try{\n\t                intervals.push( [X[i] , stackInt.pop()] );\n\t            }\n\t            catch(e){\n\t                console.log(\"Error I don't know why \"+e);\n\t            }\n\t        }\n\t\n\t        if ((ddY[i] < ddY[i-1]) && (ddY[i] < ddY[i+1])) {\n\t            minddY.push( [X[i], Y[i], i] );  // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n\t        }\n\t    }\n\t\n\t\n\t    var signals = [];\n\t\n\t    Y.sort(function(a, b){return b-a});\n\t\n\t    for (var j = 0; j < minddY.length; j++){\n\t        var f = minddY[j];\n\t        var frequency = f[0];\n\t        var possible = [];\n\t        for (var k=0; k<intervals.length; k++){\n\t            var i = intervals[k];\n\t            if(Math.abs(frequency-(i[0]+i[1])/2)<Math.abs(i[0]-i[1])/2)\n\t                possible.push(i);\n\t        }\n\t        //console.log(possible);\n\t        //console.log(\"possible \"+possible.length);\n\t        if (possible.length > 0)\n\t            if (possible.length == 1)\n\t            {\n\t                var inter = possible[0];\n\t                var linewidth = Math.abs(inter[1] - inter[0]);\n\t                var height = f[1];\n\t                //console.log(height, options.minMaxRatio, Y[0]);\n\t                if (Math.abs(height) > options.minMaxRatio*Y[0]) {\n\t                    signals.push({\n\t                        x: frequency,\n\t                        y: height,\n\t                        width: linewidth\n\t                    })\n\t                }\n\t            }\n\t            else\n\t            {\n\t                //TODO: nested peaks\n\t                //console.log(\"Nested \"+possible);\n\t            }\n\t    }\n\t\n\t    signals.sort(function (a, b) {\n\t        return a.x - b.x;\n\t    });\n\t\n\t    return signals;\n\t}\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** chemcalc-extended.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 020333c991dafa31ddcf\n **/","'use strict';\n\n\nvar CC = require('chemcalc');\nvar PEP = require('peptide');\nvar MfProcessor = exports.MfProcessor = require('./MfProcessor');\nexports.SimilarityProcessor = require('./SimilarityProcessor');\nexports.MFSimilarityProcessor = require('./MFSimilarityProcessor');\n\nvar massPeakPicking = require('./massPeakPicking');\n\nvar CE = exports;\n\nCE.analyseMF = CC.analyseMF;\nCE.getInfo = CC.getInfo;\nCE.mfFromMonoisotopicMass = CC.mfFromMonoisotopicMass;\n\n/*\n mfFromMonoisotopicMassSimilarity\n We will extend mfFromMonoisotopicMass in order to include in the options:\n * experimental : an array of [[x1,y1],[x2,y2],...] or [[x1,x2,x3,...][y1,y2,y3,...]]\n * widthTop : top width of the trapezoid\n * widthBottom : bottom width of the trapezoid\n * from : mass \"from\" which calculate the similarity\n * to : mass \"to\" which calculate the similarity\n * As an alternative the from / to parameters can be calculated based target mass\n *\n * decimalsPPM : number of decimals for PPM\n * decimalsMass : number odecimals for the mass\n */\nCE.mfFromMonoisotopicMassSimilarity = function (mass, experimental, options) {\n    var mfResults = CC.mfFromMonoisotopicMass(mass, options);\n\n    var processor = new MfProcessor(experimental, options);\n\n\n    var results = mfResults.results;\n    for (var i = 0; i < results.length; i++) {\n        var result = results[i];\n        processor.process(result.mf.value, result);\n    }\n    mfResults.extractExperimental = processor.similarity.getExtract1();\n    return mfResults;\n};\n\n\nCE.matchMFs = function (mfsArray, experimental, options) {\n    options = options || {};\n    options.addExperimentalExtract = true;\n    options.maxResults = options.maxResults || 500;\n    options.minSimilarity = (isNaN(options.minSimilarity)) ? 50 : options.minSimilarity;\n\n    var processor = new MfProcessor(experimental, options);\n    var mfs = CE.combineMFs(mfsArray);\n\n    var results = [];\n    for (var i = 0; i < mfs.length; i++) {\n        var result = processor.process(mfs[i].mf);\n        results.push(result);\n        result.parts = mfs[i];\n        if (results.length > options.maxResults * 2) {\n            results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n        }\n    }\n    results = CE.bestResults(results, options.bestOf, options.maxResults, options.minSimilarity);\n    return {options: options, results: results};\n};\n\n/* we have 2 criteria to find the best results\n 1. best match per zone based on the bestOf parameter\n 2. maxResults : maximal number of results\n */\nCE.bestResults = function (results, bestOf, maxResults, minSimilarity) {\n    var newResults = [];\n\n    // in order to find the bestOf we will sort by similarity and take all of them for which there is nothing in a range\n    // of the bestOf range\n\n    results.sort(function (a, b) {\n        return b.similarity - a.similarity;\n    });\n\n    if (minSimilarity) {\n        for (var i = 0; i < results.length; i++) {\n            if (results[i].similarity < minSimilarity) {\n                results = results.slice(0, i);\n                break;\n            }\n        }\n    }\n\n    if (bestOf) {\n        for (var i = 0; i < results.length && newResults.length < maxResults; i++) {\n            for (var j = 0; j < newResults.length; j++) {\n                if (Math.abs(newResults[j].msem - results[i].msem) < (bestOf / (results[i].charge || 1))) {\n                    break;\n                }\n            }\n            if (j == newResults.length) {\n                newResults.push(results[i]);\n            }\n        }\n    } else {\n        newResults = results.slice(0, maxResults);\n    }\n\n    return newResults;\n};\n\n\nCE.getEutrophicationPotential = function (mf) {\n    var chemcalc = CC.analyseMF(mf);\n    var atoms = chemcalc.parts[0].ea;\n    var mw = chemcalc.mw;\n    var nC = 0, nO = 0, nN = 0, nP = 0, nH = 0;\n    for (var i = 0; i < atoms.length; i++) {\n        var atom = atoms[i];\n        switch (atom.element) {\n            case 'C':\n                nC = atom.number;\n                break;\n            case 'N':\n                nN = atom.number;\n                break;\n            case 'O':\n                nO = atom.number;\n                break;\n            case 'H':\n                nH = atom.number;\n                break;\n            case 'P':\n                nP = atom.number;\n                break;\n            default:\n                return {log: 'EP can not be calculated because the MF contains the element: ' + atom.element};\n        }\n    }\n\n    var vRef = 1;\n    var mwRef = 94.97;\n\n    var thOD = nC + (nH - 3 * nN) / 4 - nO / 2;\n    var v = nP + nN / 16 + thOD / 138;\n    var ep = (v / mw) / (vRef / mwRef);\n\n    return {\n        v: v,\n        thOD: thOD,\n        ep: ep,\n        mf: {type: 'mf', value: mf},\n        mw: chemcalc.mw,\n        log: 'Successful calculation'\n    };\n};\n\n\nCE.convertAASequence = function (sequence) {\n    return PEP.convertAASequence(sequence);\n}\n\nCE.chargePeptide = function (sequence) {\n    return PEP.chargePeptide(sequence);\n}\n\n\nCE.generatePeptideFragments = function (sequence, options) {\n    return PEP.generatePeptideFragments(sequence, options);\n}\n\nCE.combineMFs = function (keys) {\n    function appendResult(results, currents, keys) {\n        // this script is designed to combine molecular formula\n        // that may contain comments after a \"$\" sign\n        // therefore we should put all the comments at the ned\n        var result = {mf: ''};\n        var comments = [];\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i][currents[i]];\n            if (key) {\n                result['part' + (i + 1)] = key;\n                if (key.indexOf('$') > -1) {\n                    comments.push(key.replace(/^[^$]*\\$/, ''));\n                    key = key.replace(/\\$.*/, '');\n                }\n                result.mf += key;\n            }\n        }\n\n        if (comments.length > 0) result.mf += '$' + comments.join(' ');\n\n        results.push(result);\n    }\n\n    if (!Array.isArray(keys)) return [];\n    if (!Array.isArray(keys[0])) keys = [keys];\n    var results = [];\n    var sizes = new Array(keys.length);\n    var currents = new Array(keys.length);\n    for (var i = 0; i < keys.length; i++) {\n        sizes[i] = keys[i].length - 1;\n        currents[i] = 0;\n    }\n    var position = 0;\n    var evolution = 0;\n\n    while (position < currents.length) {\n        if (currents[position] < sizes[position]) {\n            evolution++;\n            appendResult(results, currents, keys);\n            currents[position]++;\n            for (var i = 0; i < position; i++) {\n                currents[i] = 0;\n            }\n            position = 0;\n        } else {\n            position++;\n        }\n    }\n    appendResult(results, currents, keys);\n    return results;\n};\n\n\nCE.massPeakPicking = massPeakPicking;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * chemcalc - Analyse molecular formula\n * @version v3.0.6\n * @date 2015-09-03T07:03:35.477Z\n * @link http://www.chemcalc.org\n * @license BSD\n*/\n(function () {\n    'use strict';\n\n    function getExports($wnd) {\n\n        var $doc = $wnd.document;\n        var $gwt = {};\n        var navigator = {\n            userAgent: 'webkit'\n        };\n\n        function noop(){}\n\n        var __gwtModuleFunction = noop;\n        __gwtModuleFunction.__moduleStartupDone = noop;\n        var $sendStats = noop;\n        var $moduleName, $moduleBase;\n\n        // Start GWT code \nfunction Qg(){}\nfunction Lg(){}\nfunction db(){}\nfunction dd(){}\nfunction hc(){}\nfunction qc(){}\nfunction qp(){}\nfunction Xp(){}\nfunction cq(){}\nfunction eq(){}\nfunction Hr(){}\nfunction Hs(){}\nfunction il(a){}\nfunction yc(){tc()}\nfunction sb(){mb(this)}\nfunction Xo(){Oo(this)}\nfunction Xh(a){this.a=a}\nfunction Pc(a){this.a=a}\nfunction Yc(a){this.a=a}\nfunction hd(a){this.a=a}\nfunction ud(a){this.a=a}\nfunction fi(a){this.a=a}\nfunction Ri(a){this.a=a}\nfunction fj(a){this.a=a}\nfunction qn(a){this.a=a}\nfunction Nn(a){this.a=a}\nfunction Sn(a){this.a=a}\nfunction Wn(a){this.a=a}\nfunction _n(a){this.a=a}\nfunction In(a){this.c=a}\nfunction Bo(a){this.a=a}\nfunction Go(a){this.a=a}\nfunction Lo(a){this.a=a}\nfunction bu(a){this.a=a}\nfunction Oc(){this.a=[]}\nfunction pu(){this.nb()}\nfunction Oh(){return Kb}\nfunction Od(a){return a.a}\nfunction nd(a){return a.a}\nfunction zd(a){return a.a}\nfunction Uc(a){return a.a}\nfunction _c(a){return a.a}\nfunction gd(){return null}\nfunction Gd(){return null}\nfunction bn(a){++a.b;up(a)}\nfunction cn(a){--a.b;up(a)}\nfunction bh(a,b){a.h=b}\nfunction dh(a,b){a.l=b}\nfunction eh(a,b){a.m=b}\nfunction $h(){sb.call(this)}\nfunction dj(){sb.call(this)}\nfunction Bj(){sb.call(this)}\nfunction xk(){sb.call(this)}\nfunction vp(){sb.call(this)}\nfunction wp(){sb.call(this)}\nfunction Oq(){sb.call(this)}\nfunction Cq(){mq.call(this)}\nfunction Lq(){mq.call(this)}\nfunction dr(){Sq.call(this)}\nfunction ai(){$h.call(this)}\nfunction Pp(){Hp.call(this)}\nfunction Fs(){tr.call(this)}\nfunction Xb(){Tb();Ub(this)}\nfunction vb(){vb=Lg;ub=new db}\nfunction cd(){cd=Lg;bd=new dd}\nfunction ec(){ec=Lg;dc=new hc}\nfunction pp(){pp=Lg;op=new qp}\nfunction ku(){ku=Lg;ju=new zp}\nfunction Gu(){this.a=new Oc}\nfunction Mu(){this.a=new td}\nfunction Sq(){this.a=new Xo}\nfunction $r(){this.g=new tr}\nfunction Hp(){this.a=this.$()}\nfunction ad(a){tb.call(this,a)}\nfunction Zh(a){tb.call(this,a)}\nfunction _h(a){tb.call(this,a)}\nfunction bi(a){tb.call(this,a)}\nfunction cj(a){tb.call(this,a)}\nfunction Cj(a){tb.call(this,a)}\nfunction tb(a){rb.call(this,a)}\nfunction Dj(a){cj.call(this,a)}\nfunction nk(a){Xh.call(this,a)}\nfunction uk(a){Xh.call(this,a)}\nfunction yk(a){tb.call(this,a)}\nfunction mk(){Xh.call(this,'')}\nfunction sk(){Xh.call(this,'')}\nfunction tk(){Xh.call(this,'')}\nfunction td(){ud.call(this,{})}\nfunction Fr(a){Bo.call(this,a)}\nfunction wt(a){_r.call(this,a)}\nfunction It(a){rb.call(this,a)}\nfunction Xi(a){return isNaN(a)}\nfunction lr(a){return !!a&&a.b}\nfunction sj(a){return a<0?-a:a}\nfunction fe(a){return a<<24>>24}\nfunction Dd(a){return new hd(a)}\nfunction Fd(a){return new Id(a)}\nfunction Rd(a,b){return Di(a,b)}\nfunction Jj(a,b){return a===b}\nfunction wj(a,b){return a>b?a:b}\nfunction xj(a,b){return a<b?a:b}\nfunction Bp(b,a){return b.a[a]}\nfunction Qh(a){return a.tM===Qg}\nfunction qh(a,b){return !ph(a,b)}\nfunction rh(a,b){return !oh(a,b)}\nfunction mc(a,b){lc();kc.o(a,b)}\nfunction lq(c,a,b){c.a[a]=b}\nfunction lk(a,b){a.a+=b;return a}\nfunction pk(a,b){a.a+=b;return a}\nfunction qk(a,b){a.a+=b;return a}\nfunction ui(a){ti(a);return a.k}\nfunction _r(a){this.g=new ur(a)}\nfunction mq(){this.a=this.eb()}\nfunction rb(a){this.f=a;mb(this)}\nfunction Mh(){Kh==null&&(Kh=[])}\nfunction _p(){_p=Lg;$p=bq()}\nfunction hk(){hk=Lg;ek={};gk={}}\nfunction Qb(){Eb!=0&&(Eb=0);Hb=-1}\nfunction rj(a){return a<=0?0-a:a}\nfunction zr(a){return a.b=Gn(a.a)}\nfunction Us(a){return a.a.e*a.a.c}\nfunction Vs(a){return a.a.e*a.a.d}\nfunction Fn(a){return a.a<a.c.G()}\nfunction Ch(a){return a.l|a.m<<22}\nfunction Cd(a){return Xc(),a?Wc:Vc}\nfunction vo(a){return uo(a,fr(a))}\nfunction vj(a){return Math.log(a)}\nfunction tj(a){return Math.ceil(a)}\nfunction Aj(a){return Math.sqrt(a)}\nfunction ce(a){return be(a)&&Qh(a)}\nfunction so(a,b){return !!a.X(b)}\nfunction to(a,b){return Xm(a.X(b))}\nfunction Rq(a,b){return Qo(a.a,b)}\nfunction Cp(b,a){return b.a[a]||[]}\nfunction Wm(a){return !a?null:a.c}\nfunction tr(){ur.call(this,null)}\nfunction Or(a,b){Zi.call(this,a,b)}\nfunction Gm(a,b){Zi.call(this,a,b)}\nfunction lo(a,b){eo.call(this,a,b)}\nfunction eo(a,b){this.c=a;this.d=b}\nfunction Zi(a,b){this.a=a;this.b=b}\nfunction yq(a,b){this.a=a;this.b=b}\nfunction vq(a,b){this.b=a;this.c=b}\nfunction tp(a,b){a._gwt_modCount=b}\nfunction dp(a,b,c){a.splice(b,c)}\nfunction ej(a,b){return gj(a.a,b.a)}\nfunction $d(a){return !be(a)&&Qh(a)}\nfunction uj(a){return Math.floor(a)}\nfunction zj(a){return Math.round(a)}\nfunction Xm(a){return !a?null:a.U()}\nfunction ee(a){return a==null?null:a}\nfunction Lj(b,a){return b.indexOf(a)}\nfunction Pb(a){$wnd.clearTimeout(a)}\nfunction Cl(a){hl();Dl.call(this,a)}\nfunction mo(a){eo.call(this,a.c,a.d)}\nfunction Sr(){Or.call(this,'Head',1)}\nfunction Xr(){Or.call(this,'Tail',3)}\nfunction Oo(a){a.b=Sd($e,Ru,1,0,3,1)}\nfunction Rt(a){a.b=a.d.b;a.c=new Fs}\nfunction Dc(a){if(!a){throw new Oq}}\nfunction Ic(a){if(!a){throw new dj}}\nfunction cr(a,b){Qo(a.a,b);return b}\nfunction ok(a,b){a.a+=Zd(b);return a}\nfunction ep(a,b,c,d){a.splice(b,c,d)}\nfunction kh(a,b){return Vg(a,b,false)}\nfunction Tg(a){return Ug(a.l,a.m,a.h)}\nfunction Qq(a){return a!=null?jb(a):0}\nfunction gj(a,b){return a<b?-1:a>b?1:0}\nfunction gi(a,b){return a==b?0:a?1:-1}\nfunction yj(a,b){return Math.pow(a,b)}\nfunction be(a){return Array.isArray(a)}\nfunction fh(a){return a.l+a.m*Vu+a.h*Wu}\nfunction Nb(a){return a.$H||(a.$H=++Fb)}\nfunction Vj(a){return Sd(ef,Ru,2,a,4,1)}\nfunction Ij(b,a){return b.charCodeAt(a)}\nfunction Wj(a,b,c){return a.substr(b,c)}\nfunction Ug(a,b,c){return {l:a,m:b,h:c}}\nfunction Ju(a,b,c){rd(a.a,b,c);return a}\nfunction sh(a,b){Vg(a,b,true);return Rg}\nfunction yp(a){var b;b=jb(a);return ~~b}\nfunction Jg(a){var b=Ig;return Og(b[a])}\nfunction Jq(a){this.a=a;Xo.call(this)}\nfunction Vp(a){this.a=a;Xo.call(this)}\nfunction Rk(a){this.e=5;Lk(this,Fc(a))}\nfunction Br(a){Cr.call(this,a,(Nr(),Jr))}\nfunction Ur(){Or.call(this,'Range',2)}\nfunction Rh(){$wnd.setTimeout(Nu(Sh))}\nfunction Vo(a){return Pd(a.b,a.b.length)}\nfunction Rj(a,b){return Wj(a,b,a.length-b)}\nfunction Sj(a,b,c){return a.substr(b,c-b)}\nfunction Mj(b,a){return b.lastIndexOf(a)}\nfunction an(a,b){return a.c.Z(b)||a.a.Z(b)}\nfunction Qi(a,b){return _d(b,7)&&b.a==a.a}\nfunction pi(a){return a>=56320&&a<=57343}\nfunction de(a){return typeof a==='string'}\nfunction nj(a,b){return (a>>>0).toString(b)}\nfunction pc(a){lc();return parseInt(a)||-1}\nfunction ti(a){if(a.k!=null){return}Hi(a)}\nfunction Rn(a){var b;b=vn(a.a);return b.T()}\nfunction $n(a){var b;b=vn(a.a);return b.U()}\nfunction Ko(a){var b;b=zr(a.a);return b.T()}\nfunction co(a,b){var c;c=a.d;a.d=b;return c}\nfunction mb(a){a.g=null;mc(a,a.f);return a}\nfunction Ar(a){Hn(a.a);or(a.c,a.b);a.b=null}\nfunction Ac(a,b){if(!a){throw new bi(''+b)}}\nfunction Bc(a,b){if(!a){throw new cj(''+b)}}\nfunction Th(a,b){this.e=b;this.f=a;mb(this)}\nfunction Zt(a,b){this.d=a;Rt(this);this.c=b}\nfunction gt(a,b,c){ht.call(this,a,b,c,true)}\nfunction Ps(a,b,c,d){Os.call(this,a,0,b,c,d)}\nfunction Ib(a,b,c){return a.apply(b,c);var d}\nfunction $j(a,b){return de(a)?Zj(a,b):a.t(b)}\nfunction Nj(c,a,b){return c.lastIndexOf(a,b)}\nfunction Zd(a){return String.fromCharCode(a)}\nfunction ck(a){return String.fromCharCode(a)}\nfunction Wi(a){return !isFinite(a)&&!isNaN(a)}\nfunction ae(a){return a!=null&&!de(a)&&!Qh(a)}\nfunction Ai(){var a;a=xi(null);a.e=2;return a}\nfunction yi(a){var b;b=xi(a);Li(a,b);return b}\nfunction Qo(a,b){a.b[a.b.length]=b;return true}\nfunction Ro(a,b){Ec(b,a.b.length);return a.b[b]}\nfunction Ao(a){if(!a){throw new Oq}return a.c}\nfunction Fc(a){if(a==null){throw new Bj}return a}\nfunction Gc(a,b){if(a==null){throw new Cj(''+b)}}\nfunction Id(a){if(a==null){throw new Bj}this.a=a}\nfunction Vq(a,b){if(a<0||a>=b){throw new ai}}\nfunction Fu(a,b){Mc(a.a,a.a.a.length,b);return a}\nfunction Bi(a){var b;b=xi(a);b.j=a;b.e=1;return b}\nfunction Pk(a){this.f=a;this.e=5;this.a=Sk(a)}\nfunction qj(){qj=Lg;pj=Sd(We,Ru,19,256,0,1)}\nfunction tc(){tc=Lg;Error.stackTraceLimit=64}\nfunction ut(a,b,c){vt.call(this,a,b,c,1,true)}\nfunction Td(a,b,c,d,e,f){return Ud(a,b,c,d,e,0,f)}\nfunction Po(a,b,c){Hc(b,a.b.length);ep(a.b,b,0,c)}\nfunction _m(a,b){return de(b)?fn(a,b):!!Dp(a.a,b)}\nfunction Rm(a,b){return b===a?'(this Map)':''+b}\nfunction gs(a){return a.a!=0?'['+a.a+a.i+']':a.i}\nfunction cb(a){return ui(hb(a))+'@'+nj(jb(a),16)}\nfunction vn(a){return sp(a.c,a),Dc(un(a)),a.a.O()}\nfunction Zr(a,b){return mr(a.g,b,(ei(),ci))==null}\nfunction Mg(a){return a instanceof Array?a[0]:null}\nfunction dn(a,b){return de(b)?en(a,b):Xm(Dp(a.a,b))}\nfunction lh(a,b){return a.l==b.l&&a.m==b.m&&a.h==b.h}\nfunction vh(a,b){return a.l!=b.l||a.m!=b.m||a.h!=b.h}\nfunction Yt(a,b){b<1.0E-10&&(b=1.0E-10);a.b=b}\nfunction Xt(a,b,c,d){us(a.c,d);ts(a.c,c);ys(a.c,b)}\nfunction nr(a,b){var c;c=new Hr;pr(a,b,c);return c.d}\nfunction Mc(a,b,c){var d;d=Lc(a,b);Nc(a,b,c);return d}\nfunction rd(a,b,c){var d;d=pd(a,b);sd(a,b,c);return d}\nfunction ic(a,b){!a&&(a=[]);a[a.length]=b;return a}\nfunction Zj(a,b){if(a==b){return 0}return a<b?-1:1}\nfunction Ap(c,a){var b=c.a;return b[a]||(b[a]=[])}\nfunction up(a){var b;b=a._gwt_modCount|0;tp(a,b+1)}\nfunction Ep(a){return Object.getOwnPropertyNames(a.a)}\nfunction iq(a){return Object.getOwnPropertyNames(a.a)}\nfunction hb(a){return de(a)?ef:$d(a)?a.cZ:ce(a)?a.cZ:me}\nfunction gn(a,b,c){return de(b)?hn(a,b,c):Fp(a.a,b,c)}\nfunction jh(a,b){return {l:a.l&b.l,m:a.m&b.m,h:a.h&b.h}}\nfunction wh(a,b){return {l:a.l|b.l,m:a.m|b.m,h:a.h|b.h}}\nfunction Eh(a,b){return {l:a.l^b.l,m:a.m^b.m,h:a.h^b.h}}\nfunction xp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\nfunction Pq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)}\nfunction uo(a,b){!!b&&or(a,b);return !b?null:new mo(b)}\nfunction Gn(a){Dc(a.a<a.c.G());return a.c.R(a.b=a.a++)}\nfunction Hn(a){Ic(a.b!=-1);a.c.S(a.b);a.a=a.b;a.b=-1}\nfunction Lk(a,b){a.c=b;a.a=Ml(b);a.a<54&&(a.f=Bh(ql(b)))}\nfunction rk(a,b,c){a.a=Sj(a.a,0,b)+c+Rj(a.a,b);return a}\nfunction fu(a){if(fn(du,a)){return en(du,a)}return null}\nfunction pd(a,b){if(b==null){throw new Bj}return qd(a,b)}\nfunction Cc(a,b){if(!a){throw new cj(Jc('%s > %s',b))}}\nfunction kk(){if(fk==256){ek=gk;gk={};fk=0}++fk}\nfunction ei(){ei=Lg;ci=new fi(false);di=new fi(true)}\nfunction Xc(){Xc=Lg;Vc=new Yc(false);Wc=new Yc(true)}\nfunction Fo(a){var b;b=(new Fr(a.a)).a.W();return new Lo(b)}\nfunction zi(a,b){var c;c=xi(a);Li(a,c);c.e=b?8:0;return c}\nfunction Ln(a){In.call(this,a);Hc(0,a.b.length);this.a=0}\nfunction Ct(a,b,c,d){this.c=a;this.b=b;this.d=c;this.a=d}\nfunction Du(a,b,c,d){this.a=a;this.c=b;this.b=d;this.d=c}\nfunction zl(a,b,c){hl();il(this);this.e=a;this.d=b;this.a=c}\nfunction ur(a){this.c=null;!a&&(a=(pp(),pp(),op));this.b=a}\nfunction en(a,b){return b==null?Xm(Dp(a.a,null)):a.c.gb(b)}\nfunction hn(a,b,c){return b==null?Fp(a.a,null,c):a.c.jb(b,c)}\nfunction Oj(b,a){return (new RegExp('^('+a+')$')).test(b)}\nfunction tu(){return qu(vu(new zp,(Ht(),Ht(),Gt),(null,Ft)))}\nfunction ge(a){return ~~Math.max(Math.min(a,Ou),-2147483648)}\nfunction ni(a){return null!=String.fromCharCode(a).match(/\\d/)}\nfunction vk(a){_h.call(this,'String index out of range: '+a)}\nfunction Ob(a){$wnd.setTimeout(function(){throw a},0)}\nfunction Sh(){var a;a=Vh();if(!Jj('safari',a)){throw new Uh(a)}}\nfunction Mn(a){var b;b=new wn((new qn(a.a)).a);return new Sn(b)}\nfunction Vn(a){var b;b=new wn((new qn(a.a)).a);return new _n(b)}\nfunction rr(a,b){var c;c=1-b;a.a[c]=sr(a.a[c],c);return sr(a,b)}\nfunction dk(a,b,c){var d;d=b+c;Uj(a.length,b,d);return Yj(a,b,d)}\nfunction Bb(a,b){var c=Ab[a.charCodeAt(0)];return c==null?a:c}\nfunction Di(a,b){var c=a.a=a.a||[];return c[b]||(c[b]=a.u(b))}\nfunction _d(a,b){return a!=null&&(de(a)&&!!Yd[b]||a.cM&&!!a.cM[b])}\nfunction jb(a){return de(a)?jk(a):$d(a)?a.hC():ce(a)?Nb(a):Nb(a)}\nfunction oi(a){return null!=String.fromCharCode(a).match(/[A-Z]/i)}\nfunction sm(a,b){mm();return b<lm.length?rm(a,lm[b]):rl(a,vm(b))}\nfunction Pj(c,a,b){b=Xj(b);return c.replace(RegExp(a,'g'),b)}\nfunction Rr(){Nr();return Vd(Rd(ig,1),Ru,26,0,[Jr,Kr,Lr,Mr])}\nfunction Fi(a){if(a.C()){return null}var b=a.j;var c=Ig[b];return c}\nfunction Og(a){function b(){}\n;b.prototype=a||{};return new b}\nfunction _b(a,b,c,d,e,f,g){a+=e+g+(b^c^d);a=a<<f|a>>>-f;return a+b}\nfunction Wh(a,b,c,d){b==null&&(b='null');a.a+=b.substr(c,d-c)}\nfunction Ej(a,b,c){this.a='Unknown';this.d=a;this.b=b;this.c=c}\nfunction Mp(a){this.f=a;this.d=Ep(this.f);this.a=Sd($f,Ru,27,0,0,1)}\nfunction kl(a){while(a.d>0&&a.a[--a.d]==0);a.a[a.d++]==0&&(a.e=0)}\nfunction ob(a){var b,c;b=ui(a.cZ);c=a.n();return c!=null?b+': '+c:b}\nfunction ro(a,b){var c,d;c=b.T();d=a.X(c);return !!d&&Pq(d.d,b.U())}\nfunction Lb(a,b,c){var d;d=Jb();try{return Ib(a,b,c)}finally{Mb(d)}}\nfunction Kb(b){return function(){return Lb(b,this,arguments);var a}}\nfunction fb(a,b){return de(a)?Jj(a,b):$d(a)?a.eQ(b):ce(a)?a===b:a===b}\nfunction sd(d,a,b){if(b){var c=b.r();d.a[a]=c(b)}else{delete d.a[a]}}\nfunction Nc(d,a,b){if(b){var c=b.r();b=c(b)}else{b=undefined}d.a[a]=b}\nfunction sp(a,b){if(b._gwt_modCount!=a._gwt_modCount){throw new vp}}\nfunction Hc(a,b){if(a<0||a>b){throw new _h('Index: '+a+', Size: '+b)}}\nfunction Ec(a,b){if(a<0||a>=b){throw new _h('Index: '+a+', Size: '+b)}}\nfunction tl(a,b){if(b==0||a.e==0){return a}return b>0?Nl(a,b):Ql(a,-b)}\nfunction vl(a,b){if(b==0||a.e==0){return a}return b>0?Ql(a,b):Nl(a,-b)}\nfunction nl(a,b){var c;for(c=a.d-1;c>=0&&a.a[c]==b[c];c--);return c<0}\nfunction Uo(a,b,c){var d;d=(Ec(b,a.b.length),a.b[b]);a.b[b]=c;return d}\nfunction hm(a,b,c,d){var e;e=Sd(ke,Ru,0,b,7,1);im(e,a,b,c,d);return e}\nfunction cm(a,b,c,d){var e;e=Sd(ke,Ru,0,b+1,7,1);dm(e,a,b,c,d);return e}\nfunction Sd(a,b,c,d,e,f){var g;g=Wd(e,d);Vd(Rd(a,f),b,c,e,g);return g}\nfunction ac(a,b,c,d,e,f,g){a+=e+g+(c^(b|~d));a=a<<f|a>>>-f;return a+b}\nfunction $b(a,b,c,d,e,f,g){a+=e+g+(c^d&(b^c));a=a<<f|a>>>-f;return a+b}\nfunction Zb(a,b,c,d,e,f,g){a+=e+g+(d^b&(c^d));a=a<<f|a>>>-f;return a+b}\nfunction Sg(a){var b,c,d;b=a&Su;c=a>>22&Su;d=a<0?Tu:0;return Ug(b,c,d)}\nfunction or(a,b){var c;c=new Hr;c.c=true;c.d=b.U();return pr(a,b.T(),c)}\nfunction To(a,b){var c;c=(Ec(b,a.b.length),a.b[b]);dp(a.b,b,1);return c}\nfunction Gr(a,b){lo.call(this,a,b);this.a=Sd(dg,Ru,40,2,0,1);this.b=true}\nfunction Qt(a,b,c,d){this.g=new zp;this.c=a;this.d=b;this.b=c;this.a=d}\nfunction xb(a){vb();this.e=null;this.f=null;this.a='';this.b=a;this.a=''}\nfunction fn(a,b){return b==null?!!Dp(a.a,null):!(a.c.gb(b)===undefined)}\nfunction Lu(a,b,c){return c==null?Ju(a,b,(cd(),cd(),bd)):Ju(a,b,new Id(c))}\nfunction Hm(){Fm();return Vd(Rd(kf,1),Ru,24,0,[Em,ym,xm,zm,Cm,Am,Bm,Dm])}\nfunction rl(a,b){if(b.e==0){return gl}if(a.e==0){return gl}return mm(),nm(a,b)}\nfunction zb(){if(Date.now){return Date.now()}return (new Date).getTime()}\nfunction Yo(){Oo(this);Bc(true,'Initial capacity must not be negative')}\nfunction Mb(a){a&&gc((ec(),dc));--Eb;if(a){if(Hb!=-1){Pb(Hb);Hb=-1}}}\nfunction Nr(){Nr=Lg;Jr=new Or('All',0);Kr=new Sr;Lr=new Ur;Mr=new Xr}\nfunction Jh(){Jh=Lg;Fh=Ug(Su,Su,524287);Gh=Ug(0,0,Uu);Hh=nh(1);nh(2);Ih=nh(0)}\nfunction Qk(a,b){this.e=b;this.a=Tk(a);this.a<54?(this.f=Bh(a)):(this.c=Ll(a))}\nfunction Os(a,b,c,d,e){this.b=new zp;this.c=a;this.d=b;this.g=c;this.e=d;this.a=e}\nfunction yl(a,b){hl();il(this);this.e=a;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[b])}\nfunction Hu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,new hd(a[b]))}}\nfunction su(a){var b=new zp;if(a){for(var c in a){b.M(c,String(a[c]))}}return b}\nfunction er(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[0]){c=b}return c}\nfunction fr(a){var b,c;if(!a.c){return null}c=a.c;while(b=c.a[1]){c=b}return c}\nfunction fc(a){var b,c;if(a.a){c=null;do{b=a.a;a.a=null;c=jc(b,c)}while(a.a);a.a=c}}\nfunction gc(a){var b,c;if(a.b){c=null;do{b=a.b;a.b=null;c=jc(b,c)}while(a.b);a.b=c}}\nfunction Cu(a,b){var c;c=Si(rj(a.a),rj(b.a));if(c!=0)return c;return Zj(a.b,b.b)}\nfunction So(a,b,c){for(;c<a.b.length;++c){if(Pq(b,a.b[c])){return c}}return -1}\nfunction kq(a,b){var c;c=a.a[b];if(!(c===undefined)){delete a.a[b];cn(a.b)}return c}\nfunction Lc(d,a){var b=d.a[a];var c=(Bd(),Ad)[typeof b];return c?c(b):Hd(typeof b)}\nfunction Li(a,b){var c;if(!a){return}b.j=a;var d=Fi(b);if(!d){Ig[a]=[b];return}d.cZ=b}\nfunction hq(d,a){var b=d.a;for(var c in b){if(d.fb(a,b[c])){return true}}return false}\nfunction al(a){if(lh(a,{l:0,m:0,h:0})&&5<Fk.length){return Fk[5]}return new Qk(a,5)}\nfunction Mk(a){if(a.a<54){return a.f<0?-1:a.f>0?1:0}return (!a.c&&(a.c=Kl(a.f)),a.c).e}\nfunction Xs(a){this.a=a;if(a.d>a.c)throw new It('Error: minCount>maxCount')}\nfunction Dl(a){Fc(a);if(!a.length){throw new Dj('Zero length BigInteger')}Il(this,a)}\nfunction qi(a){return String.fromCharCode(a).toLowerCase().charCodeAt(0)==a&&oi(a)}\nfunction ri(a){return String.fromCharCode(a).toUpperCase().charCodeAt(0)==a&&oi(a)}\nfunction wn(a){this.c=a;this.b=this.c.c._();this.a=this.b;tp(this,a._gwt_modCount)}\nfunction Iu(a){var b;Gu.call(this);for(b=0;b<a.length;b++){Fu(this,(new Hu(a[b])).a)}}\nfunction Lh(){Mh();var a=Kh;for(var b=0;b<arguments.length;b++){a.push(arguments[b])}}\nfunction od(e,a){var b=e.a;var c=0;for(var d in b){b.hasOwnProperty(d)&&(a[c++]=d)}return a}\nfunction lj(a){var b,c;if(a==0){return 32}else{c=0;for(b=1;(b&a)==0;b<<=1){++c}return c}}\nfunction xi(a){var b;b=new vi;b.k='Class$'+(a?'S'+a:''+b.g);b.b=b.k;b.i=b.k;return b}\nfunction sr(a,b){var c,d;c=1-b;d=a.a[c];a.a[c]=d.a[b];d.a[b]=a;a.b=true;d.b=false;return d}\nfunction es(a,b){var c;if(_d(b,32)){c=b;if(Jj(a.i,c.i)&&a.a==c.a)return true}return false}\nfunction ru(a,b){var c;c=su(b);c.c.jb('mf',a);return qu(wu(c,(Ht(),Ht(),Gt),(null,Ft)))}\nfunction np(a,b){var c,d;d=a.a.b.length;for(c=0;c<d;c++){Vq(c,a.a.b.length);Uo(a.a,c,b[c])}}\nfunction Pl(a,b,c){var d,e,f;d=0;for(e=0;e<c;e++){f=b[e];a[e]=f<<1|d;d=f>>>31}d!=0&&(a[c]=d)}\nfunction lp(a){var b,c,d;d=0;for(c=a.D();c.N();){b=c.O();d=d+(b!=null?jb(b):0);d=~~d}return d}\nfunction Cr(a,b){var c;this.c=a;c=new Xo;ir(a,c,b,a.c,null,false,null,false);this.a=new Ln(c)}\nfunction ks(a){this.i=a.i;this.b=a.b;this.d=a.d;this.c=a.c;this.e=a.e;this.f=a.f;this.a=a.a}\nfunction fs(a){if(a.d==a.c)return a.d;throw new tb('Atoms.getCount(): undefined (min!=max)')}\nfunction qu(a){if('error' in a.a.a){throw new xb(pd(a.a,'error').s().a)}else{return a.a.a}}\nfunction Ot(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Ds(a.e.c)}\nfunction Pt(a){if(a.e.c.d==0)throw new tb('No isotopic distribution data');return Es(a.e.c)}\nfunction Ut(a,b){if(a.d.f==0){return Vt(a,b)}else if(a.d.f==Jt){return Wt(a,b)}return Vt(a,b)}\nfunction un(a){if(a.a.N()){return true}if(a.a!=a.b){return false}a.a=a.c.a._();return a.a.N()}\nfunction ol(a){var b;if(a.b==-2){if(a.e==0){b=-1}else{for(b=0;a.a[b]==0;b++);}a.b=b}return a.b}\nfunction Km(a,b){var c,d;Fc(b);for(d=b.D();d.N();){c=d.O();if(!a.F(c)){return false}}return true}\nfunction ct(b){try{Pi(b);return true}catch(a){a=Hg(a);if(_d(a,20)){return false}else throw Gg(a)}}\nfunction Ku(a,b){return !b?Ju(a,'unsaturation',(cd(),cd(),bd)):Ju(a,'unsaturation',new hd(b.a))}\nfunction Uj(a,b,c){if(b<0){throw new vk(b)}if(c<b){throw new vk(c-b)}if(c>a){throw new vk(c)}}\nfunction Fg(b,c){if(b&&typeof b=='object'){try{b.__gwt$exception=c}catch(a){}}}\nfunction Ph(a,b){typeof window==='object'&&typeof window['$gwt']==='object'&&(window['$gwt'][a]=b)}\nfunction jq(a,b,c){var d;d=a.a[b];d===undefined&&bn(a.b);lq(a,b,c===undefined?null:c);return d}\nfunction mu(a){ku();var b,c;b='61-'+a;if(fn(ju,b))return en(ju,b);c=new iu(a);hn(ju,b,c);return c}\nfunction mt(a,b){var c,d;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);if(Jj(c.i,b))return c}return null}\nfunction lt(a){var b,c,d;d=nt(a);for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);b.g=rt(b.b*fs(b)*100/d)}}\nfunction us(a,b){var c,d,e;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.U().a;e<b&&Ar(c)}}\nfunction uh(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;return Ug(b,c,d)}\nfunction br(a){var b;b=a.a.b.length;if(b>0){return Vq(b-1,a.a.b.length),a.a.S(b-1)}else{throw new wp}}\nfunction oc(a){var b=/function(?:\\s+([\\w$]+))?\\s*\\(/;var c=b.exec(a);return c&&c[1]||'anonymous'}\nfunction Si(a,b){if(a<b){return -1}if(a>b){return 1}if(a==b){return 0}return isNaN(a)?isNaN(b)?0:1:-1}\nfunction Bh(a){if(lh(a,(Jh(),Gh))){return Xu}if(!ph(a,Ih)){return -fh(uh(a))}return a.l+a.m*Vu+a.h*Wu}\nfunction Ok(a){Hk();if(Wi(a)||isNaN(a)){throw new Dj('Infinite or NaN')}Jk(this,a.toPrecision(20))}\nfunction zp(){_p();this.a=$p.cb();this.a.b=this;this.c=$p.db();this.c.b=this;this.b=0;up(this)}\nfunction Bd(){Bd=Lg;Ad={'boolean':Cd,number:Dd,string:Fd,object:Ed,'function':Ed,undefined:Gd}}\nfunction lc(){lc=Lg;var a,b;b=!(!!Error.stackTraceLimit||'stack' in new Error);a=new yc;kc=b?new qc:a}\nfunction mr(a,b,c){var d,e;d=new Gr(b,c);e=new Hr;a.c=kr(a,a.c,d,e);e.b||++a.d;a.c.b=false;return e.d}\nfunction _g(a){var b,c;c=kj(a.h);if(c==32){b=kj(a.m);return b==32?kj(a.l)+32:b+20-10}else{return c-12}}\nfunction Qd(a,b){var c;c=Wd(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\nfunction Pd(a,b){var c;c=a.slice(0,b);Vd(hb(a),a.cM,a.__elementTypeId$,a.__elementTypeCategory$,c);return c}\nfunction Vd(a,b,c,d,e){e.cZ=a;e.cM=b;e.tM=Qg;e.__elementTypeId$=c;e.__elementTypeCategory$=d;return e}\nfunction Xg(a,b,c,d,e){var f;f=yh(a,b);c&&$g(f);if(e){a=Zg(a,b);d?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h))}return f}\nfunction Im(a,b){var c,d,e;Fc(b);c=false;for(e=b.D();e.N();){d=e.O();c=c|mr(a.g,d,(ei(),ci))==null}return c}\nfunction gp(a){var b,c,d,e;e=1;for(c=0,d=a.length;c<d;++c){b=a[c];e=31*e+(b!=null?jb(b):0);e=~~e}return e}\nfunction Gg(a){var b;if(_d(a,38)){b=a;if(ee(b.b)!==ee((vb(),ub))){return ee(b.b)===ee(ub)?null:b.b}}return a}\nfunction Hg(a){var b;if(_d(a,9)){return a}b=a&&a.__gwt$exception;if(!b){b=new xb(a);mc(b,a);Fg(a,b)}return b}\nfunction rt(a){var b;b=isNaN(a*cv)?a*cv:Wi(a*cv)?a*cv:a*cv==0?a*cv:Bh(mh(Math.round(a*cv)));return b/cv}\nfunction lb(a){return de(a)?a:$d(a)?a.tS():ce(a)?cb(a):a.toString?a.toString():'[JavaScriptObject]'}\nfunction ih(a,b){var c,d,e;c=a.l+b.l;d=a.m+b.m+(c>>22);e=a.h+b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\nfunction Ah(a,b){var c,d,e;c=a.l-b.l;d=a.m-b.m+(c>>22);e=a.h-b.h+(d>>22);return {l:c&Su,m:d&Su,h:e&Tu}}\nfunction $g(a){var b,c,d;b=~a.l+1&Su;c=~a.m+(b==0?1:0)&Su;d=~a.h+(b==0&&c==0?1:0)&Tu;dh(a,b);eh(a,c);bh(a,d)}\nfunction uu(a,b){var c;c=su(b);c.c.jb('monoisotopicMass',''+a);return qu(zu(c,(Ht(),Ht(),Gt),(null,Ft)))}\nfunction ml(a,b){var c;if(a===b){return true}if(_d(b,5)){c=b;return a.e==c.e&&a.d==c.d&&nl(a,c.a)}return false}\nfunction Kl(a){hl();if(a<0){if(a!=-1){return new xl(-1,-a)}return bl}else return a<=10?dl[ge(a)]:new xl(1,a)}\nfunction Hd(a){Bd();throw new ad(\"Unexpected typeof result '\"+a+\"'; please report this bug to the GWT team\")}\nfunction js(a,b,c,d){if(c>d)throw new It('Error: minCount>maxCount');this.i=a;this.b=b;this.d=c;this.c=d}\nfunction vi(){this.g=si++;this.k=null;this.i=null;this.f=null;this.d=null;this.b=null;this.j=null;this.a=null}\nfunction _t(a,b,c){this.d=a;Rt(this);this.a=c;Tt(this,b);if(b.a!=0){ss(this.c,-b.a*nv);ws(this.c,1/sj(b.a))}}\nfunction Ws(a,b,c,d,e,f){a.d=wj(ge(uj((c-f-b-e)/a.a.e)),a.a.d);a.c=xj(ge(tj((c+f-b-d)/a.a.e)),a.a.c);a.b=a.d-1}\nfunction pl(a){var b;if(a.c!=0){return a.c}for(b=0;b<a.a.length;b++){a.c=a.c*33+(a.a[b]&-1)}a.c=a.c*a.e;return a.c}\nfunction mi(a){if(a>=48&&a<58){return a-48}if(a>=97&&a<97){return a-97+10}if(a>=65&&a<65){return a-65+10}return -1}\nfunction Zk(a){var b=Gk;!b&&(b=Gk=/^[+-]?\\d*$/i);if(b.test(a)){return parseInt(a,10)}else{return Number.NaN}}\nfunction jk(a){hk();var b=':'+a;var c=gk[b];if(c!=null){return c}c=ek[b];c==null&&(c=ik(a));kk();return gk[b]=c}\nfunction Jm(a,b){var c,d;for(d=a.D();d.N();){c=d.O();if(ee(b)===ee(c)||b!=null&&fb(b,c)){return true}}return false}\nfunction oj(a){var b,c;if(a>-129&&a<128){b=a+128;c=(qj(),pj)[b];!c&&(c=pj[b]=new fj(a));return c}return new fj(a)}\nfunction ul(a){var b,c,d,e;return a.e==0?a:(b=a.d,c=b+1,d=Sd(ke,Ru,0,c,7,1),Pl(d,a.a,b),e=new zl(a.e,c,d),kl(e),e)}\nfunction om(a,b,c,d,e){if(b==0||d==0){return}b==1?(e[d]=qm(e,c,d,a[0])):d==1?(e[b]=qm(e,a,b,c[0])):pm(a,c,e,b,d)}\nfunction ip(a,b,c,d,e,f,g,h){var i;i=c;while(f<g){i>=d||b<c&&h.Y(a[b],a[i])<=0?(e[f++]=a[b++]):(e[f++]=a[i++])}}\nfunction hp(a,b,c,d){var e,f,g;for(e=b+1;e<c;++e){for(f=e;f>b&&d.Y(a[f-1],a[f])>0;--f){g=a[f];a[f]=a[f-1];a[f-1]=g}}}\nfunction Yb(a,b){var c,d;for(c=0,d=0;d<16;d++){b[d]=a[c++]&255|(a[c++]&255)<<8|(a[c++]&255)<<16|(a[c++]&255)<<24}}\nfunction xs(a,b){var c,d,e,f;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();f=d.U();mr(a,e,new Ri(f.a*b))}}\nfunction Qm(a,b){var c,d,e;for(d=a.K().D();d.N();){c=d.O();e=c.T();if(ee(b)===ee(e)||b!=null&&fb(b,e)){return c}}return null}\nfunction As(a){var b,c;b=new Ok(a);c=Nk(Kk(b,(Fm(),Fm(),Cm)));if(c.indexOf('.')!=-1){return Pj(c,'\\\\.?0+$','')}return c}\nfunction Wo(a,b){var c,d;d=a.b.length;b.length<d&&(b=Qd(b,d));for(c=0;c<d;++c){b[c]=a.b[c]}b.length>d&&(b[d]=null);return b}\nfunction st(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,hs(b))}return d.a}\nfunction Js(a){var b,c,d;if(a.b.b==0){return}d=0;for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+=b.b*b.d/100}if(d==0)return;a.c=d}\nfunction Ml(a){var b,c,d;if(a.e==0){return 0}b=a.d<<5;c=a.a[a.d-1];if(a.e<0){d=ol(a);if(d==a.d-1){--c;c=~~c}}b-=kj(c);return b}\nfunction Gl(a){var b,c,d;if(a<fl.length){return fl[a]}c=a>>5;b=a&31;d=Sd(ke,Ru,0,c+1,7,1);d[c]=1<<b;return new zl(1,c+1,d)}\nfunction Lp(a){if(a.c<a.a.length){return true}if(a.b<a.d.length-1){a.a=Bp(a.f,a.d[++a.b]);a.c=0;return true}return false}\nfunction Ls(a){if(a.d==0)throw new tb('Exact mass of '+a.g+' is unknown. Run calculateExactMass() first.');return a.d}\nfunction Kj(b,a){if(a==null){return false}if(b==a){return true}return b.length==a.length&&b.toLowerCase()==a.toLowerCase()}\nfunction Ng(){!Array.isArray&&(Array.isArray=function(a){return Object.prototype.toString.call(a)==='[object Array]'})}\nfunction Wg(a,b){if(a.h==Uu&&a.m==0&&a.l==0){b&&(Rg=Ug(0,0,0));return Tg((Jh(),Hh))}b&&(Rg=Ug(a.l,a.m,a.h));return Ug(0,0,0)}\nfunction Nl(a,b){var c,d,e,f;c=b>>5;b&=31;e=a.d+c+(b==0?0:1);d=Sd(ke,Ru,0,e,7,1);Ol(d,a.a,c,b);f=new zl(a.e,e,d);kl(f);return f}\nfunction gr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c>=0){e=e.a[1]}else{d=e;e=e.a[0]}}return d}\nfunction hr(a,b){var c,d,e;d=null;e=a.c;while(e){c=a.b.Y(b,e.c);if(c==0){return e}if(c<=0){e=e.a[0]}else{d=e;e=e.a[1]}}return d}\nfunction nc(a){var b,c,d;b='mc';d=xj(a.length,5);for(c=0;c<d;c++){if(Jj(a[c].d,b)){return a.length>=c+1&&a.splice(0,c+1),a}}return a}\nfunction mp(a){var b,c,d;d=1;for(c=a.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=31*d+(b!=null?jb(b):0);d=~~d}return d}\nfunction Mt(a){var b,c,d;b=mv;for(d=new In(a.d.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));c.f>b&&(b=c.f)}Xt(a.e,b,a.b,a.a)}\nfunction vs(a){var b,c,d,e,f,g;b=mv;f=0;c=(new Fr(a)).a.W();while(Fn(c.a)){d=c.b=Gn(c.a);e=d.T();g=d.U().a;if(g>b){b=g;f=e.a}}return f}\nfunction nb(a){var b,c,d,e,f;for(e=a;e;e=e.e){for(b=(e.g==null&&(e.g=(lc(),f=kc.p(e),nc(f))),e.g),c=0,d=b.length;c<d;++c);}}\nfunction Dp(a,b){var c,d,e,f;for(d=Cp(a,b==null?'0':''+yp(b)),e=0,f=d.length;e<f;++e){c=d[e];if(xp(b,c.T())){return c}}return null}\nfunction nh(a){var b,c;if(a>-129&&a<128){b=a+128;hh==null&&(hh=Sd(Fe,Ru,141,256,0,1));c=hh[b];!c&&(c=hh[b]=Sg(a));return c}return Sg(a)}\nfunction Jb(){var a;if(Eb!=0){a=zb();if(a-Gb>2000){Gb=a;Hb=$wnd.setTimeout(Qb,10)}}if(Eb++==0){fc((ec(),dc));return true}return false}\nfunction Tj(a){if(a.length==0||a[0]>' '&&a[a.length-1]>' '){return a}return a.replace(/^[\\u0000-\\u0020]*|[\\u0000-\\u0020]*$/g,'')}\nfunction Tk(a){var b;qh(a,{l:0,m:0,h:0})&&(a={l:~a.l&Su,m:~a.m&Su,h:~a.h&Tu});return 64-(b=Ch(yh(a,32)),b!=0?kj(b):kj(Ch(a))+32)}\nfunction li(a,b,c){var d,e;d=Ij(a,b++);if(d>=55296&&d<=56319&&b<c&&pi(e=a.charCodeAt(b))){return Zu+((d&1023)<<10)+(e&1023)}return d}\nfunction Yj(a,b,c){var d='';for(var e=b;e<c;){var f=Math.min(e+10000,c);d+=String.fromCharCode.apply(null,a.slice(e,f));e=f}return d}\nfunction Ki(a,b){var c=0;while(!b[c]||b[c]==''){c++}var d=b[c++];for(;c<b.length;c++){if(!b[c]||b[c]==''){continue}d+=a+b[c]}return d}\nfunction Kt(a,b,c){var d,e,f;f=lu(Pt(a),b,c);e=new Fs;for(d=0;d<f.length;d++){mr(e,new Ri(f[d][0]),new Ri(f[d][1]))}a.e.c=e;a.e.c.a=cv}\nfunction jl(a,b){if(a.e>b.e){return 1}if(a.e<b.e){return -1}if(a.d>b.d){return a.e}if(a.d<b.d){return -b.e}return a.e*em(a.a,b.a,a.d)}\nfunction qd(f,a){var b=f.a;var c;a=String(a);b.hasOwnProperty(a)&&(c=b[a]);var d=(Bd(),Ad)[typeof c];var e=d?d(c):Hd(typeof c);return e}\nfunction ql(a){var b;b=a.d>1?wh(xh(nh(a.a[1]),32),jh(nh(a.a[0]),{l:Su,m:1023,h:0})):jh(nh(a.a[0]),{l:Su,m:1023,h:0});return th(nh(a.e),b)}\nfunction em(a,b,c){var d;for(d=c-1;d>=0&&a[d]==b[d];d--);return d<0?0:qh(jh(nh(a[d]),{l:Su,m:1023,h:0}),jh(nh(b[d]),{l:Su,m:1023,h:0}))?-1:1}\nfunction xl(a,b){this.e=a;if(b<fv){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[~~b])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[~~(b%fv),~~(b/fv)])}}\nfunction Bl(a){hl();il(this);if(a.length==0){this.e=0;this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[0])}else{this.e=1;this.d=a.length;this.a=a;kl(this)}}\nfunction $s(a){var b,c,d,e;c='';b=new Xb;d=Rb(b,bk(a));for(e=0;e<5;e++){e==0?(c+=Zd(sj(d[0]%26)+65&_u)):(c+=Zd(sj(d[e]%26)+97&_u))}return c}\nfunction ss(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a+b),g);Ar(c)}rs(a,d)}\nfunction ws(a,b){var c,d,e,f,g;d=new Fs;c=(new Fr(a)).a.W();while(Fn(c.a)){e=c.b=Gn(c.a);f=e.T();g=e.U();mr(d,new Ri(f.a*b),g);Ar(c)}rs(a,d)}\nfunction rs(a,b){var c,d,e,f,g;e=(new Fr(b)).a.W();while(Fn(e.a)){c=e.b=Gn(e.a);f=c.T();g=c.U();d=to(a,f);!!d&&(g=new Ri(d.a+g.a));mr(a,f,g)}}\nfunction bc(a,b){var c,d;for(c=0,d=0;c<4;c++){b[d++]=fe(a[c]&255);b[d++]=fe(a[c]>>>8&255);b[d++]=fe(a[c]>>>16&255);b[d++]=fe(a[c]>>>24&255)}}\nfunction ak(a){var b,c;if(a>=Zu){b=55296+(a-Zu>>10&1023)&_u;c=56320+(a-Zu&1023)&_u;return ck(b)+ck(c)}else{return String.fromCharCode(a&_u)}}\nfunction ht(a,b,c,d){this.a=b;this.b=c;this.d=new Yo;dt(this,a,d);if(this.d.b.length==0)throw new It('Cannot parse: empty formula: ->'+a+'<-')}\nfunction ir(a,b,c,d,e,f,g,h){var i,j;if(!d){return}i=d.a[0];!!i&&ir(a,b,c,i,e,f,g,h);jr(a,c,d.c,e,f,g,h)&&b.Q(d);j=d.a[1];!!j&&ir(a,b,c,j,e,f,g,h)}\nfunction Xj(a){var b;b=0;while(0<=(b=a.indexOf('\\\\',b))){a.charCodeAt(b+1)==36?(a=a.substr(0,b)+'$'+Rj(a,++b)):(a=a.substr(0,b)+Rj(a,++b))}return a}\nfunction Pm(a,b){var c,d,e;c=b.T();e=b.U();d=a.L(c);if(!(ee(e)===ee(d)||e!=null&&fb(e,d))){return false}if(d==null&&!a.J(c)){return false}return true}\nfunction jr(a,b,c,d,e,f,g){var h,i;if(b.lb()&&(h=a.b.Y(c,d),h<0||!e&&h==0)){return false}if(b.mb()&&(i=a.b.Y(c,f),i>0||!g&&i==0)){return false}return true}\nfunction ms(a,b,c){if(b>c)throw new It('Error: minCount>maxCount');this.d=b;this.c=c;this.e=ot(a.a);this.f=pt(a.a);this.a=0;this.i=a.b;this.b=nt(a.a)}\nfunction Zg(a,b){var c,d,e;if(b<=22){c=a.l&(1<<b)-1;d=e=0}else if(b<=44){c=a.l;d=a.m&(1<<b-22)-1;e=0}else{c=a.l;d=a.m;e=a.h&(1<<b-44)-1}return Ug(c,d,e)}\nfunction yu(a){var b,c,d;d=Ll({l:1,m:0,h:0});for(c=new In(a.a);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=rl(d,Ll(nh(b.a.c-b.a.d+1)))}return d}\nfunction zs(a){var b,c,d,e,f;e=~~(a.a/2);if(a.d<e)return;f=new _r(new Hs);Im(f,new Fr(a));c=0;for(d=Fo(new Go(f.g));Fn(d.a.a);){b=Ko(d);c++>e&&nr(a,b.T())}}\nfunction nt(a){var b,c,d;if(a.e)throw new It('Cannot calculate mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.b*fs(b)}return rt(d)}\nfunction pt(a){var b,c,d;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.f*fs(b)}return d}\nfunction qt(a){var b,c,d;if(a.e)throw new It('Cannot get the number of atoms: this is a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=fs(b)}return d}\nfunction Lm(a){var b,c,d,e;e=new uk('[');b=false;for(d=a.D();d.N();){c=d.O();b?(e.a+=', ',e):(b=true);e.a+=c===a?'(this Collection)':''+c}e.a+=']';return e.a}\nfunction Wk(a,b,c){var d,e,f,g,h;e=(h=a/b,h>0?uj(h):tj(h));f=a%b;g=Si(a*b,0);if(f!=0){d=Si((f<=0?0-f:f)*2,b<=0?0-b:b);e+=$k(ge(e)&1,g*(5+d),c)}return new Pk(e)}\nfunction Ll(a){hl();if(qh(a,{l:0,m:0,h:0})){if(vh(a,{l:Su,m:Su,h:Tu})){return new Al(-1,uh(a))}return bl}else return rh(a,{l:10,m:0,h:0})?dl[Ch(a)]:new Al(1,a)}\nfunction au(a,b,c){var d,e;d=b.a!=0?fs(b):yj(en(a.a.a,b.i).b.b-1,fs(b));e=c.a!=0?fs(c):yj(en(a.a.a,c.i).b.b-1,fs(c));if(d==e)return Si(b.b,c.b);return -Si(d,e)}\nfunction gh(a,b){var c,d,e;e=a.h-b.h;if(e<0){return false}c=a.l-b.l;d=a.m-b.m+(c>>22);e+=d>>22;if(e<0){return false}dh(a,c&Su);eh(a,d&Su);bh(a,e&Tu);return true}\nfunction Rb(a,b){var c,d;Vb(a,b,0,b.length);return c=cc(xh(a.b,3)),d=Sd(he,Ru,0,16,7,1),a.c>8?Vb(a,Sb,0,a.c-8):Vb(a,Sb,0,64+(a.c-8)),Vb(a,c,0,8),bc(a.d,d),Ub(a),d}\nfunction $t(a,b,c){var d,e,f;this.d=a;Rt(this);this.a=c;d=b.b.b;Yt(this,a.b/(d*4));for(f=Vn(new Wn(b.b));un(f.a);){e=$n(f);mr(this.c,new Ri(e.b),new Ri(e.d/100))}}\nfunction Ud(a,b,c,d,e,f,g){var h,i,j,k,l;k=e[f];j=f==g-1;h=j?d:0;l=Wd(h,k);Vd(Rd(a,g-f),b[f],c[f],h,l);if(!j){++f;for(i=0;i<k;++i){l[i]=Ud(a,b,c,d,e,f,g)}}return l}\nfunction Nh(b,c,d,e){Mh();var f=Kh;$moduleName=c;$moduleBase=d;Eg=e;function g(){for(var a=0;a<f.length;a++){f[a]()}}\nif(b){try{Nu(g)()}catch(a){b(c,a)}}else{Nu(g)()}}\nfunction fm(a,b,c){var d,e;d=jh(nh(c),{l:Su,m:1023,h:0});for(e=0;vh(d,{l:0,m:0,h:0})&&e<b;e++){d=ih(d,jh(nh(a[e]),{l:Su,m:1023,h:0}));a[e]=Ch(d);d=yh(d,32)}return Ch(d)}\nfunction um(a,b){mm();var c,d;d=(hl(),cl);c=a;for(;b>1;b>>=1){(b&1)!=0&&(d=rl(d,c));c.d==1?(c=rl(c,c)):(c=new Bl(wm(c.a,c.d,Sd(ke,Ru,0,c.d<<1,7,1))))}d=rl(d,c);return d}\nfunction Fp(a,b,c){var d,e,f,g;d=Ap(a,b==null?'0':''+yp(b));for(f=0,g=d.length;f<g;++f){e=d[f];if(xp(b,e.T())){return e.V(c)}}d[d.length]=new lo(b,c);bn(a.b);return null}\nfunction jp(a,b,c,d){var e,f,g,h;!d&&(d=(pp(),pp(),op));e=(f=(g=c-b,Cc(g>=0,Vd(Rd($e,1),Ru,1,3,[oj(b),oj(c)])),g),h=Qd(a,f),wk(a,b,h,0,xj(a.length-b,f)),h);kp(e,a,b,c,-b,d)}\nfunction gu(a,b){eu();var c,d,e,f;f=2;for(d=Fo(new Go(a.g));Fn(d.a.a);){c=Ko(d);e=fu(c.i);if(!e){if(!b){return null}else{f+=b.a*fs(c)}}else{f+=e.a*fs(c)}}return new Ri(f/2)}\nfunction Wd(a,b){var c=new Array(b);var d;switch(a){case 6:d={l:0,m:0,h:0};break;case 7:d=0;break;case 8:d=false;break;default:return c;}for(var e=0;e<b;++e){c[e]=d}return c}\nfunction hs(a){var b;a.a!=0?(b='<sup>'+a.a+'<\\/sup>'+a.i):(b=a.i);if(a.c==1&&a.d==1)return b;if(a.c==a.d)return b+'<sub>'+a.c+'<\\/sub>';return b+'<sub>'+a.d+'-'+a.c+'<\\/sub>'}\nfunction Tb(){Tb=Lg;Sb=Vd(Rd(he,1),Ru,0,7,[-128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])}\nfunction iu(a){var b,c,d;this.b=61;this.a=a;c=a/(2*Aj(2*vj(2)));this.c=Sd(je,av,0,61,7,1);for(b=0;b<61;b++){d=b-30;this.c[b]=1/(c*Aj(6.283185307179586))*Math.exp(-d*d/(2*c*c))}}\nfunction xu(a,b,c){var d,e;for(d=0;d<a.a.b.length;d++){for(e=d+1;e<a.a.b.length;e++){b[d]=b[d]+Vs((Vq(e,a.a.b.length),Ro(a.a,e)));c[d]=c[d]+Us((Vq(e,a.a.b.length),Ro(a.a,e)))}}}\nfunction Ub(a){a.a=Sd(he,Ru,0,64,7,1);a.d=Sd(ke,Ru,0,4,7,1);a.e=Sd(ke,Ru,0,16,7,1);a.d[0]=1732584193;a.d[1]=-271733879;a.d[2]=-1732584194;a.d[3]=271733878;a.b={l:0,m:0,h:0};a.c=64}\nfunction Ol(a,b,c,d){var e,f,g;if(d==0){wk(b,0,a,c,a.length-c)}else{g=32-d;a[a.length-1]=0;for(f=a.length-1;f>c;f--){a[f]|=b[f-c-1]>>>g;a[f-1]=b[f-c-1]<<d}}for(e=0;e<c;e++){a[e]=0}}\nfunction Sk(a){var b,c;if(a>-140737488355328&&a<140737488355328){if(a==0){return 0}b=a<0;b&&(a=-a);c=ge(uj(vj(a)/0.6931471805599453));(!b||a!=yj(2,c))&&++c;return c}return Tk(mh(a))}\nfunction tt(a){var b,c,d;if(a.g.d==0)return '';d=new nk('');for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);lk(d,is(b,a.c))}a.a!=0&&(a.a>0?lk(d,'(+'+a.a+')'):lk(d,'('+a.a+')'));return d.a}\nfunction Xd(a,b,c,d,e,f){if(a===c){a=a.slice(b,b+e);b=0}for(var g=b,h=b+e;g<h;){var i=Math.min(g+10000,h);e=i-g;Array.prototype.splice.apply(c,[d,f?e:0].concat(a.slice(g,i)));g=i;d+=e}}\nfunction oh(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<=b.l)}\nfunction ph(a,b){var c,d;c=a.h>>19;d=b.h>>19;return c==0?d!=0||a.h>b.h||a.h==b.h&&a.m>b.m||a.h==b.h&&a.m==b.m&&a.l>=b.l:!(d==0||a.h<b.h||a.h==b.h&&a.m<b.m||a.h==b.h&&a.m==b.m&&a.l<b.l)}\nfunction qr(a,b,c,d){var e,f;f=b;e=f.c==null||a.b.Y(c.c,f.c)>0?1:0;while(f.a[e]!=c){f=f.a[e];e=a.b.Y(c.c,f.c)>0?1:0}f.a[e]=d;d.b=c.b;d.a[0]=c.a[0];d.a[1]=c.a[1];c.a[0]=null;c.a[1]=null}\nfunction At(b){var c,d;d=new Mu;Lu(d,'name',b.c);Lu(d,'symbol',b.b);Lu(d,'mf',tt(b.a));try{Ju(d,'mass',new hd(nt(b.a)))}catch(a){a=Hg(a);if(_d(a,4)){c=a;nb(c)}else throw Gg(a)}return d}\nfunction bq(){var a;if(Object.create&&Object.getOwnPropertyNames&&aq()){return (a=Object.create(null),a['__proto__']=42,Object.getOwnPropertyNames(a).length==0)?new cq:new Xp}return new eq}\nfunction kt(a,b){var c;if(b.c<b.d)throw new It('Syntax error: maxCount<minCount');c=mt(a,b.i);if(c)if(c.a==b.a){c.d+=b.d;c.c+=b.c;return}b.c==0&&b.d==0&&(a.e=true);mr(a.g,b,(ei(),ci))==null}\nfunction Oi(a){var b;if(!(b=Ni,!b&&(b=Ni=/^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$/),b.test(a))){throw new Dj('For input string: \"'+a+'\"')}return parseFloat(a)}\nfunction Al(a,b){il(this);this.e=a;if(lh(jh(b,{l:0,m:4193280,h:Tu}),{l:0,m:0,h:0})){this.d=1;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b)])}else{this.d=2;this.a=Vd(Rd(ke,1),Ru,0,7,[Ch(b),Ch(yh(b,32))])}}\nfunction Rl(a,b,c,d,e){var f,g,h;f=true;for(g=0;g<d;g++){f=f&c[g]==0}if(e==0){wk(c,d,a,0,b)}else{h=32-e;f=f&c[g]<<h==0;for(g=0;g<b-1;g++){a[g]=c[g+d]>>>e|c[g+d+1]<<h}a[g]=c[g+d]>>>e;++g}return f}\nfunction Cs(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f='';d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;h>-1.0E100&&(f+=g+', '+h+'\\r\\n')}return f}\nfunction Ds(a){var b,c,d,e,f,g,h;e=a.d;e>~~(a.a/2)&&(e=~~(a.a/2));f=new mk;d=(new Fr(a)).a.W();b=0;while(Fn(d.a)&&b<e){++b;c=d.b=Gn(d.a);g=c.T().a;h=c.U().a;lk(f,As(g)+', '+As(h*100)+'\\r\\n')}return f}\nfunction xh(a,b){var c,d,e;b&=63;if(b<22){c=a.l<<b;d=a.m<<b|a.l>>22-b;e=a.h<<b|a.m>>22-b}else if(b<44){c=0;d=a.l<<b-22;e=a.m<<b-22|a.l>>44-b}else{c=0;d=0;e=a.l<<b-44}return {l:c&Su,m:d&Su,h:e&Tu}}\nfunction zh(a,b){var c,d,e,f;b&=63;c=a.h&Tu;if(b<22){f=c>>>b;e=a.m>>b|c<<22-b;d=a.l>>b|a.m<<22-b}else if(b<44){f=0;e=c>>>b-22;d=a.m>>b-22|a.h<<44-b}else{f=0;e=0;d=c>>>b-44}return {l:d&Su,m:e&Su,h:f&Tu}}\nfunction Es(a){var b,c,d,e,f;c=a.d;c>~~(a.a/2)&&(c=~~(a.a/2));d=Td(je,[Ru,av],[28,0],7,[c,2],2);b=0;for(f=Fo(new Go(a));Fn(f.a.a);){e=Ko(f);d[b][0]=e.a;d[b][1]=to(a,e).a;++b;if(b==c)break}return d}\nfunction hu(a,b){eu();var c,d,e,f;f=2;for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=fu(c.a.i);if(!e){if(!b){return null}else{f+=b.a*c.b}}else{f+=e.a*c.b}}return new Ri(f/2)}\nfunction Fm(){Fm=Lg;Em=new Gm('UP',0);ym=new Gm('DOWN',1);xm=new Gm('CEILING',2);zm=new Gm('FLOOR',3);Cm=new Gm('HALF_UP',4);Am=new Gm('HALF_DOWN',5);Bm=new Gm('HALF_EVEN',6);Dm=new Gm('UNNECESSARY',7)}\nfunction ys(a,b){var c,d,e,f,g;c=mv;d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);e.T();g=e.U().a;g>c&&(c=g)}d=(new Fr(a)).a.W();while(Fn(d.a)){e=d.b=Gn(d.a);f=e.T();g=e.U();mr(a,f,new Ri(g.a/c*b))}}\nfunction qm(a,b,c,d){mm();var e,f;e={l:0,m:0,h:0};for(f=0;f<c;f++){e=ih(th(jh(nh(b[f]),{l:Su,m:1023,h:0}),jh(nh(d),{l:Su,m:1023,h:0})),jh(nh(Ch(e)),{l:Su,m:1023,h:0}));a[f]=Ch(e);e=zh(e,32)}return Ch(e)}\nfunction St(a,b){var c;if(b<=0)throw new tb('Error: power='+b);if(b==1)return a;if(b==2){a.c=Ut(a,a);return a}--b;c=new Zt(a.d,a.c);while(b!=0){(b&1)!=0&&(a.c=Ut(a,c));b>>=1;b!=0&&(c.c=Ut(c,c))}return a}\nfunction wb(a){var b;if(a.c==null){b=ee(a.b)===ee(ub)?null:a.b;a.d=b==null?'null':ae(b)?b==null?null:b.name:de(b)?'String':ui(hb(b));a.a=a.a+': '+(ae(b)?b==null?null:b.message:b+'');a.c='('+a.d+') '+a.a}}\nfunction aq(){var a='__proto__';var b=Object.create(null);if(b[a]!==undefined){return false}var c=Object.getOwnPropertyNames(b);if(c.length!=0){return false}b[a]=42;if(b[a]!==42){return false}return true}\nfunction kp(a,b,c,d,e,f){var g,h,i,j;g=d-c;if(g<7){hp(b,c,d,f);return}i=c+e;h=d+e;j=i+(h-i>>1);kp(b,a,i,j,-e,f);kp(b,a,j,h,-e,f);if(f.Y(a[j-1],a[j])<=0){while(c<d){b[c++]=a[i++]}return}ip(a,i,j,h,b,c,d,f)}\nfunction jc(b,c){var d,e,f,g;for(e=0,f=b.length;e<f;e++){g=b[e];try{g[1]?g[0].ob()&&(c=ic(c,g)):g[0].ob()}catch(a){a=Hg(a);if(_d(a,9)){d=a;Ob(_d(d,38)?ee(d.b)===ee(ub)?null:d.b:d)}else throw Gg(a)}}return c}\nfunction Gp(a,b){var c,d,e,f;e=b==null?'0':''+yp(b);c=Cp(a,e);for(f=0;f<c.length;f++){d=c[f];if(xp(b,d.T())){c.length==1?(delete a.a[e],undefined):(c.splice(f,1),undefined);cn(a.b);return d.U()}}return null}\nfunction ik(a){var b,c,d,e;b=0;d=a.length;e=d-4;c=0;while(c<e){b=a.charCodeAt(c+3)+31*(a.charCodeAt(c+2)+31*(a.charCodeAt(c+1)+31*(a.charCodeAt(c)+31*b)));b=~~b;c+=4}while(c<d){b=b*31+Ij(a,c++)}b=~~b;return b}\nfunction sl(a,b){var c;if(b<0){throw new Zh('Negative exponent')}if(b==0){return cl}else if(b==1||ml(a,cl)||ml(a,gl)){return a}if(!wl(a,0)){c=1;while(!wl(a,c)){++c}return rl(Gl(c*b),sl(vl(a,c),b))}return um(a,b)}\nfunction Ks(a){var b,c,d,e,f;if(a.b.b==0){a.d=a.c;a.f=Ch(mh(zj(a.c)));return}b=1.7976931348623157E308;f=mv;c=true;for(e=Vn(new Wn(a.b));un(e.a);){d=$n(e);if(d.d>f||c){c=false;b=d.b;f=d.d}}a.d=b;a.f=Ch(mh(zj(b)))}\nfunction Kg(a,b,c){var d=Ig;var e=Jg;var f=Mg;var g=d[a];var h=f(g);if(g&&!h){_=g}else{_=d[a]=!b?{}:e(b);_.cM=c;_.constructor=_;!b&&(_.tM=Qg)}for(var i=3;i<arguments.length;++i){arguments[i].prototype=_}h&&(_.cZ=h)}\nfunction is(a,b){var c,d;c=a.i;!!b&&fn(b,a.i)&&Oj(en(b,a.i).e,'^[A-Z][a-z]?\\\\{.*\\\\}$')&&(c=en(b,a.i).e);d='';a.a!=0?(d+='['+a.a+c+']'):(d+=c);if(a.c==1&&a.d==1)return d;if(a.c==a.d)return d+a.c;return d+a.d+'-'+a.c}\nfunction Ed(a){if(!a){return cd(),bd}var b=a.valueOf?a.valueOf():a;if(b!==a){var c=Ad[typeof b];return c?c(b):Hd(typeof b)}else if(a instanceof Array||a instanceof $wnd.Array){return new Pc(a)}else{return new ud(a)}}\nfunction Vb(a,b,c,d){while(true){if(d>=a.c){wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),a.c);Wb(a,a.a);a.b=ih(a.b,nh(a.c));c+=a.c;d-=a.c;a.c=64}else{wk(b,c,a.a,Ch(jh(a.b,{l:63,m:0,h:0})),d);a.b=ih(a.b,nh(d));a.c-=d;break}}}\nfunction kj(a){var b,c,d;if(a<0){return 0}else if(a==0){return 32}else{d=-(a>>16);b=d>>16&16;c=16-b;a=a>>b;d=a-256;b=d>>16&8;c+=b;a<<=b;d=a-4096;b=d>>16&4;c+=b;a<<=b;d=a-16384;b=d>>16&2;c+=b;a<<=b;d=a>>14;b=d&~(d>>1);return c+2-b}}\nfunction Cb(b){var c=(!Ab&&(Ab=Db()),Ab);var d=b.replace(/[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]/g,function(a){return Bb(a,c)});return '\"'+d+'\"'}\nfunction wl(a,b){var c,d,e;if(b==0){return (a.a[0]&1)!=0}if(b<0){throw new Zh('Negative bit address')}e=b>>5;if(e>=a.d){return a.e<0}c=a.a[e];b=1<<(b&31);if(a.e<0){d=ol(a);if(e<d){return false}else d==e?(c=-c):(c=~c)}return (c&b)!=0}\nfunction Bu(b,c){var d,e,f,g;f=new Sq;try{for(e=Fo(new Go(b.g));Fn(e.a.a);){d=Ko(e);d.c=xj(d.c,ge(c/d.e));if(d.d>d.c)return null;Rq(f,new Xs(d))}g=Vo(f.a);jp(g,0,g.length,null);np(f,g)}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}return f}\nfunction im(a,b,c,d,e){var f,g;f={l:0,m:0,h:0};for(g=0;g<e;g++){f=ih(f,Ah(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}\nfunction ot(a){var b,c,d,e;if(a.e)throw new It('Cannot calculate exact mass of a range formula');d=0;for(c=Fo(new Go(a.g));Fn(c.a.a);){b=Ko(c);d+=b.e*fs(b)}return e=isNaN(d*dv)?d*dv:Wi(d*dv)?d*dv:d*dv==0?d*dv:Bh(mh(Math.round(d*dv))),e/dv}\nfunction cc(a){var b;b=Sd(he,Ru,0,8,7,1);b[0]=fe(Ch(a));a=zh(a,8);b[1]=fe(Ch(a));a=zh(a,8);b[2]=fe(Ch(a));a=zh(a,8);b[3]=fe(Ch(a));a=zh(a,8);b[4]=fe(Ch(a));a=zh(a,8);b[5]=fe(Ch(a));a=zh(a,8);b[6]=fe(Ch(a));a=zh(a,8);b[7]=fe(Ch(a));return b}\nfunction yh(a,b){var c,d,e,f,g;b&=63;c=a.h;d=(c&Uu)!=0;d&&(c|=-1048576);if(b<22){g=c>>b;f=a.m>>b|c<<22-b;e=a.l>>b|a.m<<22-b}else if(b<44){g=d?Tu:0;f=c>>b-22;e=a.m>>b-22|c<<44-b}else{g=d?Tu:0;f=d?Su:0;e=c>>b-44}return {l:e&Su,m:f&Su,h:g&Tu}}\nfunction Hi(a){if(a.B()){var b=a.c;b.C()?(a.k='['+b.j):!b.B()?(a.k='[L'+b.w()+';'):(a.k='['+b.w());a.b=b.v()+'[]';a.i=b.A()+'[]';return}var c=a.f;var d=a.d;d=d.split('/');a.k=Ki('.',[c,Ki('$',d)]);a.b=Ki('.',[c,Ki('.',d)]);a.i=d[d.length-1]}\nfunction bt(a){var b,c,d;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=ge(d+pt(b)*b.f)}return d}\nfunction ft(a){var b,c,d;c=new In(a.d);d=new nk('');c.a<c.c.G()&&(d=new nk((Dc(c.a<c.c.G()),lb(c.c.R(c.b=c.a++)))));while(c.a<c.c.G()){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));b.f==1?lk(d,'.'+tt(b)):b.f==0?lk(d,'.n'+tt(b)):lk(d,'.'+b.f+tt(b))}return d.a}\nfunction ts(a,b){var c,d,e,f,g,h;e=new Fs;d=(new Fr(a)).a.W();while(Fn(d.a)){f=d.b=Gn(d.a);g=f.T().a;h=f.U().a;Ar(d);g=(isNaN(g/b)?g/b:Wi(g/b)?g/b:g/b==0?g/b:Bh(mh(Math.round(g/b))))*b;c=to(e,new Ri(g));!!c&&(h+=c.a);mr(e,new Ri(g),new Ri(h))}rs(a,e)}\nfunction mh(a){var b,c,d,e,f;if(isNaN(a)){return Jh(),Ih}if(a<Xu){return Jh(),Gh}if(a>=9223372036854775807){return Jh(),Fh}e=false;if(a<0){e=true;a=-a}d=0;if(a>=Wu){d=ge(a/Wu);a-=d*Wu}c=0;if(a>=Vu){c=ge(a/Vu);a-=c*Vu}b=ge(a);f=Ug(b,c,d);e&&$g(f);return f}\nfunction bk(a){var b,c,d,e,f,g,h;g=a.length;b=0;for(f=0;f<g;){d=li(a,f,a.length);f+=d>=Zu?2:1;d<128?++b:d<2048?(b+=2):d<Zu?(b+=3):d<2097152?(b+=4):d<67108864&&(b+=5)}c=Sd(he,Ru,0,b,7,1);h=0;for(e=0;e<g;){d=li(a,e,a.length);e+=d>=Zu?2:1;h+=_j(c,h,d)}return c}\nfunction Qs(a,b,c){var d,e,f,g,h,i,j;this.e=c;this.g=b;this.a=a.a;this.b=new zp;g=Pj(c,'[^0-9,\\\\.]','');i=Qj(g,',',0);d=0;for(f=Vn(new Wn(a.b));un(f.a);){e=$n(f);j=0;i.length>d&&(j=Oi(i[d]));h=new Ct(e.c,e.b,j,e.a);gn(this.b,oj(e.c),h);++d}Js(this);Ks(this)}\nfunction Bt(b,c,d,e,f){var g;this.b=b;this.c=c;try{this.a=new ut(d,e,f)}catch(a){a=Hg(a);if(_d(a,6)){g=a;\"Group creation error: '\"+b+\"'='\"+d+\"': \"+ob(g);this.a=new ut('',e,f)}else throw Gg(a)}if(this.a.e)throw new It('Range formulas not allowed for groups')}\nfunction Vl(a){var b,c,d;if(ph(a,{l:0,m:0,h:0})){c=kh(a,{l:1755648,m:238,h:0});d=sh(a,{l:1755648,m:238,h:0})}else{b=zh(a,1);c=kh(b,{l:877824,m:119,h:0});d=sh(b,{l:877824,m:119,h:0});d=ih(xh(d,1),jh(a,{l:1,m:0,h:0}))}return wh(xh(d,32),jh(c,{l:Su,m:1023,h:0}))}\nfunction ds(a,b){if(es(a,b))return 0;if(Jj(a.i,'C')){if(Jj(b.i,'C'))return a.a-b.a;return -1}if(Jj(a.i,'H')){if(Jj(b.i,'C'))return 1;if(Jj(b.i,'H'))return a.a-b.a;return -1}if(Jj(b.i,'H')||Jj(b.i,'C')){return 1}if(Jj(a.i,b.i))return a.a-b.a;return Zj(a.i,b.i)}\nfunction nm(a,b){mm();var c,d,e,f,g,h,i,j,k;if(b.d>a.d){h=a;a=b;b=h}if(b.d<63){return tm(a,b)}g=(a.d&-2)<<4;j=vl(a,g);k=vl(b,g);d=gm(a,tl(j,g));e=gm(b,tl(k,g));i=nm(j,k);c=nm(d,e);f=nm(gm(j,d),gm(e,k));f=bm(bm(f,i),c);f=tl(f,g);i=tl(i,g<<1);return bm(bm(i,f),c)}\nfunction ah(a){var b,c,d;c=a.l;if((c&c-1)!=0){return -1}d=a.m;if((d&d-1)!=0){return -1}b=a.h;if((b&b-1)!=0){return -1}if(b==0&&d==0&&c==0){return -1}if(b==0&&d==0&&c!=0){return lj(c)}if(b==0&&d!=0&&c==0){return lj(d)+22}if(b!=0&&d==0&&c==0){return lj(b)+44}return -1}\nfunction Pg(a){var b=this;if(a=='$wnd'){return $wnd}else if(a===''){return b}if(a.substring(0,5)=='$wnd.'){b=$wnd;a=a.substring(5)}var c=a.split('.');!(c[0] in b)&&b.execScript&&b.execScript('var '+c[0]);for(var d;c.length&&(d=c.shift());){b[d]?(b=b[d]):(b=b[d]={})}return b}\nfunction Kk(a,b){var c;Fc(b);c=5-a.e;if(c==0){return a}if(c>0){if(c<Dk.length&&a.a+Ek[ge(c)]<54){return new Pk(a.f*Dk[ge(c)])}return new Rk(sm((!a.c&&(a.c=Kl(a.f)),a.c),ge(c)))}if(a.a<54&&-c<Dk.length){return Wk(a.f,Dk[ge(-c)],b)}return Vk((!a.c&&(a.c=Kl(a.f)),a.c),vm(-c),b)}\nfunction Ns(a){var b,c,d;d='Element: '+a.a+' - symbol: '+a.g+' - exact mass: '+a.d+' - mass: '+a.c+' - name: '+a.e+' - nb isotope: '+a.b.b+'\\r\\n';for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);d+='Number: '+b.c+' - mass: '+b.b+' - percentage: '+b.d+' - symbol: '+b.a+'\\r\\n'}return d}\nfunction ls(a,b,c,d){var e;if(c>d)throw new It('Error: minCount>maxCount');if(b==0){this.d=c;this.c=d;this.e=Ls(a);this.f=a.f;this.a=0;this.i=a.g;this.b=a.c;return}e=dn(a.b,new fj(b));if(!e)throw new It('Isotope not found');this.a=b;this.i=a.g;this.b=e.b;this.e=e.b;this.d=c;this.c=d}\nfunction Ql(a,b){var c,d,e,f,g;d=b>>5;b&=31;if(d>=a.d){return a.e<0?(hl(),bl):(hl(),gl)}f=a.d-d;e=Sd(ke,Ru,0,f+1,7,1);Rl(e,f,a.a,d,b);if(a.e<0){for(c=0;c<d&&a.a[c]==0;c++);if(c<d||b>0&&a.a[c]<<32-b!=0){for(c=0;c<f&&e[c]==-1;c++){e[c]=0}c==f&&++f;++e[c]}}g=new zl(a.e,f,e);kl(g);return g}\nfunction kr(a,b,c,d){var e,f;if(!b){return c}else{e=a.b.Y(c.c,b.c);if(e==0){d.d=co(b,c.d);d.b=true;return b}f=e<0?0:1;b.a[f]=kr(a,b.a[f],c,d);if(lr(b.a[f])){if(lr(b.a[1-f])){b.b=true;b.a[0].b=false;b.a[1].b=false}else{lr(b.a[f].a[f])?(b=sr(b,1-f)):lr(b.a[f].a[1-f])&&(b=rr(b,1-f))}}}return b}\nfunction Jc(a,b){var c,d,e,f;a=''+a;c=new tk(a.length+16*b.length);f=0;d=0;while(d<b.length){e=a.indexOf('%s',f);if(e==-1){break}qk(c,a.substr(f,e-f));pk(c,b[d++]);f=e+2}qk(c,Wj(a,f,a.length-f));if(d<b.length){c.a+=' [';pk(c,b[d++]);while(d<b.length){c.a+=', ';pk(c,b[d++])}c.a+=']'}return c.a}\nfunction hl(){hl=Lg;var a;cl=new yl(1,1);el=new yl(1,10);gl=new yl(0,0);bl=new yl(-1,1);dl=Vd(Rd(jf,1),Ru,5,0,[gl,cl,new yl(1,2),new yl(1,3),new yl(1,4),new yl(1,5),new yl(1,6),new yl(1,7),new yl(1,8),new yl(1,9),el]);fl=Sd(jf,Ru,5,32,0,1);for(a=0;a<fl.length;a++){fl[a]=Ll(xh({l:1,m:0,h:0},a))}}\nfunction eu(){eu=Lg;du=new zp;hn(du,'O',oj(0));hn(du,'N',oj(1));hn(du,'H',oj(-1));hn(du,'C',oj(2));hn(du,'F',oj(-1));hn(du,'Cl',oj(-1));hn(du,'Br',oj(-1));hn(du,'I',oj(-1));hn(du,'S',oj(0));hn(du,'P',oj(1));hn(du,'Li',oj(-1));hn(du,'Na',oj(-1));hn(du,'K',oj(-1));hn(du,'Ca',oj(0));hn(du,'Mg',oj(0))}\nfunction vu(a,b,c){var d,e,f,g,h,i,j,k;h=new Mu;k=a.c.gb('referenceVersion');k!=null&&!Jj(k,'')&&(c=(Ht(),Ht(),Ft));if(c){i=new Gu;Ju(h,'elements',i.a);for(e=Vn(new Wn(c));un(e.a);){d=$n(e);Fu(i,Ms(d).a)}}if(b){j=new Gu;Ju(h,'groups',j.a);for(g=Vn(new Wn(b));un(g.a);){f=$n(g);Fu(j,At(f).a)}}return h}\nfunction et(b){var c,d,e;e=Qj(b,'/',0);if(e.length!=2)throw new It('Syntax error: bad fraction syntax: '+b);try{c=Pi(e[1]);if(c==0)throw new It('Syntax error: divide by zero: '+b);d=Pi(e[0]);return d/c}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad fraction syntax: '+b)}else throw Gg(a)}}\nfunction mm(){mm=Lg;var a,b;jm=Sd(jf,Ru,5,32,0,1);km=Sd(jf,Ru,5,32,0,1);lm=Vd(Rd(ke,1),Ru,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu]);a={l:1,m:0,h:0};for(b=0;b<=18;b++){jm[b]=Ll(a);km[b]=Ll(xh(a,b));a=th(a,{l:5,m:0,h:0})}for(;b<km.length;b++){jm[b]=rl(jm[b-1],jm[1]);km[b]=rl(km[b-1],(hl(),el))}}\nfunction pm(a,b,c,d,e){var f,g,h,i;if(ee(a)===ee(b)&&d==e){wm(a,d,c);return}for(h=0;h<d;h++){g={l:0,m:0,h:0};f=a[h];for(i=0;i<e;i++){g=ih(ih(th(jh(nh(f),{l:Su,m:1023,h:0}),jh(nh(b[i]),{l:Su,m:1023,h:0})),jh(nh(c[h+i]),{l:Su,m:1023,h:0})),jh(nh(Ch(g)),{l:Su,m:1023,h:0}));c[h+i]=Ch(g);g=zh(g,32)}c[h+e]=Ch(g)}}\nfunction _s(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not defined');d=0;for(c=new In(a.d);c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d+=nt(b)*b.f}return e=isNaN(d*cv)?d*cv:Wi(d*cv)?d*cv:d*cv==0?d*cv:Bh(mh(Math.round(d*cv))),e/cv}\nfunction at(a){var b,c,d,e;if(a.c)throw new It('Cannot calculate mass: this is a range formula');if(a.e)throw new It('The mass is not clearly defined');b=0;for(d=new In(a.d);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));b+=ot(c)*c.f}return e=isNaN(b*dv)?b*dv:Wi(b*dv)?b*dv:b*dv==0?b*dv:Bh(mh(Math.round(b*dv))),e/dv}\nfunction rm(a,b){var c,d,e,f,g,h,i,j,k;j=a.e;if(j==0){return hl(),gl}d=a.d;c=a.a;if(d==1){e=th(jh(nh(c[0]),{l:Su,m:1023,h:0}),jh(nh(b),{l:Su,m:1023,h:0}));i=Ch(e);g=Ch(zh(e,32));return g==0?new yl(j,i):new zl(j,2,Vd(Rd(ke,1),Ru,0,7,[i,g]))}h=d+1;f=Sd(ke,Ru,0,h,7,1);f[d]=qm(f,c,d,b);k=new zl(j,h,f);kl(k);return k}\nfunction tm(a,b){var c,d,e,f,g,h,i,j,k,l,m;d=a.d;f=b.d;h=d+f;i=a.e!=b.e?-1:1;if(h==2){k=th(jh(nh(a.a[0]),{l:Su,m:1023,h:0}),jh(nh(b.a[0]),{l:Su,m:1023,h:0}));m=Ch(k);l=Ch(zh(k,32));return l==0?new yl(i,m):new zl(i,2,Vd(Rd(ke,1),Ru,0,7,[m,l]))}c=a.a;e=b.a;g=Sd(ke,Ru,0,h,7,1);om(c,d,e,f,g);j=new zl(i,h,g);kl(j);return j}\nfunction Il(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p;m=b.length;i=m;if(b.charCodeAt(0)==45){k=-1;l=1;--m}else{k=1;l=0}f=(Ul(),Tl)[10];e=~~(m/f);p=m%f;p!=0&&++e;h=Sd(ke,Ru,0,e,7,1);c=Sl[8];g=0;n=l+(p==0?f:p);for(o=l;o<i;o=n,n=n+f){d=Pi(b.substr(o,n-o));j=(mm(),qm(h,h,g,c));j+=fm(h,g,d);h[g++]=j}a.e=k;a.d=g;a.a=h;kl(a)}\nfunction Dh(a){var b,c,d,e,f;if(a.l==0&&a.m==0&&a.h==0){return '0'}if(a.h==Uu&&a.m==0&&a.l==0){return '-9223372036854775808'}if(a.h>>19!=0){return '-'+Dh(uh(a))}c=a;d='';while(!(c.l==0&&c.m==0&&c.h==0)){e=nh(Yu);c=Vg(c,e,true);b=''+Ch(Rg);if(!(c.l==0&&c.m==0&&c.h==0)){f=9-b.length;for(;f>0;f--){b='0'+b}}d=b+d}return d}\nfunction Ms(a){var b,c,d,e,f,g;d=new Mu;Lu(d,'symbol',a.g);Ju(d,'monoisotopicMass',new hd(a.d));Ju(d,'mass',new hd(a.c));Lu(d,'name',a.e);Ju(d,'atomicNumber',new hd(a.a));f=new Gu;Ju(d,'isotopes',f.a);for(c=Vn(new Wn(a.b));un(c.a);){b=$n(c);e=(g=new Mu,Ju(g,'mass',new hd(b.b)),Ju(g,'percentage',new hd(b.d)),g);Fu(f,e.a)}return d}\nfunction Au(a,b){var c,d,e,f;f='';for(d=new In(a.a);d.a<d.c.G();){c=(Dc(d.a<d.c.G()),d.c.R(d.b=d.a++));e=gs(c.a);(e==null?!!Dp(b.a,null):!(b.c.gb(e)===undefined))&&(Jj((e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c.substr(0,1),'{')?(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).c):(e=(e==null?Xm(Dp(b.a,null)):b.c.gb(e)).b));c.b>1?(f+=e+c.b):c.b>0&&(f+=e)}return f}\nfunction Lt(a){var b,c,d,e,f;c=true;for(e=new In(a.d.d);e.a<e.c.G();){d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(c){a.e=new _t(a,d,a.c);xs(a.e.c,d.f);b=a.e;c=false}else{b=new _t(a,d,a.c);xs(b.c,d.f);rs(a.e.c,b.c)}if(d.b!=''){f=new Ri(vs(b.c));_m(a.g,f)?gn(a.g,f,dn(a.g,f)+','+d.b):gn(a.g,f,d.b)}}if(a.e.c.d==0)throw new It('Isotopic distribution: empty table')}\nfunction Pi(a){var b,c,d,e,f;if(a==null){throw new Dj('null')}d=a.length;e=d>0&&(a.charCodeAt(0)==45||a.charCodeAt(0)==43)?1:0;for(b=e;b<d;b++){if(mi(a.charCodeAt(b))==-1){throw new Dj('For input string: \"'+a+'\"')}}f=parseInt(a,10);c=f<$u;if(isNaN(f)){throw new Dj('For input string: \"'+a+'\"')}else if(c||f>Ou){throw new Dj('For input string: \"'+a+'\"')}return f}\nfunction ll(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;f=b.e;if(f==0){throw new Zh('BigInteger divide by zero')}e=b.d;d=b.a;if(e==1){return Zl(a,d[0],f)}m=a.a;n=a.d;c=n!=e?n>e?1:-1:em(m,d,n);if(c<0){return Vd(Rd(jf,1),Ru,5,0,[gl,a])}o=a.e;h=n-e+1;i=o==f?1:-1;g=Sd(ke,Ru,0,h,7,1);j=Yl(g,h,m,n,d,e);k=new zl(i,h,g);l=new zl(o,e,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\nfunction Ik(a,b){var c,d,e,f,g,h;e=Mk(a);h=Mk(b);if(e==h){if(a.e==b.e&&a.a<54&&b.a<54){return a.f<b.f?-1:a.f>b.f?1:0}d=a.e-b.e;c=(a.d>0?a.d:uj((a.a-1)*ev)+1)-(b.d>0?b.d:uj((b.a-1)*ev)+1);if(c>d+1){return e}else if(c<d-1){return -e}else{f=(!a.c&&(a.c=Kl(a.f)),a.c);g=(!b.c&&(b.c=Kl(b.f)),b.c);d<0?(f=rl(f,vm(-d))):d>0&&(g=rl(g,vm(d)));return jl(f,g)}}else return e<h?-1:1}\nfunction Zl(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o;m=a.a;n=a.d;o=a.e;if(n==1){d=jh(nh(m[0]),{l:Su,m:1023,h:0});e=jh(nh(b),{l:Su,m:1023,h:0});f=kh(d,e);i=sh(d,e);o!=c&&(f=uh(f));o<0&&(i=uh(i));return Vd(Rd(jf,1),Ru,5,0,[Ll(f),Ll(i)])}h=o==c?1:-1;g=Sd(ke,Ru,0,n,7,1);j=Vd(Rd(ke,1),Ru,0,7,[$l(g,m,n,b)]);k=new zl(h,n,g);l=new zl(o,1,j);kl(k);kl(l);return Vd(Rd(jf,1),Ru,5,0,[k,l])}\nfunction am(a,b,c,d,e){var f,g,h;f={l:0,m:0,h:0};g={l:0,m:0,h:0};for(h=0;h<d;h++){f=(mm(),ih(th(jh(nh(c[h]),{l:Su,m:1023,h:0}),jh(nh(e),{l:Su,m:1023,h:0})),jh(nh(Ch(f)),{l:Su,m:1023,h:0})));g=ih(Ah(jh(nh(a[b+h]),{l:Su,m:1023,h:0}),jh(f,{l:Su,m:1023,h:0})),g);a[b+h]=Ch(g);g=yh(g,32);f=zh(f,32)}g=ih(Ah(jh(nh(a[b+d]),{l:Su,m:1023,h:0}),f),g);a[b+d]=Ch(g);return Ch(yh(g,32))}\nfunction _l(a,b){var c,d,e,f,g;d=jh(nh(b),{l:Su,m:1023,h:0});if(ph(a,{l:0,m:0,h:0})){f=kh(a,d);g=sh(a,d)}else{c=zh(a,1);e=nh(b>>>1);f=kh(c,e);g=sh(c,e);g=ih(xh(g,1),jh(a,{l:1,m:0,h:0}));if((b&1)!=0){if(rh(f,g)){g=Ah(g,f)}else{if(rh(Ah(f,g),d)){g=ih(g,Ah(d,f));f=Ah(f,{l:1,m:0,h:0})}else{g=ih(g,Ah(xh(d,1),f));f=Ah(f,{l:2,m:0,h:0})}}}}return wh(xh(g,32),jh(f,{l:Su,m:1023,h:0}))}\nfunction lu(a,b,c){ku();var d,e,f,g,h,i,j,k,l,m,n,o;i=~~(~~((b.b-1)/b.a)/2);h=a[0][0];g=a[a.length-1][0];k=Ch(mh(zj((g-h)/c*b.a)))+2*b.a*i+1;o=Sd(je,av,0,k,7,1);for(m=0,n=a.length;m<n;++m){l=a[m];d=Ch(mh(zj((l[0]-h)/c*b.a+b.a*i)));for(f=0;f<b.c.length;f++){o[d+f-b.a*i]+=b.c[f]*l[1]}}j=Td(je,[Ru,av],[28,0],7,[k,2],2);for(e=0;e<k;e++){j[e][0]=(e/b.a-i)*c+h;j[e][1]=o[e]}return j}\nfunction $k(a,b,c){var d;d=0;switch(c.b){case 7:if(b!=0){throw new Zh('Rounding necessary')}break;case 0:d=b==0?0:b<0?-1:1;break;case 2:d=(b==0?0:b<0?-1:1)>0?b==0?0:b<0?-1:1:0;break;case 3:d=(b==0?0:b<0?-1:1)<0?b==0?0:b<0?-1:1:0;break;case 4:(b<0?-b:b)>=5&&(d=b==0?0:b<0?-1:1);break;case 5:(b<0?-b:b)>5&&(d=b==0?0:b<0?-1:1);break;case 6:(b<0?-b:b)+a>5&&(d=b==0?0:b<0?-1:1);}return d}\nfunction zt(a,b,c,d){var e,f,g,h,i,j,k,l,m;if(b.indexOf(',')==-1)throw new It('Syntax error: combinatorial');if(c!=d)throw new It('Combinatorial range formulae are not allowed');j=Qj(b,',',0);i=0;h=j.length;m=new nk('{');for(g=0;g<h-1;g++){l=Tj(j[g]);f=new ut(l,a.c,a.d);lk(m,st(f)+',');i+=nt(f)}k=Tj(j[h-1]);e=new ut(k,a.c,a.d);lk(m,st(e)+'}');i+=nt(e);i/=h;kt(a,new js(m.a,i,c,d))}\nfunction Yg(a,b,c,d,e,f){var g,h,i,j,k,l,m;j=_g(b)-_g(a);g=xh(b,j);i=Ug(0,0,0);while(j>=0){h=gh(a,g);if(h){j<22?(i.l|=1<<j,undefined):j<44?(i.m|=1<<j-22,undefined):(i.h|=1<<j-44,undefined);if(a.l==0&&a.m==0&&a.h==0){break}}k=g.m;l=g.h;m=g.l;bh(g,l>>>1);g.m=k>>>1|(l&1)<<21;g.l=m>>>1|(k&1)<<21;--j}c&&$g(i);if(f){if(d){Rg=uh(a);e&&(Rg=Ah(Rg,(Jh(),Hh)))}else{Rg=Ug(a.l,a.m,a.h)}}return i}\nfunction Vh(){var a=navigator.userAgent.toLowerCase();var b=$doc.documentMode;if(function(){return a.indexOf('webkit')!=-1}())return 'safari';if(function(){return a.indexOf('msie')!=-1&&b>=10&&b<11}())return 'ie10';if(function(){return a.indexOf('msie')!=-1&&b>=9&&b<11}())return 'ie9';if(function(){return a.indexOf('msie')!=-1&&b>=8&&b<11}())return 'ie8';if(function(){return a.indexOf('gecko')!=-1||b>=11}())return 'gecko1_8';return 'unknown'}\nfunction vm(a){mm();var b,c,d,e;b=ge(a);if(a<km.length){return km[b]}else if(a<=50){return sl((hl(),el),b)}else if(a<=1000){return tl(sl(jm[1],b),b)}if(a>cv){throw new Zh('power of ten too big')}if(a<=Ou){return tl(sl(jm[1],b),b)}d=sl(jm[1],Ou);e=d;c=mh(a-Ou);b=ge(a%Ou);while(oh(c,{l:Su,m:511,h:0})){e=rl(e,d);c=Ah(c,{l:Su,m:511,h:0})}e=rl(e,sl(jm[1],b));e=tl(e,Ou);c=mh(a-Ou);while(oh(c,{l:Su,m:511,h:0})){e=tl(e,Ou);c=Ah(c,{l:Su,m:511,h:0})}e=tl(e,b);return e}\nfunction Qj(l,a,b){var c=new RegExp(a,'g');var d=[];var e=0;var f=l;var g=null;while(true){var h=c.exec(f);if(h==null||f==''||e==b-1&&b>0){d[e]=f;break}else{d[e]=f.substring(0,h.index);f=f.substring(h.index+h[0].length,f.length);c.lastIndex=0;if(g==f){d[e]=f.substring(0,1);f=f.substring(1)}g=f;e++}}if(b==0&&l.length>0){var i=d.length;while(i>0&&d[i-1]==''){--i}i<d.length&&d.splice(i,d.length-i)}var j=Vj(d.length);for(var k=0;k<d.length;++k){j[k]=d[k]}return j}\nfunction gm(a,b){var c,d,e,f,g,h,i,j,k,l;g=a.e;i=b.e;if(i==0){return a}if(g==0){return b.e==0?b:new zl(-b.e,b.d,b.a)}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});g<0&&(c=uh(c));i<0&&(d=uh(d));return Ll(Ah(c,d))}e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==-1){l=-i;k=g==i?hm(b.a,h,a.a,f):cm(b.a,h,a.a,f)}else{l=g;if(g==i){if(e==0){return hl(),gl}k=hm(a.a,f,b.a,h)}else{k=cm(a.a,f,b.a,h)}}j=new zl(l,k.length,k);kl(j);return j}\nfunction $l(a,b,c,d){var e,f,g,h,i,j,k;j={l:0,m:0,h:0};f=jh(nh(d),{l:Su,m:1023,h:0});for(h=c-1;h>=0;h--){k=wh(xh(j,32),jh(nh(b[h]),{l:Su,m:1023,h:0}));if(ph(k,{l:0,m:0,h:0})){i=kh(k,f);j=sh(k,f)}else{e=zh(k,1);g=nh(d>>>1);i=kh(e,g);j=sh(e,g);j=ih(xh(j,1),jh(k,{l:1,m:0,h:0}));if((d&1)!=0){if(rh(i,j)){j=Ah(j,i)}else{if(rh(Ah(i,j),f)){j=ih(j,Ah(f,i));i=Ah(i,{l:1,m:0,h:0})}else{j=ih(j,Ah(xh(f,1),i));i=Ah(i,{l:2,m:0,h:0})}}}}a[h]=Ch(jh(i,{l:Su,m:1023,h:0}))}return Ch(j)}\nfunction wk(a,b,c,d,e){var f,g,h,i,j,k,l,m,n;Gc(a,'src');Gc(c,'dest');m=hb(a);i=hb(c);Ac((m.e&4)!=0,'srcType is not an array');Ac((i.e&4)!=0,'destType is not an array');l=m.c;g=i.c;Ac((l.e&1)!=0?l==g:(g.e&1)==0,\"Array types don't match\");n=a.length;j=c.length;if(b<0||d<0||e<0||b+e>n||d+e>j){throw new $h}if(((l.e&1)==0||(l.e&4)!=0)&&m!=i){k=a;f=c;if(ee(a)===ee(c)&&b<d){b+=e;for(h=d+e;h-->d;){f[h]=k[--b]}}else{for(h=d+e;d<h;){f[d++]=k[b++]}}}else e>0&&Xd(a,b,c,d,e,true)}\nfunction Ul(){Ul=Lg;Sl=Vd(Rd(ke,1),Ru,0,7,[$u,1162261467,gv,1220703125,362797056,1977326743,gv,387420489,Yu,214358881,429981696,815730721,1475789056,170859375,268435456,410338673,612220032,893871739,1280000000,1801088541,113379904,148035889,191102976,244140625,308915776,387420489,481890304,594823321,729000000,887503681,gv,1291467969,1544804416,1838265625,60466176]);Tl=Vd(Rd(ke,1),Ru,0,7,[-1,-1,31,19,15,13,11,11,10,9,9,8,8,8,8,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5])}\nfunction Nk(a){var b,c,d,e,f;if(a.g!=null){return a.g}if(a.a<32){a.g=Wl(mh(a.f),ge(a.e));return a.g}e=Xl((!a.c&&(a.c=Kl(a.f)),a.c),0);if(a.e==0){return e}b=(!a.c&&(a.c=Kl(a.f)),a.c).e<0?2:1;c=e.length;d=-a.e+c-b;f=new sk;f.a+=e;if(a.e>0&&d>=-6){if(d>=0){rk(f,c-ge(a.e),'.')}else{f.a=Sj(f.a,0,b-1)+'0.'+Rj(f.a,b-1);rk(f,b+1,dk(Ak,0,-ge(d)-1))}}else{if(c-b>=1){f.a=Sj(f.a,0,b)+'.'+Rj(f.a,b);++c}f.a=Sj(f.a,0,c)+'E'+Rj(f.a,c);d>0&&rk(f,++c,'+');rk(f,++c,''+Dh(mh(d)))}a.g=f.a;return a.g}\nfunction Nt(b){var c,d,e;if(b.e.c.d==0)throw new tb('No isotopic distribution data');mr(b.e.c,new Ri(Ao(er(b.e.c)).a-2),new Ri(0));mr(b.e.c,new Ri(Ao(fr(b.e.c)).a+2),new Ri(0));d=new zp;hn(d,'FWHM',b.b+'');hn(d,'Threshold',b.a+'');try{if(b.d.d.b.length==1){e=Ro(b.d.d,0);hn(d,'Monoisotopic mass',ot(e)+'');hn(d,'Molecular weight',nt(e)+'');!!gu(e,null)&&hn(d,'Unsaturation',gu(e,null)+'')}}catch(a){a=Hg(a);if(_d(a,6)){c=a;nb(c)}else throw Gg(a)}return Bs(b.e.c,b.d+' - fwhm: '+b.b,b.g,d)}\nfunction Vk(a,b,c){var d,e,f,g,h,i,j;f=ll(a,b);g=f[0];i=f[1];if(i.e==0){return new Rk(g)}j=a.e*b.e;if(Ml(b)<54){h=ql(i);e=ql(b);d=qh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?-1:oh(xh(qh(h,{l:0,m:0,h:0})?uh(h):h,1),qh(e,{l:0,m:0,h:0})?uh(e):e)?1:0;d=$k(wl(g,0)?1:0,j*(5+d),c)}else{d=jl(ul(i.e<0?new zl(1,i.d,i.a):i),b.e<0?new zl(1,b.d,b.a):b);d=$k(wl(g,0)?1:0,j*(5+d),c)}if(d!=0){if(Ml(g)<54){return al(ih(ql(g),nh(d)))}g=bm(g,Ll(nh(d)));return new Rk(g)}return new Rk(g)}\nfunction _j(a,b,c){if(c<128){a[b]=fe(c&127);return 1}else if(c<2048){a[b++]=fe(c>>6&31|192);a[b]=fe(c&63|128);return 2}else if(c<Zu){a[b++]=fe(c>>12&15|224);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 3}else if(c<2097152){a[b++]=fe(c>>18&7|240);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 4}else if(c<67108864){a[b++]=fe(c>>24&3|248);a[b++]=fe(c>>18&63|128);a[b++]=fe(c>>12&63|128);a[b++]=fe(c>>6&63|128);a[b]=fe(c&63|128);return 5}throw new cj('Character out of range: '+c)}\nfunction bm(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;g=a.e;i=b.e;if(g==0){return b}if(i==0){return a}f=a.d;h=b.d;if(f+h==2){c=jh(nh(a.a[0]),{l:Su,m:1023,h:0});d=jh(nh(b.a[0]),{l:Su,m:1023,h:0});if(g==i){k=ih(c,d);o=Ch(k);n=Ch(zh(k,32));return n==0?new yl(g,o):new zl(g,2,Vd(Rd(ke,1),Ru,0,7,[o,n]))}return Ll(g<0?Ah(d,c):Ah(c,d))}else if(g==i){m=g;l=f>=h?cm(a.a,f,b.a,h):cm(b.a,h,a.a,f)}else{e=f!=h?f>h?1:-1:em(a.a,b.a,f);if(e==0){return hl(),gl}if(e==1){m=g;l=hm(a.a,f,b.a,h)}else{m=i;l=hm(b.a,h,a.a,f)}}j=new zl(m,l.length,l);kl(j);return j}\nfunction dm(a,b,c,d,e){var f,g;f=ih(jh(nh(b[0]),{l:Su,m:1023,h:0}),jh(nh(d[0]),{l:Su,m:1023,h:0}));a[0]=Ch(f);f=yh(f,32);if(c>=e){for(g=1;g<e;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<c;g++){f=ih(f,jh(nh(b[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}else{for(g=1;g<c;g++){f=ih(f,ih(jh(nh(b[g]),{l:Su,m:1023,h:0}),jh(nh(d[g]),{l:Su,m:1023,h:0})));a[g]=Ch(f);f=yh(f,32)}for(;g<e;g++){f=ih(f,jh(nh(d[g]),{l:Su,m:1023,h:0}));a[g]=Ch(f);f=yh(f,32)}}vh(f,{l:0,m:0,h:0})&&(a[g]=Ch(f))}\nfunction wm(a,b,c){var d,e,f,g,h;for(f=0;f<b;f++){d={l:0,m:0,h:0};for(h=f+1;h<b;h++){d=ih(ih(th(jh(nh(a[f]),{l:Su,m:1023,h:0}),jh(nh(a[h]),{l:Su,m:1023,h:0})),jh(nh(c[f+h]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[f+h]=Ch(d);d=zh(d,32)}c[f+b]=Ch(d)}Pl(c,c,b<<1);d={l:0,m:0,h:0};for(e=0,g=0;e<b;++e,g++){d=ih(ih(th(jh(nh(a[e]),{l:Su,m:1023,h:0}),jh(nh(a[e]),{l:Su,m:1023,h:0})),jh(nh(c[g]),{l:Su,m:1023,h:0})),jh(nh(Ch(d)),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32);++g;d=ih(d,jh(nh(c[g]),{l:Su,m:1023,h:0}));c[g]=Ch(d);d=zh(d,32)}return c}\nfunction th(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;c=a.l&8191;d=a.l>>13|(a.m&15)<<9;e=a.m>>4&8191;f=a.m>>17|(a.h&255)<<5;g=(a.h&1048320)>>8;h=b.l&8191;i=b.l>>13|(b.m&15)<<9;j=b.m>>4&8191;k=b.m>>17|(b.h&255)<<5;l=(b.h&1048320)>>8;B=c*h;C=d*h;D=e*h;F=f*h;G=g*h;if(i!=0){C+=c*i;D+=d*i;F+=e*i;G+=f*i}if(j!=0){D+=c*j;F+=d*j;G+=e*j}if(k!=0){F+=c*k;G+=d*k}l!=0&&(G+=c*l);n=B&Su;o=(C&511)<<13;m=n+o;q=B>>22;r=C>>9;s=(D&262143)<<4;t=(F&31)<<17;p=q+r+s+t;v=D>>18;w=F>>5;A=(G&4095)<<8;u=v+w+A;p+=m>>22;m&=Su;u+=p>>22;p&=Su;u&=Tu;return Ug(m,p,u)}\nfunction jt(b,c,d,e,f,g){var h,i,j,k,l,m;if(Jj(c,'Zcharge')){b.a+=d;return}if(c.charCodeAt(0)==91){h=1;while(ni(c.charCodeAt(h)))++h;if(f==0){try{f=Pi(c.substr(1,h-1))}catch(a){a=Hg(a);if(_d(a,6)){throw new It('Bad isotope syntax')}else throw Gg(a)}}c=Sj(c,h,c.length-1)}i=en(b.c,c);if(!i){l=en(b.d,c);if(!l)throw new It('Unrecognized symbol: '+c);if(f!=0)throw new It('Syntax error: cannot specify isotopes for groups');if(g){k=Fo(new Go(l.a.g));while(Fn(k.a.a)){j=Ko(k);m=new ks(j);m.d*=d;m.c*=e;kt(b,m)}}else{kt(b,new ms(l,d,e))}}else{kt(b,new ls(i,f,d,e))}}\nfunction Uh(a){Th.call(this,''+('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.'),_d('Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.',9)?'Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value ('+a+').\\n'+'Expect more errors.':null)}\nfunction Tt(a,b){var c,d,e,f,g,h,i,j,k,l,m;m=new wt(new bu(a));Im(m,b);j=1;for(e=Fo(new Go(m.g));Fn(e.a.a);){c=Ko(e);h=en(a.a,c.i);h.b.b>j&&(j=h.b.b)}k=2*j*vj(qt(m)+1)/vj(2);l=a.d.b/(k*4);Yt(a,l);mr(a.c,new Ri(0),new Ri(1));for(d=Fo(new Go(m.g));Fn(d.a.a);){c=Ko(d);h=en(a.a,c.i);if(c.a!=0){f=new Os(c.b,c.b,h.g,h.e,h.a);h=f}if(h.b.b==0){i=new Ct(ge(h.c+0.5),h.c,1,h.g);gn(h.b,new fj(i.c),i)}if(fs(c)<0){throw new It('Number of element under 0')}else if(fs(c)==0);else if(fs(c)==1){a.c=Ut(a,new $t(a.d,h,a.a))}else{g=new $t(a.d,h,a.a);Yt(g,a.b);a.c=Ut(a,St(g,fs(c)))}}}\nfunction Vg(a,b,c){var d,e,f,g,h,i;if(b.l==0&&b.m==0&&b.h==0){throw new Zh('divide by zero')}if(a.l==0&&a.m==0&&a.h==0){c&&(Rg=Ug(0,0,0));return Ug(0,0,0)}if(b.h==Uu&&b.m==0&&b.l==0){return Wg(a,c)}i=false;if(b.h>>19!=0){b=uh(b);i=true}g=ah(b);f=false;e=false;d=false;if(a.h==Uu&&a.m==0&&a.l==0){e=true;f=true;if(g==-1){a=Tg((Jh(),Fh));d=true;i=!i}else{h=yh(a,g);i&&$g(h);c&&(Rg=Ug(0,0,0));return h}}else if(a.h>>19!=0){f=true;a=uh(a);d=true;i=!i}if(g!=-1){return Xg(a,g,i,f,c)}if(!ph(a,b)){c&&(f?(Rg=uh(a)):(Rg=Ug(a.l,a.m,a.h)));return Ug(0,0,0)}return Yg(d?a:Ug(a.l,a.m,a.h),b,i,f,e,c)}\nfunction uc(a,b){var c,d,e,f,g,h,i,j,k;if(!b.length){return a.q('Unknown','anonymous',-1,-1)}k=Tj(b);Jj(k.substr(0,3),'at ')&&(k=Wj(k,3,k.length-3));k=k.replace(/\\[.*?\\]/g,'');g=k.indexOf('(');if(g==-1){g=k.indexOf('@');if(g==-1){j=k;k=''}else{j=Tj(Wj(k,g+1,k.length-(g+1)));k=Tj(k.substr(0,g))}}else{c=k.indexOf(')',g);j=k.substr(g+1,c-(g+1));k=Tj(k.substr(0,g))}g=Lj(k,ak(46));g!=-1&&(k=Wj(k,g+1,k.length-(g+1)));(!k.length||Jj(k,'Anonymous function'))&&(k='anonymous');h=Mj(j,ak(58));e=Nj(j,ak(58),h-1);i=-1;d=-1;f='Unknown';if(h!=-1&&e!=-1){f=j.substr(0,e);i=pc(j.substr(e+1,h-(e+1)));d=pc(Wj(j,h+1,j.length-(h+1)))}return a.q(f,k,i,d)}\nfunction pr(a,b,c){var d,e,f,g,h,i,j,k,l,m,n;if(!a.c){return false}g=null;m=null;i=new Gr(null,null);e=1;i.a[1]=a.c;l=i;while(l.a[e]){j=e;h=m;m=l;l=l.a[e];d=a.b.Y(b,l.c);e=d<0?0:1;d==0&&(!c.c||Pq(l.d,c.d))&&(g=l);if(!(!!l&&l.b)&&!lr(l.a[e])){if(lr(l.a[1-e])){m=m.a[j]=sr(l,e)}else if(!lr(l.a[1-e])){n=m.a[1-j];if(n){if(!lr(n.a[1-j])&&!lr(n.a[j])){m.b=false;n.b=true;l.b=true}else{f=h.a[1]==m?1:0;lr(n.a[j])?(h.a[f]=rr(m,j)):lr(n.a[1-j])&&(h.a[f]=sr(m,j));l.b=h.a[f].b=true;h.a[f].a[0].b=false;h.a[f].a[1].b=false}}}}}if(g){c.b=true;c.d=g.d;if(l!=g){k=new Gr(l.c,l.d);qr(a,i,g,k);m==g&&(m=k)}m.a[m.a[1]==l?1:0]=l.a[!l.a[0]?1:0];--a.d}a.c=i.a[1];!!a.c&&(a.c.b=false);return c.b}\nfunction Vt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);!!c&&!!d&&(rj(c.a-m)<rj(d.a-m)?(d=null):(c=null));if(c){if(to(k,c).a>l){l+=to(k,c).a;m=c.a}else{l+=to(k,c).a;nr(k,c)}}else if(d){if(to(k,d).a>l){l+=to(k,d).a;m=d.a}else{l+=to(k,d).a;nr(k,d)}}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\nfunction vt(a,b,c,d,e){var f,g,h,i,j,k,l;$r.call(this);this.c=b;this.d=c;this.f=d;h=a.indexOf('$');if(h>-1){this.b=Wj(a,h+1,a.length-(h+1));a=a.substr(0,h)}g=new RegExp('(\\\\([0-9]+[+-]\\\\))');for(j=g.exec(a);j;j=g.exec(a)){f=j[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9]+)([+-])$','$2$1'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('(\\\\([+-][0-9]+\\\\))');for(k=g.exec(a);k;k=g.exec(a)){f=k[0];l=Pi(Pj(Pj(Pj(f,'[^0-9+-]',''),'^([0-9])([+-])$','$1$2'),'^[+]',''));a=a.replace(g,'(Zcharge'+l+')')}g=new RegExp('([+-])(?![0-9])');for(i=g.exec(a);i;i=g.exec(a)){f=i[0];Jj(f,'+')?(a=a.replace(g,'Zcharge')):(a=a.replace(g,'(Zcharge-1)'))}Oj(a,'[a-zA-Z][0-9]+-[0-9]')&&(this.e=true);a.indexOf('}')!=-1;yt(this,a,e)}\nfunction Wt(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;f=b.c.a;a.c.d>f&&zs(a.c);b.c.d>f&&zs(b.c);k=new Fs;j=(new Fr(b.c)).a.W();e=0;while(Fn(j.a)){i=j.b=Gn(j.a);h=i.T();g=i.U();q=(new Fr(a.c)).a.W();while(Fn(q.a)){p=q.b=Gn(q.a);o=p.T();n=p.U();m=o.a+h.a;l=n.a*g.a;d=Wm(hr(k,new Ri(m)));c=Wm(gr(k,new Ri(m)));if(!!d&&Qi(d,new Ri(m))){l+=to(k,c).a}else{!!d&&rj(d.a-m)>a.b&&(d=null);!!c&&rj(c.a-m)>a.b&&(c=null);if(!!c&&!!d){m=(m*l+c.a*to(k,c).a+d.a*to(k,d).a)/(l+to(k,c).a+to(k,d).a);l+=to(k,c).a+to(k,d).a;nr(k,c);nr(k,d)}else if(c){m=(m*l+c.a*to(k,c).a)/(l+to(k,c).a);l+=to(k,c).a;nr(k,c)}else if(d){m=(m*l+d.a*to(k,d).a)/(l+to(k,d).a);l+=to(k,d).a;nr(k,d)}}l>a.d.a/bv&&mr(k,new Ri(m),new Ri(l));l>e&&(e=l)}k.d>f&&zs(k)}xs(k,1/e);return k}\nfunction Hk(){Hk=Lg;var a,b,c;new Qk({l:1,m:0,h:0},0);new Qk({l:10,m:0,h:0},0);new Qk({l:0,m:0,h:0},0);zk=Sd(hf,Ru,14,11,0,1);Ak=Sd(ie,Ru,0,100,7,1);Bk=Vd(Rd(je,1),av,0,7,[1,5,25,125,625,3125,15625,78125,390625,1953125,9765625,48828125,244140625,1220703125,6103515625,30517578125,152587890625,762939453125,3814697265625,19073486328125,95367431640625,476837158203125,2384185791015625]);Ck=Sd(ke,Ru,0,Bk.length,7,1);Dk=Vd(Rd(je,1),av,0,7,[1,10,100,1000,10000,bv,cv,10000000,100000000,Yu,dv,100000000000,1000000000000,10000000000000,100000000000000,1000000000000000,10000000000000000]);Ek=Sd(ke,Ru,0,Dk.length,7,1);Fk=Sd(hf,Ru,14,11,0,1);a=0;for(;a<Fk.length;a++){zk[a]=new Qk(nh(a),0);Fk[a]=new Qk({l:0,m:0,h:0},a);Ak[a]=48}for(;a<Ak.length;a++){Ak[a]=48}for(c=0;c<Ck.length;c++){Ck[c]=Sk(Bk[c])}for(b=0;b<Ek.length;b++){Ek[b]=Sk(Dk[b])}mm()}\nfunction Jk(a,b){var c,d,e,f,g,h,i,j;c=0;g=0;f=b.length;j=new tk(b.length);if(0<f&&b.charCodeAt(0)==43){++g;++c;if(g<f&&(b.charCodeAt(g)==43||b.charCodeAt(g)==45)){throw new Dj('For input string: \"'+b+'\"')}}while(g<f&&b.charCodeAt(g)!=46&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}Wh(j,b,c,g);if(g<f&&b.charCodeAt(g)==46){++g;c=g;while(g<f&&b.charCodeAt(g)!=101&&b.charCodeAt(g)!=69){++g}a.e=g-c;Wh(j,b,c,g)}else{a.e=0}if(g<f&&(b.charCodeAt(g)==101||b.charCodeAt(g)==69)){++g;c=g;if(g<f&&b.charCodeAt(g)==43){++g;g<f&&b.charCodeAt(g)!=45&&++c}h=b.substr(c,f-c);a.e=a.e-Pi(h);if(a.e!=ge(a.e)){throw new Dj('Scale out of range.')}}i=j.a;if(i.length<16){a.f=Zk(i);if(Xi(a.f)){throw new Dj('For input string: \"'+b+'\"')}a.a=Sk(a.f)}else{Lk(a,new Cl(i))}a.d=j.a.length;for(e=0;e<j.a.length;++e){d=Ij(j.a,e);if(d!=45&&d!=48){break}--a.d}a.d==0&&(a.d=1)}\nfunction Yl(a,b,c,d,e,f){var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;q=Sd(ke,Ru,0,d+1,7,1);r=Sd(ke,Ru,0,f+1,7,1);i=kj(e[f-1]);if(i!=0){Ol(r,e,0,i);Ol(q,c,0,i)}else{wk(c,0,q,0,d);wk(e,0,r,0,f)}j=r[f-1];l=b-1;m=d;while(l>=0){if(q[m]==j){k=-1}else{s=ih(xh(jh(nh(q[m]),{l:Su,m:1023,h:0}),32),jh(nh(q[m-1]),{l:Su,m:1023,h:0}));v=_l(s,j);k=Ch(v);u=Ch(yh(v,32));if(k!=0){t=false;++k;do{--k;if(t){break}o=th(jh(nh(k),{l:Su,m:1023,h:0}),jh(nh(r[f-2]),{l:Su,m:1023,h:0}));w=ih(xh(nh(u),32),jh(nh(q[m-2]),{l:Su,m:1023,h:0}));p=ih(jh(nh(u),{l:Su,m:1023,h:0}),jh(nh(j),{l:Su,m:1023,h:0}));kj(Ch(zh(p,32)))<32?(t=true):(u=Ch(p))}while(oh(Eh(o,{l:0,m:0,h:Uu}),Eh(w,{l:0,m:0,h:Uu})))}}if(k!=0){g=am(q,m-f,r,f,k);if(g!=0){--k;h={l:0,m:0,h:0};for(n=0;n<f;n++){h=ih(h,ih(jh(nh(q[m-f+n]),{l:Su,m:1023,h:0}),jh(nh(r[n]),{l:Su,m:1023,h:0})));q[m-f+n]=Ch(h);h=zh(h,32)}}}a[l]=k;--m;--l}if(i!=0){Rl(r,f,q,0,i);return r}wk(q,0,r,0,f);return q}\nfunction Db(){var a=['\\\\u0000','\\\\u0001','\\\\u0002','\\\\u0003','\\\\u0004','\\\\u0005','\\\\u0006','\\\\u0007','\\\\b','\\\\t','\\\\n','\\\\u000B','\\\\f','\\\\r','\\\\u000E','\\\\u000F','\\\\u0010','\\\\u0011','\\\\u0012','\\\\u0013','\\\\u0014','\\\\u0015','\\\\u0016','\\\\u0017','\\\\u0018','\\\\u0019','\\\\u001A','\\\\u001B','\\\\u001C','\\\\u001D','\\\\u001E','\\\\u001F'];a[34]='\\\\\"';a[92]='\\\\\\\\';a[173]='\\\\u00ad';a[1536]='\\\\u0600';a[1537]='\\\\u0601';a[1538]='\\\\u0602';a[1539]='\\\\u0603';a[1757]='\\\\u06dd';a[1807]='\\\\u070f';a[6068]='\\\\u17b4';a[6069]='\\\\u17b5';a[8203]='\\\\u200b';a[8204]='\\\\u200c';a[8205]='\\\\u200d';a[8206]='\\\\u200e';a[8207]='\\\\u200f';a[8232]='\\\\u2028';a[8233]='\\\\u2029';a[8234]='\\\\u202a';a[8235]='\\\\u202b';a[8236]='\\\\u202c';a[8237]='\\\\u202d';a[8238]='\\\\u202e';a[8288]='\\\\u2060';a[8289]='\\\\u2061';a[8290]='\\\\u2062';a[8291]='\\\\u2063';a[8292]='\\\\u2064';a[8298]='\\\\u206a';a[8299]='\\\\u206b';a[8300]='\\\\u206c';a[8301]='\\\\u206d';a[8302]='\\\\u206e';a[8303]='\\\\u206f';a[65279]='\\\\ufeff';a[65529]='\\\\ufff9';a[65530]='\\\\ufffa';a[65531]='\\\\ufffb';return a}\nfunction Wl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n;h=qh(a,{l:0,m:0,h:0});h&&(a=uh(a));if(lh(a,{l:0,m:0,h:0})){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:l=new sk;b<0?(l.a+='0E+',l):(l.a+='0E',l);l.a+=b==$u?'2147483648':''+-b;return l.a;}}j=Sd(ie,Ru,0,19,7,1);c=18;n=a;do{i=n;n=kh(n,{l:10,m:0,h:0});j[--c]=Ch(ih({l:48,m:0,h:0},Ah(i,th(n,{l:10,m:0,h:0}))))&_u}while(vh(n,{l:0,m:0,h:0}));d=Ah(Ah(Ah({l:18,m:0,h:0},nh(c)),nh(b)),{l:1,m:0,h:0});if(b==0){h&&(j[--c]=45);return dk(j,c,18-c)}if(b>0&&ph(d,{l:4194298,m:Su,h:Tu})){if(ph(d,{l:0,m:0,h:0})){e=c+Ch(d);for(g=17;g>=e;g--){j[g+1]=j[g]}j[++e]=46;h&&(j[--c]=45);return dk(j,c,18-c+1)}for(f=2;qh(nh(f),ih(uh(d),{l:1,m:0,h:0}));f++){j[--c]=48}j[--c]=46;j[--c]=48;h&&(j[--c]=45);return dk(j,c,18-c)}m=c+1;k=new tk;h&&(k.a+='-',k);if(18-m>=1){ok(k,j[c]);k.a+='.';k.a+=dk(j,c+1,18-c-1)}else{k.a+=dk(j,c,18-c)}k.a+='E';oh(d,{l:0,m:0,h:0})&&(k.a+='+',k);k.a+=''+Dh(d);return k.a}\nfunction dt(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B;b=Pj(b,' ','');b=Pj(b,'^([0-9]+[A-Z][a-z]?)$','[$1]');Oj(b,'.*[a-zA-Z][0-9]+-[0-9].*')&&(a.c=true);r=new RegExp('([A-Z][a-z]?\\\\{[0-9.,]*\\\\})');for(t=r.exec(b);t;t=r.exec(b)){h=t[1];p=(v=$s(h),w=Pj(h,'\\\\{.*',''),an(a.a,v)||hn(a.a,v,new Qs(en(a.a,w),v,h)),v);b=b.replace(r,p)}r=new RegExp('(\\\\{[A-Za-z0-9]*\\\\})');for(s=r.exec(b);s;s=r.exec(b)){h=s[1];q=(A=$s(h),B=Pj(h,'[\\\\{\\\\}]',''),an(a.b,A)||hn(a.b,A,new Bt(A,h,B,a.a,a.b)),A);b=b.replace(r,q)}b.indexOf('}')!=-1;g=Qj(b,'\\\\.',0);n=1;o=false;for(e=0,f=g.length;e<f;++e){d=g[e];if(ct(d)){if(o)throw new It(\"Syntax error: 'number.number.'\");n=Oi(d);o=true;continue}u=d.indexOf('/');if(u!=-1){if(o)throw new It(\"Syntax error: 'number.number/number'\");k=u+1;l=d.length;while(ni(Ij(d,k++))){if(k>=l)break}k<l&&--k;n=et(d.substr(0,k));o=true;if(k>=l)continue;else d=Wj(d,k,d.length-k)}j=0;for(;j<d.length;j++){if(!ni(d.charCodeAt(j)))break}if(j>0){m=Oi(d.substr(0,j));d=Wj(d,j,d.length-j);o?(n+=m/yj(10,j)):(n=m)}i=new vt(d,a.a,a.b,n,c);i.f==0&&(a.e=true);i.e&&(a.c=true);Qo(a.d,i);n=1;o=false}}\nfunction Bs(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;t=new mk;s=a.d;s>~~(a.a/2)&&(s=~~(a.a/2));t.a+='##TITLE= '+b+'\\r\\n'+'##JCAMP-DX= 5.00\\r\\n'+'##DATA TYPE= MASS SPECTRUM\\r\\n'+'##DATA CLASS= PEAK TABLE\\r\\n'+'##ORIGIN= Generated spectrum based on ChemCalc www.chemcalc.org\\r\\n'+'##SPECTROMETER/DATA SYSTEM= Based on ChemCalc isotopic distribution calculator\\r\\n'+'##XUNITS= M/Z\\r\\n'+'##YUNITS= RELATIVE ABUNDANCE\\r\\n'+'##NPOINTS=         \\r\\n';e=t.a.length;t.a+='##MAXY= 100\\r\\n##MINY= 0\\r\\n';for(n=Mn(new Nn(d));un(n.a);){m=Rn(n);lk(t,'##$'+m+'='+(m==null?Xm(Dp(d.a,null)):d.c.gb(m))+'\\r\\n')}t.a+='##PEAK TABLE= (XY..XY)\\r\\n';p=0;l=(new Fr(a)).a.W();o=(new Nn(c)).H(Sd(Pe,Ru,7,(new Nn(c)).a.b,0,1));jp(o,0,o.length,(pp(),pp(),op));g=0;q=mv;j=true;f=0;r=false;w='';while(Fn(l.a)&&f<s){++f;h=l.b=Gn(l.a);u=h.T().a;v=h.U().a;v<1.0E-9&&(v=0);if(v!=0&&w.length>0){t.a+=w;++p;w=''}i=true;for(k=g;k<o.length;k++){if(!Fn(l.a)||rj(o[k].a-q)<rj(o[k].a-u)){if(i){t.a+='  $$ ';i=false}else{t.a+=','}lk(t,dn(c,o[k]));++g}else{break}}q=u;if(j){j=false;lk(t,As(u)+', '+As(v*100));++p}else{if(!r||v!=0){t.a+='\\r\\n';lk(t,As(u)+', '+As(v*100));++p}else{w='\\r\\n'+As(u)+', '+As(0)}v==0?(r=true):(r=false)}}t.a+='\\r\\n##END=\\r\\n';t.a=Sj(t.a,0,e-10)+(p+'')+Rj(t.a,e-2);return t}\nfunction Xl(a,b){Ul();var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G;A=a.e;n=a.d;e=a.a;if(A==0){switch(b){case 0:return '0';case 1:return '0.0';case 2:return '0.00';case 3:return '0.000';case 4:return '0.0000';case 5:return '0.00000';case 6:return '0.000000';default:v=new sk;b<0?(v.a+='0E+',v):(v.a+='0E',v);v.a+=-b;return v.a;}}s=n*10+1+7;t=Sd(ie,Ru,0,s+1,7,1);c=s;if(n==1){g=e[0];if(g<0){G=jh(nh(g),{l:Su,m:1023,h:0});do{o=G;G=kh(G,{l:10,m:0,h:0});t[--c]=48+Ch(Ah(o,th(G,{l:10,m:0,h:0})))&_u}while(vh(G,{l:0,m:0,h:0}))}else{G=g;do{o=G;G=~~(G/10);t[--c]=48+(o-G*10)&_u}while(G!=0)}}else{C=Sd(ke,Ru,0,n,7,1);F=n;wk(e,0,C,0,n);H:while(true){w={l:0,m:0,h:0};for(i=F-1;i>=0;i--){D=ih(xh(w,32),jh(nh(C[i]),{l:Su,m:1023,h:0}));q=Vl(D);C[i]=Ch(q);w=nh(Ch(yh(q,32)))}r=Ch(w);p=c;do{t[--c]=48+r%10&_u}while((r=~~(r/10))!=0&&c!=0);d=9-p+c;for(h=0;h<d&&c>0;h++){t[--c]=48}k=F-1;for(;C[k]==0;k--){if(k==0){break H}}F=k+1}while(t[c]==48){++c}}m=A<0;f=s-c-b-1;if(b==0){m&&(t[--c]=45);return dk(t,c,s-c)}if(b>0&&f>=-6){if(f>=0){j=c+f;for(l=s-1;l>=j;l--){t[l+1]=t[l]}t[++j]=46;m&&(t[--c]=45);return dk(t,c,s-c+1)}for(k=2;k<-f+1;k++){t[--c]=48}t[--c]=46;t[--c]=48;m&&(t[--c]=45);return dk(t,c,s-c)}B=c+1;u=new tk;m&&(u.a+='-',u);if(s-B>=1){ok(u,t[c]);u.a+='.';u.a+=dk(t,c+1,s-c-1)}else{u.a+=dk(t,c,s-c)}u.a+='E';f>0&&(u.a+='+',u);u.a+=''+f;return u.a}\nfunction Wb(a,b){var c,d,e,f;Yb(b,a.e);c=a.d[0];d=a.d[1];e=a.d[2];f=a.d[3];c=Zb(c,d,e,f,a.e[0],7,-680876936);f=Zb(f,c,d,e,a.e[1],12,-389564586);e=Zb(e,f,c,d,a.e[2],17,606105819);d=Zb(d,e,f,c,a.e[3],22,-1044525330);c=Zb(c,d,e,f,a.e[4],7,-176418897);f=Zb(f,c,d,e,a.e[5],12,1200080426);e=Zb(e,f,c,d,a.e[6],17,-1473231341);d=Zb(d,e,f,c,a.e[7],22,-45705983);c=Zb(c,d,e,f,a.e[8],7,1770035416);f=Zb(f,c,d,e,a.e[9],12,-1958414417);e=Zb(e,f,c,d,a.e[10],17,-42063);d=Zb(d,e,f,c,a.e[11],22,-1990404162);c=Zb(c,d,e,f,a.e[12],7,1804603682);f=Zb(f,c,d,e,a.e[13],12,-40341101);e=Zb(e,f,c,d,a.e[14],17,-1502002290);d=Zb(d,e,f,c,a.e[15],22,1236535329);c=$b(c,d,e,f,a.e[1],5,-165796510);f=$b(f,c,d,e,a.e[6],9,-1069501632);e=$b(e,f,c,d,a.e[11],14,643717713);d=$b(d,e,f,c,a.e[0],20,-373897302);c=$b(c,d,e,f,a.e[5],5,-701558691);f=$b(f,c,d,e,a.e[10],9,38016083);e=$b(e,f,c,d,a.e[15],14,-660478335);d=$b(d,e,f,c,a.e[4],20,-405537848);c=$b(c,d,e,f,a.e[9],5,568446438);f=$b(f,c,d,e,a.e[14],9,-1019803690);e=$b(e,f,c,d,a.e[3],14,-187363961);d=$b(d,e,f,c,a.e[8],20,1163531501);c=$b(c,d,e,f,a.e[13],5,-1444681467);f=$b(f,c,d,e,a.e[2],9,-51403784);e=$b(e,f,c,d,a.e[7],14,1735328473);d=$b(d,e,f,c,a.e[12],20,-1926607734);c=_b(c,d,e,f,a.e[5],4,-378558);f=_b(f,c,d,e,a.e[8],11,-2022574463);e=_b(e,f,c,d,a.e[11],16,1839030562);d=_b(d,e,f,c,a.e[14],23,-35309556);c=_b(c,d,e,f,a.e[1],4,-1530992060);f=_b(f,c,d,e,a.e[4],11,1272893353);e=_b(e,f,c,d,a.e[7],16,-155497632);d=_b(d,e,f,c,a.e[10],23,-1094730640);c=_b(c,d,e,f,a.e[13],4,681279174);f=_b(f,c,d,e,a.e[0],11,-358537222);e=_b(e,f,c,d,a.e[3],16,-722521979);d=_b(d,e,f,c,a.e[6],23,76029189);c=_b(c,d,e,f,a.e[9],4,-640364487);f=_b(f,c,d,e,a.e[12],11,-421815835);e=_b(e,f,c,d,a.e[15],16,530742520);d=_b(d,e,f,c,a.e[2],23,-995338651);c=ac(c,d,e,f,a.e[0],6,-198630844);f=ac(f,c,d,e,a.e[7],10,1126891415);e=ac(e,f,c,d,a.e[14],15,-1416354905);d=ac(d,e,f,c,a.e[5],21,-57434055);c=ac(c,d,e,f,a.e[12],6,1700485571);f=ac(f,c,d,e,a.e[3],10,-1894986606);e=ac(e,f,c,d,a.e[10],15,-1051523);d=ac(d,e,f,c,a.e[1],21,-2054922799);c=ac(c,d,e,f,a.e[8],6,1873313359);f=ac(f,c,d,e,a.e[15],10,-30611744);e=ac(e,f,c,d,a.e[6],15,-1560198380);d=ac(d,e,f,c,a.e[13],21,1309151649);c=ac(c,d,e,f,a.e[4],6,-145523070);f=ac(f,c,d,e,a.e[11],10,-1120210379);e=ac(e,f,c,d,a.e[2],15,718787259);d=ac(d,e,f,c,a.e[9],21,-343485551);a.d[0]=~~(a.d[0]+c);a.d[1]=~~(a.d[1]+d);a.d[2]=~~(a.d[2]+e);a.d[3]=~~(a.d[3]+f)}\nfunction yt(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;c=Tj(c);c=Pj(c,'[=]','');if(c.indexOf('.')!=-1)throw new tb('Error: the formula \"'+c+'\"contains dots (error in parsing)');if(Jj(c,'')){return}if(ni(c.charCodeAt(0))){throw new tb('Error: the formula starts with a number')}c.charCodeAt(0)==120&&(c='X'+Sj(c,1,c.length));g=new dr;k=1;j=1;m=1;l=1;r=1;q=1;w=c.length-1;while(w>=0){if(ni(c.charCodeAt(w))){f=w;while(w>0&&ni(c.charCodeAt(w)))--w;e=c.substr(w+1,f+1-(w+1));u=Pi(e);if(c.charCodeAt(w)==45){--w;if(w<0)throw new It(\"Syntax error: the formula starts with '-': \"+c);f=w;while(w>0&&ni(c.charCodeAt(w)))--w;w==0&&ni(c.charCodeAt(0))&&--w;o=c.substr(w+1,f+1-(w+1));if(o.length==0){u=Pi('-'+e);v=u}else{v=Pi(o)}}else v=u;if(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l;l*=u;m*=v}else{k=v;j=u}}else{if(c.charCodeAt(w)==93){s=w;--w;if(w<=1)throw new It('Syntax error: bad isotope syntax');if(!oi(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');while(w>0&&qi(c.charCodeAt(w)))--w;if(!ri(c.charCodeAt(w)))throw new It('Syntax error: bad symbol (must start with uppercase)');t=c.substr(w,s-w);--w;if(w<0)throw new It('Syntax error: bad isotope syntax');if(!ni(c.charCodeAt(w)))throw new It('Syntax error: bad isotope syntax');f=w;while(w>0&&c.charCodeAt(w)!=91)--w;p=c.substr(w+1,f+1-(w+1));try{n=Pi(p)}catch(a){a=Hg(a);if(_d(a,20)){throw new It('Syntax error: bad isotope number '+p)}else throw Gg(a)}if(c.charCodeAt(w)!=91)throw new It(\"Isotope syntax error: no opening '['\");jt(b,t,k*m,j*l,n,d);j=1;k=1;if(w>0)--w;else return}else{if(oi(c.charCodeAt(w))){s=w;while(w>0&&qi(c.charCodeAt(w)))--w;if(s==0&&w==0&&c.charCodeAt(0)==110){b.f=0;return}if(!ri(c.charCodeAt(w)))throw new It('Syntax error: the symbol must start with uppercase');t=c.substr(w,s+1-w);if(Jj(t,'X')&&w==0){b.f=0;return}--w;jt(b,t,k*m,j*l,0,d);j=1;k=1}else{while(c.charCodeAt(w)==41){--w;if(w<0)throw new It(\"Syntax error: the formula starts with ')': \"+c);cr(g,new fj(r));cr(g,new fj(q));r=m;q=l}if(w<0)break;while(c.charCodeAt(w)==40){l=q;m=r;if(g.a.b.length==0){q=1;r=1}else{q=br(g).a;r=br(g).a}--w;if(w<0)break}if(w<0)break;if(c.charCodeAt(w)==125){i=w;while(w>0&&c.charCodeAt(w)!=123)--w;if(c.charCodeAt(w)!=123)throw new It('Syntax error (combinatorial): no opening brace');zt(b,c.substr(w+1,i-(w+1)),k*m,j*l);--w}}}}if(w<0)break;h=c.charCodeAt(w);if(h==123)throw new It('Syntax error (combinatorial): no closing brace');if(h==91)throw new It('Syntax error (isotope): no closing bracket');if(!(null!=String.fromCharCode(h).match(/[A-Z\\d]/i))&&h!=40&&h!=91&&h!=123&&h!=93&&h!=41&&h!=125)throw new It(\"Syntax error: unrecognized character: '\"+Zd(h)+\"'\")}}\nfunction wu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N;u=new Mu;if(!b){Ju(u,'error',new Id('options is null'));return u}J=b.c.gb('referenceVersion');J!=null&&!Jj(J,'')&&(d=(Ht(),Ht(),Ft));C=b.c.gb('mf');r=b.c.gb('isotopomers');M=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;n=new Ri(0.001);try{n=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}L=new Ri(1.0E-5);try{L=new Ri(Oi(b.c.gb('threshold')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}p=0;try{p=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}h=null;try{h=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}t=0;!(b.c.gb('joiningAlgorithm')===undefined)&&Jj(b.c.gb('joiningAlgorithm').toLowerCase(),'center')&&(t=Jt);w=new Mu;C==null?Ju(w,'mf',(cd(),cd(),bd)):Ju(w,'mf',new Id(C));Ju(w,'threshold',new hd(L.a));Ju(w,'fwhm',new hd(n.a));Ju(w,'typedResult',(Xc(),M?Wc:Vc));r==null?Ju(w,'isotopomers',(cd(),cd(),bd)):Ju(w,'isotopomers',new Id(r));p>0&&Ju(w,'gaussianWidth',new hd(p));J==null?Ju(w,'referenceVersion',(cd(),cd(),bd)):Ju(w,'referenceVersion',new Id(J));Ju(u,'options',w.a);if(C!=null){C=Tj(C);Jj(C,'')&&(C=null)}if(C!=null){try{k=new gt(C,d,c);if(k.d.b.length>0){if(k.e){Ju(u,'error',new Id('mass not defined'))}else{if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',ft(k));Ju(u,'mf',D.a)}else{Lu(u,'mf',ft(k))}Ju(u,'mw',new hd(_s(k)));Ju(u,'em',new hd(at(k)));Ju(u,'nominalMass',new hd(bt(k)));if(r!=null&&!Jj(r,'')){K=new Qt(d,k,n.a,L.a);K.f=t;Lt(K);Mt(K);if(p>0){o=mu(p);Kt(K,o,n.a)}Ju(w,'numberLines',new hd(K.e.c.d));if(r.indexOf('jcamp')>-1){if(M){s=new Mu;Ju(s,'type',new Id('jcamp'));Lu(s,'value',Nt(K).a);Ju(u,'jcamp',s.a)}else{Lu(u,'jcamp',Nt(K).a)}}if(r.indexOf('xy')>-1){if(M){N=new Mu;Ju(N,'type',new Id('xy'));Lu(N,'value',Ot(K).a);Ju(u,'xy',N.a)}else{Lu(u,'xy',Ot(K).a)}}if(r.indexOf('array')>-1&&r.indexOf('arrayX')==-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'spectrum',v.a)}if(r.indexOf('arrayXXYY')>-1){e=Pt(K);v=new Gu;A=new Gu;B=new Gu;for(q=0;q<e.length;q++){Fu(A,new hd(e[q][0]));Fu(B,new hd(e[q][1]))}Fu(v,A.a);Fu(v,B.a);Ju(u,'arrayXXYY',v.a)}if(r.indexOf('arrayXYXY')>-1){e=Pt(K);Ju(u,'arrayXYXY',(new Iu(e)).a)}}I=new Gu;Ju(u,'parts',I.a);for(m=new In(k.d);m.a<m.c.G();){l=(Dc(m.a<m.c.G()),m.c.R(m.b=m.a++));H=new Mu;Fu(I,H.a);if(M){D=new Mu;Ju(D,'type',new Id('mf'));Lu(D,'value',tt(l));Ju(H,'mf',D.a)}else{Lu(H,'mf',tt(l))}Ju(H,'mw',new hd(nt(l)));Ju(H,'em',new hd(ot(l)));l.b.length>0&&Lu(H,'comment',l.b);Ku(H,gu(l,h));G=ot(l)-l.a*nv;if(l.a!=0){Ju(H,'charge',new hd(l.a));G=G/sj(l.a)}Ju(H,'msem',new hd(G));lt(l);i=new Gu;for(g=Fo(new Go(l.g));Fn(g.a.a);){f=Ko(g);j=new Mu;Lu(j,'element',f.i);Ju(j,'number',new hd(fs(f)));Ju(j,'percentage',new hd(f.g));Fu(i,j.a)}Ju(H,'ea',i.a)}}}else{Ju(u,'error',new Id('there is no part in the molecule'))}}catch(a){a=Hg(a);if(_d(a,4)){F=a;Lu(u,'error',F.f)}else throw Gg(a)}}else{Ju(u,'error',new Id('parameter mf not specified'))}return u}\nfunction zu(b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,A,B,C,D,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,ab,bb;F=0.5;Q=0;K=50;I=1000;s=false;bb=false;R=false;v=b.c.gb('jcampLink')!=null&&(ei(),Kj('true',b.c.gb('jcampLink'))?di:ci).a;u=b.c.gb('jcampBaseURL')==null?'http://www.chemcalc.org/service/jcamp/':b.c.gb('jcampBaseURL');N='C0-100H0-202N0-10O0-10F0-3Cl0-3Br0-1';Y=mv;X=new $r;$=b.c.gb('typedResult')!=null&&(ei(),Kj('true',b.c.gb('typedResult'))?di:ci).a;q=new Ri(0.001);try{q=new Ri(Oi(b.c.gb('fwhm')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}r=0;try{r=ge(Oi(b.c.gb('gaussianWidth')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}A=new Mu;if(!b){Ju(A,'error',new Id('options is null'));return A}U=b.c.gb('referenceVersion');U!=null&&!Jj(U,'')&&(d=(Ht(),Ht(),Ft));l=null;try{l=new Ri(Oi(b.c.gb('defaultUnsaturationContribution')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Q=Oi(b.c.gb('minUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{K=Oi(b.c.gb('maxUnsaturation'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}if(!(b.c.gb('integerUnsaturation')===undefined)){try{s=(ei(),Kj('true',b.c.gb('integerUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('useUnsaturation')===undefined)){try{bb=(ei(),Kj('true',b.c.gb('useUnsaturation')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}if(!(b.c.gb('numberOfResultsOnly')===undefined)){try{R=(ei(),Kj('true',b.c.gb('numberOfResultsOnly')))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}}try{I=Oi(b.c.gb('maxNumberRows'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{Y=Oi(b.c.gb('monoisotopicMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}try{F=Oi(b.c.gb('massRange'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}P=Y-F;H=Y+F;try{H=Oi(b.c.gb('maxMass'))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}!(b.c.gb('mfRange')===undefined)&&b.c.gb('mfRange')!=null&&b.c.gb('mfRange').length>0&&(N=b.c.gb('mfRange'));if(Y<0){Ju(A,'error',new Id('monoisotopicMass must be specified and larger than 0'));return A}B=new Mu;Ju(B,'minUnsaturation',new hd(Q));Ju(B,'maxUnsaturation',new hd(K));Ju(B,'integerUnsaturation',(Xc(),s?Wc:Vc));Ju(B,'useUnsaturation',bb?Wc:Vc);Ju(B,'numberOfResultsOnly',R?Wc:Vc);Ju(B,'minMass',new hd(Bh(mh(Math.round(P*dv)))/dv));Ju(B,'maxMass',new hd(Bh(mh(Math.round(H*dv)))/dv));Ju(B,'massRange',new hd(Bh(mh(Math.round(F*dv)))/dv));N==null?Ju(B,'mfRange',(cd(),cd(),bd)):Ju(B,'mfRange',new Id(N));Ju(B,'monoisotopicMass',new hd(Bh(mh(Math.round(Y*dv)))/dv));U==null?Ju(B,'referenceVersion',(cd(),cd(),bd)):Ju(B,'referenceVersion',new Id(U));Ju(B,'jcampLink',v?Wc:Vc);u==null?Ju(B,'jcampBaseURL',(cd(),cd(),bd)):Ju(B,'jcampBaseURL',new Id(u));Ju(B,'typedResult',$?Wc:Vc);Ju(A,'options',B.a);t={l:0,m:0,h:0};S={l:0,m:0,h:0};f=0;g=0;try{e=new ht(N,d,c,false);if(e.d.b.length!=1){Ju(A,'error',new Id('Number of parts not equal to 1'));return A}f=Ro(e.d,0).a;g=f<0?-f:f;if(f!=0){Y=Y*g+f*nv;P=P*g+f*nv;H=H*g+f*nv;F=F*g}T=Bu(Ro(e.d,0),Y+F);if(T){j=Sd(je,av,0,T.a.b.length,7,1);O=Sd(je,av,0,T.a.b.length,7,1);G=Sd(je,av,0,T.a.b.length,7,1);xu(T,O,G);Ju(A,'bruteForceIteration',new hd(Oi(Xl(yu(T),0))));Z=false;k=0;J=T.a.b.length;Ws((Vq(0,T.a.b.length),Ro(T.a,0)),0,Y,O[0],G[0],F);while(!Z){if(oh(t,{l:3511296,m:476,h:0})){throw new It('Iteration number is over the current maximum of: 2000000000')}if(j[k]>=P&&j[k]<=H){ab=hu(T,l);if(!bb||!ab||ab.a>=Q&&ab.a<=K&&(!s||ab.a==ge(ab.a))){S=ih(S,{l:1,m:0,h:0});if(!R){if(X.g.d>=I){if(rj(Ao(fr(X.g)).a)>rj(j[k]-Y)){Wm(vo(X.g));Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}else{Zr(X,new Du(j[k]-Y,j[k],ab,Au(T,c)))}}}}while(k<J&&k>=0){t=ih(t,{l:1,m:0,h:0});i=(Vq(k,T.a.b.length),Ro(T.a,k));if(i.b<i.c){++i.b;k==0?(j[0]=i.a.e*i.b):(j[k]=j[k-1]+i.a.e*i.b);if(k<J-1){++k;Ws((Vq(k,T.a.b.length),Ro(T.a,k)),j[k-1],Y,O[k],G[k],F)}else{break}}else{--k}}k<0&&(Z=true)}}Ju(A,'realIteration',new hd(Bh(Ah(t,{l:1,m:0,h:0}))));Ju(A,'numberResults',new hd(Bh(S)));Ju(A,'charge',new hd(f))}catch(a){a=Hg(a);if(_d(a,4)){m=a;Lu(A,'error',ob(m)+'\\r'+(ti(Dg),Dg.k+'@'+nj(Nb(B),16)))}else throw Gg(a)}D=new Gu;h='';f!=0&&(f>0?(h='(+'+f+')'):(h='('+f+')'));for(W=Fo(new Go(X.g));Fn(W.a.a);){V=Ko(W);C=new Mu;if(f==0){p=Bh(mh(zj(V.a*dv)))/dv;o=Bh(mh(zj(V.c*dv)))/dv}else{p=Bh(mh(zj(V.a/g*dv)))/dv;o=Bh(mh(zj((V.c-f*nv)/g*dv)))/dv}Ju(C,'error',new hd(p));Ju(C,'em',new hd(o));Ju(C,'ppm',new hd(Bh(mh(Math.round(p/o*dv)))/dv*cv));Lu(C,'info',V.b+h);try{w=u+V.b+'&fwhm='+q;r>0&&(w+='&gaussianWidth='+r);if($){L=new Mu;Ju(L,'type',new Id('mf'));Lu(L,'value',ft(new gt(V.b+h,d,c)));Ju(C,'mf',L.a);if(v){M=new Mu;Ju(M,'type',new Id('jcamp'));w==null?Ju(M,'url',(cd(),cd(),bd)):Ju(M,'url',new Id(w));Ju(C,'jcamp',M.a)}}else{Lu(C,'mf',ft(new gt(V.b+h,d,c)));v&&(w==null?Ju(C,'jcampURL',(cd(),cd(),bd)):Ju(C,'jcampURL',new Id(w)))}}catch(a){a=Hg(a);if(_d(a,4)){n=a;Lu(C,'mf',ob(n))}else throw Gg(a)}try{Ju(C,'unsat',new hd(Bh(mh(zj(V.d.a*dv)))/dv))}catch(a){a=Hg(a);if(!_d(a,6))throw Gg(a)}Fu(D,C.a)}Ju(A,'results',D.a);return A}\nfunction Ht(){Ht=Lg;var b,c,d,e,f,g,h,i,j,k,l,m;Ft=new zp;e=new zp;k=Qj('1\\tH\\tHydrogen\\t1.0079407538967635\\n2\\tHe\\tHelium\\t4.002601932146926\\n3\\tLi\\tLithium\\t6.940037632200444\\n4\\tBe\\tBeryllium\\t9.01218224\\n5\\tB\\tBoron\\t10.8110281284\\n6\\tC\\tCarbon\\t12.010735896764565\\n7\\tN\\tNitrogen\\t14.006703211872013\\n8\\tO\\tOxygen\\t15.99940492727602\\n9\\tF\\tFluorine\\t18.998403227\\n10\\tNe\\tNeon\\t20.180046379828486\\n11\\tNa\\tSodium\\t22.989769280929\\n12\\tMg\\tMagnesium\\t24.305051612756515\\n13\\tAl\\tAluminium\\t26.9815386312\\n14\\tSi\\tSilicon\\t28.085498706539465\\n15\\tP\\tPhosphorus\\t30.973761632000002\\n16\\tS\\tSulfur\\t32.0647872364133\\n17\\tCl\\tChlorine\\t35.4529375824264\\n18\\tAr\\tArgon\\t39.947676713373\\n19\\tK\\tPotassium\\t39.0983011264695\\n20\\tCa\\tCalcium\\t40.078022655762524\\n21\\tSc\\tScandium\\t44.95591199\\n22\\tTi\\tTitanium\\t47.86674933516\\n23\\tV\\tVanadium\\t50.9414675085\\n24\\tCr\\tChromium\\t51.99613314762095\\n25\\tMn\\tManganese\\t54.93804517\\n26\\tFe\\tIron\\t55.8451456935552\\n27\\tCo\\tCobalt\\t58.93319506999999\\n28\\tNi\\tNickel\\t58.69335163208455\\n29\\tCu\\tCopper\\t63.546039795084994\\n30\\tZn\\tZinc\\t65.40872812701322\\n31\\tGa\\tGallium\\t69.72306563428617\\n32\\tGe\\tGermanium\\t72.63984326005341\\n33\\tAs\\tArsenic\\t74.92159652\\n34\\tSe\\tSelenium\\t78.9593882599375\\n35\\tBr\\tBromine\\t79.9035279923569\\n36\\tKr\\tKrypton\\t83.7980066431168\\n37\\tRb\\tRubidium\\t85.46766359470149\\n38\\tSr\\tStrontium\\t87.6166441185128\\n39\\tY\\tYttrium\\t88.905848327\\n40\\tZr\\tZirconium\\t91.22364763203382\\n41\\tNb\\tNiobium\\t92.90637812599999\\n42\\tMo\\tMolybdenum\\t95.93759212713759\\n43\\tTc\\tTechnetium\\t98.0\\n44\\tRu\\tRuthenium\\t101.0649455723334\\n45\\tRh\\tRhodium\\t102.90550430000002\\n46\\tPd\\tPalladium\\t106.41532914746399\\n47\\tAg\\tSilver\\t107.868151248228\\n48\\tCd\\tCadmium\\t112.41155226203729\\n49\\tIn\\tIndium\\t114.81808621342\\n50\\tSn\\tTin\\t118.71010849931781\\n51\\tSb\\tAntimony\\t121.75978615571421\\n52\\tTe\\tTellurium\\t127.60312786587177\\n53\\tI\\tIodine\\t126.9044734\\n54\\tXe\\tXenon\\t131.29276070673757\\n55\\tCs\\tCaesium\\t132.90545193324\\n56\\tBa\\tBarium\\t137.3268918829641\\n57\\tLa\\tLanthanum\\t138.90545400916656\\n58\\tCe\\tCerium\\t140.11572627079408\\n59\\tPr\\tPraseodymium\\t140.907652826\\n60\\tNd\\tNeodymium\\t144.236131428275\\n61\\tPm\\tPromethium\\t145.0\\n62\\tSm\\tSamarium\\t150.3663485610868\\n63\\tEu\\tEuropium\\t151.96437050019\\n64\\tGd\\tGadolinium\\t157.25212224243995\\n65\\tTb\\tTerbium\\t158.925346827\\n66\\tDy\\tDysprosium\\t162.49946572489424\\n67\\tHo\\tHolmium\\t164.930322127\\n68\\tEr\\tErbium\\t167.25907628559352\\n69\\tTm\\tThulium\\t168.934213327\\n70\\tYb\\tYtterbium\\t173.0376956147714\\n71\\tLu\\tLutetium\\t174.96672140854997\\n72\\tHf\\tHafnium\\t178.4849721651158\\n73\\tTa\\tTantalum\\t180.9478757552806\\n74\\tW\\tTungsten\\t183.8417781725967\\n75\\tRe\\tRhenium\\t186.206706624852\\n76\\tOs\\tOsmium\\t190.2248630659075\\n77\\tIr\\tIridium\\t192.2160564328\\n78\\tPt\\tPlatinum\\t195.077807984934\\n79\\tAu\\tGold\\t196.96656876\\n80\\tHg\\tMercury\\t200.599166666798\\n81\\tTl\\tThallium\\t204.38341252384\\n82\\tPb\\tLead\\t207.21690767600003\\n83\\tBi\\tBismuth\\t208.98039871599997\\n84\\tPo\\tPolonium\\t209.0\\n85\\tAt\\tAstatine\\t210.0\\n86\\tRn\\tRadon\\t222.0\\n87\\tFr\\tFrancium\\t223.0\\n88\\tRa\\tRadium\\t226.0\\n89\\tAc\\tActinium\\t227.0\\n90\\tTh\\tThorium\\t232.038055321\\n91\\tPa\\tProtactinium\\t231.035884024\\n92\\tU\\tUranium\\t238.02891028165737\\n93\\tNp\\tNeptunium\\t237.0\\n94\\tPu\\tPlutonium\\t244.0\\n95\\tAm\\tAmericium\\t0.0\\n96\\tCm\\tCurium\\t0.0\\n97\\tBk\\tBerkelium\\t0.0\\n98\\tCf\\tCalifornium\\t0.0\\n99\\tEs\\tEinsteinium\\t0.0\\n100\\tFm\\tFermium\\t0.0\\n101\\tMd\\tMendelevium\\t0.0\\n102\\tNo\\tNobelium\\t0.0\\n103\\tLr\\tLawrencium\\t0.0\\n104\\tRf\\tRutherfordium\\t0.0\\n105\\tDb\\tDubnium\\t0.0\\n106\\tSg\\tSeaborgium\\t0.0\\n107\\tBh\\tBohrium\\t0.0\\n108\\tHs\\tHassium\\t0.0\\n109\\tMt\\tMeitnerium\\t0.0\\n110\\tDs\\tDarmstadtium\\t0.0\\n111\\tRg\\tRoentgenium\\t0.0\\n112\\tCn\\tCopernicium\\t0.0\\n113\\tUut\\tUnuntrium\\t0.0\\n114\\tUuq\\t\\t0.0\\n115\\tUup\\tUnunpentium\\t0.0\\n116\\tUuh\\t\\t0.0\\n117\\tUus\\tUnunseptium\\t0.0','[\\r\\n]+',0);for(g=0;g<k.length;g++){m=Qj(k[g],'\\t',0);c=new Ps(Oi(m[3]),Tj(m[1]),m[2],Pi(m[0]));hn(Ft,c.g,c);hn(e,m[0],c)}k=Qj('1\\t1.007825032071\\t99.9885\\t1\\n2\\t2.01410177784\\t0.0115\\t1\\n3\\t3.016049277725\\t0\\t1\\n4\\t3.016029319126\\t0.00013\\t2\\n5\\t4.002603254156\\t99.99987\\t2\\n6\\t6.01512279516\\t7.59\\t3\\n7\\t7.016004558\\t92.41\\t3\\n8\\t9.01218224\\t100\\t4\\n9\\t10.01293704\\t19.9\\t5\\n10\\t11.00930544\\t80.1\\t5\\n11\\t12.0\\t98.93\\t6\\n12\\t13.00335483781\\t1.07\\t6\\n13\\t14.0032419894\\t0\\t6\\n14\\t14.00307400486\\t99.636\\t7\\n15\\t15.00010889827\\t0.364\\t7\\n17\\t16.9991317012\\t0.038\\t8\\n16\\t15.9949146195616\\t99.757\\t8\\n18\\t17.99916107\\t0.205\\t8\\n19\\t18.998403227\\t100\\t9\\n21\\t20.993846684\\t0.27\\t10\\n20\\t19.992440175419\\t90.48\\t10\\n22\\t21.99138511419\\t9.25\\t10\\n23\\t22.989769280929\\t100\\t11\\n25\\t24.985836923\\t10\\t12\\n24\\t23.98504170014\\t78.99\\t12\\n26\\t25.9825929293\\t11.01\\t12\\n27\\t26.9815386312\\t100\\t13\\n29\\t28.97649470022\\t4.685\\t14\\n28\\t27.976926532519\\t92.223\\t14\\n30\\t29.973770173\\t3.092\\t14\\n31\\t30.973761632\\t100\\t15\\n34\\t33.9678669012\\t4.25\\t16\\n35\\t35.967080762\\t0.01\\t16\\n32\\t31.9720710015\\t94.99\\t16\\n33\\t32.9714587615\\t0.75\\t16\\n36\\t34.968852684\\t75.76\\t17\\n37\\t36.965902595\\t24.24\\t17\\n38\\t35.96754510629\\t0.3365\\t18\\n39\\t37.96273244\\t0.0632\\t18\\n40\\t39.962383122529\\t99.6003\\t18\\n42\\t39.9639984821\\t0.0117\\t19\\n43\\t40.9618257621\\t6.7302\\t19\\n41\\t38.963706682\\t93.2581\\t19\\n49\\t47.9525344\\t0.187\\t20\\n48\\t45.953692624\\t0.004\\t20\\n46\\t42.95876663\\t0.135\\t20\\n47\\t43.95548184\\t2.086\\t20\\n44\\t39.9625909822\\t96.941\\t20\\n45\\t41.9586180127\\t0.647\\t20\\n50\\t44.95591199\\t100\\t21\\n51\\t45.95263169\\t8.25\\t22\\n55\\t49.94479129\\t5.18\\t22\\n54\\t48.94787009\\t5.41\\t22\\n53\\t47.94794639\\t73.72\\t22\\n52\\t46.95176319\\t7.44\\t22\\n57\\t50.943959511\\t99.75\\t23\\n56\\t49.947158511\\t0.25\\t23\\n59\\t51.94050758\\t83.789\\t24\\n58\\t49.946044211\\t4.345\\t24\\n61\\t53.93888048\\t2.365\\t24\\n60\\t52.94064948\\t9.501\\t24\\n62\\t54.93804517\\t100\\t25\\n64\\t55.93493757\\t91.754\\t26\\n65\\t56.93539407\\t2.119\\t26\\n66\\t57.93327568\\t0.282\\t26\\n63\\t53.93961057\\t5.845\\t26\\n67\\t58.93319507\\t100\\t27\\n68\\t57.93534297\\t68.0769\\t28\\n69\\t59.93078647\\t26.2231\\t28\\n70\\t60.93105607\\t1.1399\\t28\\n71\\t61.92834516\\t3.6345\\t28\\n72\\t63.92796607\\t0.9256\\t28\\n73\\t62.92959756\\t69.15\\t29\\n74\\t64.92778957\\t30.85\\t29\\n76\\t65.92603341\\t27.975\\t30\\n77\\t66.92712731\\t4.102\\t30\\n78\\t67.92484421\\t19.024\\t30\\n79\\t69.925319321\\t0.631\\t30\\n75\\t63.92914227\\t48.268\\t30\\n81\\t70.924701311\\t39.892\\t31\\n80\\t68.925573613\\t60.108\\t31\\n85\\t73.921177818\\t36.72\\t32\\n84\\t72.923458918\\t7.76\\t32\\n86\\t75.921402618\\t7.83\\t32\\n83\\t71.922075818\\t27.31\\t32\\n82\\t69.924247411\\t20.38\\t32\\n87\\t74.92159652\\t100\\t33\\n93\\t81.916699422\\t8.73\\t34\\n92\\t79.916521321\\t49.61\\t34\\n89\\t75.919213618\\t9.37\\t34\\n88\\t73.922476418\\t0.89\\t34\\n91\\t77.917309118\\t23.77\\t34\\n90\\t76.919914018\\t7.63\\t34\\n95\\t80.916290621\\t49.31\\t35\\n94\\t78.918337122\\t50.69\\t35\\n100\\t83.9115073\\t56.987\\t36\\n101\\t85.9106107311\\t17.279\\t36\\n98\\t81.913483619\\t11.593\\t36\\n99\\t82.9141363\\t11.5\\t36\\n96\\t77.920364812\\t0.355\\t36\\n97\\t79.916379016\\t2.286\\t36\\n102\\t84.91178973812\\t72.17\\t37\\n103\\t86.90918052713\\t27.83\\t37\\n106\\t86.908877112\\t7\\t38\\n107\\t87.905612112\\t82.58\\t38\\n104\\t83.9134253\\t0.56\\t38\\n105\\t85.909260212\\t9.86\\t38\\n108\\t88.905848327\\t100\\t39\\n113\\t95.90827343\\t2.8\\t40\\n112\\t93.906315226\\t17.38\\t40\\n110\\t90.905645825\\t11.22\\t40\\n111\\t91.905040825\\t17.15\\t40\\n109\\t89.904704425\\t51.45\\t40\\n114\\t92.906378126\\t100\\t41\\n119\\t96.906021521\\t9.56\\t42\\n118\\t95.904679521\\t16.68\\t42\\n117\\t94.905842121\\t15.9\\t42\\n116\\t93.905088321\\t9.23\\t42\\n115\\t91.9068114\\t14.77\\t42\\n121\\t99.9074776\\t9.67\\t42\\n120\\t97.905408221\\t24.19\\t42\\n124\\t98.906254721\\t0\\t43\\n123\\t97.9072164\\t0\\t43\\n122\\t96.9063655\\t0\\t43\\n129\\t100.905582122\\t17.06\\t44\\n127\\t98.905939322\\t12.76\\t44\\n128\\t99.904219522\\t12.6\\t44\\n126\\t97.9052877\\t1.87\\t44\\n131\\t103.9054333\\t18.62\\t44\\n125\\t95.9075988\\t5.54\\t44\\n130\\t101.904349322\\t31.55\\t44\\n132\\t102.9055043\\t100\\t45\\n137\\t107.9038924\\t26.46\\t46\\n136\\t105.9034864\\t27.33\\t46\\n138\\t109.90515312\\t11.72\\t46\\n133\\t101.9056093\\t1.02\\t46\\n135\\t104.9050854\\t22.33\\t46\\n134\\t103.9040364\\t11.14\\t46\\n139\\t106.9050975\\t51.839\\t47\\n140\\t108.9047523\\t48.161\\t47\\n141\\t105.9064596\\t1.25\\t48\\n143\\t109.903002129\\t12.49\\t48\\n142\\t107.9041846\\t0.89\\t48\\n144\\t110.904178129\\t12.8\\t48\\n145\\t111.902757829\\t24.13\\t48\\n146\\t112.904401729\\t12.22\\t48\\n147\\t113.903358529\\t28.73\\t48\\n148\\t115.9047563\\t7.49\\t48\\n149\\t112.9040583\\t4.29\\t49\\n150\\t114.9038785\\t95.71\\t49\\n152\\t113.9027793\\t0.66\\t50\\n153\\t114.9033423\\t0.34\\t50\\n154\\t115.9017413\\t14.54\\t50\\n155\\t116.9029523\\t7.68\\t50\\n156\\t117.9016033\\t24.22\\t50\\n157\\t118.9033083\\t8.59\\t50\\n158\\t119.902194727\\t32.58\\t50\\n159\\t121.903439029\\t4.63\\t50\\n160\\t123.905273915\\t5.79\\t50\\n151\\t111.9048185\\t0.97\\t50\\n162\\t122.904214022\\t42.79\\t51\\n161\\t120.903815724\\t57.21\\t51\\n170\\t129.906224421\\t34.08\\t52\\n169\\t127.904463119\\t31.74\\t52\\n168\\t125.903311716\\t18.84\\t52\\n163\\t119.9040201\\t0.09\\t52\\n167\\t124.904430716\\t7.07\\t52\\n166\\t123.902817916\\t4.74\\t52\\n165\\t122.904270016\\t0.89\\t52\\n164\\t121.903043916\\t2.55\\t52\\n171\\t126.9044734\\t100\\t53\\n175\\t128.90477948\\t26.4006\\t54\\n174\\t127.903531315\\t1.9102\\t54\\n173\\t125.9042747\\t0.089\\t54\\n172\\t123.90589302\\t0.0952\\t54\\n178\\t131.90415351\\t26.9086\\t54\\n179\\t133.90539459\\t10.4357\\t54\\n176\\t129.90350808\\t4.071\\t54\\n177\\t130.90508241\\t21.2324\\t54\\n180\\t135.9072198\\t8.8573\\t54\\n181\\t132.90545193324\\t100\\t55\\n186\\t135.90457594\\t7.854\\t56\\n187\\t136.90582745\\t11.232\\t56\\n184\\t133.90450844\\t2.417\\t56\\n185\\t134.90568864\\t6.592\\t56\\n188\\t137.90524725\\t71.698\\t56\\n182\\t129.90632083\\t0.106\\t56\\n183\\t131.905061311\\t0.101\\t56\\n190\\t138.906353326\\t99.91\\t57\\n189\\t137.9071124\\t0.09\\t57\\n191\\t135.90717214\\t0.185\\t58\\n193\\t139.905438726\\t88.45\\t58\\n192\\t137.90599111\\t0.251\\t58\\n194\\t141.9092443\\t11.114\\t58\\n195\\t140.907652826\\t100\\t59\\n201\\t147.9168933\\t5.7\\t60\\n200\\t145.913116925\\t17.2\\t60\\n202\\t149.9208913\\t5.6\\t60\\n197\\t142.909814325\\t12.2\\t60\\n196\\t141.907723325\\t27.2\\t60\\n199\\t144.912573625\\t8.3\\t60\\n198\\t143.910087325\\t23.8\\t60\\n204\\t146.915138526\\t0\\t61\\n203\\t144.9127493\\t0\\t61\\n205\\t143.9119993\\t3.07\\t62\\n207\\t147.914822726\\t11.24\\t62\\n206\\t146.914897926\\t14.99\\t62\\n208\\t148.917184726\\t13.82\\t62\\n209\\t149.917275526\\t7.38\\t62\\n210\\t151.919732427\\t26.75\\t62\\n211\\t153.922209327\\t22.75\\t62\\n212\\t150.919850226\\t47.81\\t63\\n213\\t152.921230326\\t52.19\\t63\\n220\\t159.927054127\\t21.86\\t64\\n216\\t154.922622027\\t14.8\\t64\\n217\\t155.922122727\\t20.47\\t64\\n218\\t156.923960127\\t15.65\\t64\\n219\\t157.924103927\\t24.84\\t64\\n214\\t151.919791027\\t0.2\\t64\\n215\\t153.920865627\\t2.18\\t64\\n221\\t158.925346827\\t100\\t65\\n222\\t155.9242837\\t0.056\\t66\\n223\\t157.9244094\\t0.095\\t66\\n228\\t163.929174827\\t28.26\\t66\\n227\\t162.928731227\\t24.896\\t66\\n226\\t161.926798427\\t25.475\\t66\\n225\\t160.926933427\\t18.889\\t66\\n224\\t159.925197527\\t2.329\\t66\\n229\\t164.930322127\\t100\\t67\\n235\\t169.93546433\\t14.91\\t68\\n234\\t167.932370227\\t26.978\\t68\\n233\\t166.932048227\\t22.869\\t68\\n232\\t165.930293127\\t33.503\\t68\\n231\\t163.9292003\\t1.601\\t68\\n230\\t161.9287784\\t0.139\\t68\\n236\\t168.934213327\\t100\\t69\\n239\\t170.936325826\\t14.28\\t70\\n238\\t169.934761826\\t3.04\\t70\\n237\\t167.9338975\\t0.13\\t70\\n242\\t173.938862126\\t31.83\\t70\\n243\\t175.942571728\\t12.76\\t70\\n240\\t171.936381526\\t21.83\\t70\\n241\\t172.938210826\\t16.13\\t70\\n244\\t174.940771823\\t97.41\\t71\\n245\\t175.942686323\\t2.59\\t71\\n250\\t178.945816123\\t13.62\\t72\\n251\\t179.946550023\\t35.08\\t72\\n248\\t176.943220723\\t18.6\\t72\\n249\\t177.943698823\\t27.28\\t72\\n246\\t173.9400463\\t0.16\\t72\\n247\\t175.941408624\\t5.26\\t72\\n252\\t179.947464824\\t0.012\\t73\\n253\\t180.947995819\\t99.988\\t73\\n258\\t185.954364119\\t28.43\\t74\\n254\\t179.9467044\\t0.12\\t74\\n255\\t181.94820429\\t26.5\\t74\\n256\\t182.95022309\\t14.31\\t74\\n257\\t183.95093129\\t30.64\\t74\\n259\\t184.952955013\\t37.4\\t75\\n260\\t186.955753115\\t62.6\\t75\\n262\\t185.953838215\\t1.59\\t76\\n263\\t186.955750515\\t1.96\\t76\\n261\\t183.952489114\\t0.02\\t76\\n266\\t189.958447016\\t26.26\\t76\\n267\\t191.961480727\\t40.78\\t76\\n264\\t187.955838215\\t13.24\\t76\\n265\\t188.958147516\\t16.15\\t76\\n268\\t190.960594018\\t37.3\\t77\\n269\\t192.962926418\\t62.7\\t77\\n275\\t197.9678933\\t7.163\\t78\\n274\\t195.96495159\\t25.242\\t78\\n273\\t194.96479119\\t33.832\\t78\\n272\\t193.96268039\\t32.967\\t78\\n270\\t189.9599326\\t0.014\\t78\\n271\\t191.961038027\\t0.782\\t78\\n276\\t196.96656876\\t100\\t79\\n279\\t198.96827994\\t16.87\\t80\\n278\\t197.96676904\\t9.97\\t80\\n277\\t195.9658333\\t0.15\\t80\\n283\\t203.97349394\\t6.87\\t80\\n282\\t201.97064306\\t29.86\\t80\\n281\\t200.97030236\\t13.18\\t80\\n280\\t199.96832604\\t23.1\\t80\\n285\\t204.974427514\\t70.48\\t81\\n284\\t202.972344214\\t29.52\\t81\\n288\\t206.975896913\\t22.1\\t82\\n289\\t207.976652113\\t52.4\\t82\\n287\\t205.974465313\\t24.1\\t82\\n286\\t203.973043613\\t1.4\\t82\\n290\\t208.980398716\\t100\\t83\\n291\\t208.98243042\\t0\\t84\\n292\\t209.982873713\\t0\\t84\\n293\\t209.9871488\\t0\\t85\\n294\\t210.98749633\\t0\\t85\\n295\\t210.9906017\\t0\\t86\\n296\\t220.011394024\\t0\\t86\\n297\\t222.017577725\\t0\\t86\\n298\\t223.019735926\\t0\\t87\\n299\\t223.018502227\\t0\\t88\\n300\\t224.020211824\\t0\\t88\\n301\\t226.025409825\\t0\\t88\\n302\\t228.031070326\\t0\\t88\\n303\\t227.027752126\\t0\\t89\\n305\\t232.038055321\\t100\\t90\\n304\\t230.033133819\\t0\\t90\\n306\\t231.035884024\\t100\\t91\\n307\\t233.039635229\\t0\\t92\\n309\\t235.04392992\\t0.7204\\t92\\n308\\t234.04095212\\t0.0054\\t92\\n311\\t238.05078822\\t99.2742\\t92\\n310\\t236.04556802\\t0\\t92\\n313\\t237.04817342\\t0\\t93\\n312\\t236.0465705\\t0\\t93\\n315\\t239.05216342\\t0\\t94\\n314\\t238.04955992\\t0\\t94\\n317\\t241.05685152\\t0\\t94\\n316\\t240.05381352\\t0\\t94\\n319\\t244.0642045\\t0\\t94\\n318\\t242.05874262\\t0\\t94\\n320\\t241.05682912\\t0\\t95\\n321\\t243.061381125\\t0\\t95\\n326\\t247.0703545\\t0\\t96\\n327\\t248.0723495\\t0\\t96\\n324\\t245.065491222\\t0\\t96\\n325\\t246.067223722\\t0\\t96\\n322\\t243.061389122\\t0\\t96\\n323\\t244.06275262\\t0\\t96\\n328\\t247.0703076\\t0\\t97\\n329\\t249.074986728\\t0\\t97\\n332\\t251.0795875\\t0\\t98\\n333\\t252.0816265\\t0\\t98\\n330\\t249.074853524\\t0\\t98\\n331\\t250.076406122\\t0\\t98\\n334\\t252.0829805\\t0\\t99\\n335\\t257.0951057\\t0\\t100\\n337\\t260.1036534\\t0\\t101\\n336\\t258.0984315\\t0\\t101\\n338\\t259.1010311\\t0\\t102\\n339\\t262.1096322\\t0\\t103\\n340\\t265.1167046\\t0\\t104\\n341\\t268.1254557\\t0\\t105\\n342\\t271.133477\\t0\\t106\\n343\\t272.1380365\\t0\\t107\\n344\\t270.1346531\\t0\\t108\\n345\\t276.1511673\\t0\\t109\\n346\\t281.1620678\\t0\\t110\\n347\\t280.164478\\t0\\t111\\n348\\t285.1741178\\t0\\t112\\n349\\t284.1780886\\t0\\t113\\n350\\t289.1872879\\t0\\t114\\n351\\t288.1924992\\t0\\t115\\n352\\t292.20755101\\t0\\t117','[\\r\\n]+',0);for(h=0;h<k.length;h++){m=Qj(k[h],'\\t',0);c=en(e,m[3]);i=Oi(m[1]);j=Oi(m[2]);b=new Ct(ge(i+0.5),i,j,c.g);gn(c.b,new fj(b.c),b)}for(d=Vn(new Wn(Ft));un(d.a);){c=$n(d);Ks(c);if(c.b.b==0){l=new Ct(ge(c.c+0.5),c.c,100,c.g);gn(c.b,new fj(l.c),l)}}Gt=new zp;k=Qj(\"1\\tAbu\\t2-Aminobutyric acid diradical\\tC4H7NO\\r\\n2\\tAcet\\tAcetyl\\tC2H3O\\r\\n3\\tAcm\\tAcetamidomethyl\\tC3H6NO\\r\\n4\\tAdao\\tAdamantyloxy\\tC10H15O\\r\\n5\\tAib\\talpha-Aminoisobutyric acid diradical\\tC4H7NO\\r\\n6\\tAla\\tAlainine diradical\\tC3H5NO\\r\\n7\\tArg\\tArginine diradical\\tC6H12N4O\\r\\n8\\tArgp\\tArginine triradical\\tC6H11N4O\\r\\n9\\tAsn\\tAsparagine diradical\\tC4H6N2O2\\r\\n10\\tAsnp\\tAsparagine triradical\\tC4H5N2O2\\r\\n11\\tAsp\\tAspartic acid diradical\\tC4H5NO3\\r\\n12\\tAspp\\tAspartic acid triradical\\tC4H4NO3\\r\\n13\\tAsu\\talpha-Aminosuberic acid diradical\\tC8H13NO3\\r\\n14\\tAsup\\talpha-Aminosuberic acid triradical\\tC8H12NO3\\r\\n15\\tBoc\\tt-Butoxycarbonyl\\tC5H9O2\\r\\n16\\tBom\\tBenzyloxymethyl\\tC8H9O\\r\\n17\\tBrz\\t2-Bromobenzyloxycarbonyl\\tC8H6BrO2\\r\\n18\\tBu\\tButyl\\tC4H9\\r\\n19\\tBum\\tt-Butoxymethyl\\tC5H11O\\r\\n20\\tBz\\tBenzoyl\\tC7H5O\\r\\n21\\tBzl\\tBenzyl\\tC7H7\\r\\n22\\tBn\\tBenzyl\\tC7H7\\r\\n23\\tBzlo\\tBenzyloxy\\tC7H7O\\r\\n24\\tCha\\tbeta-Cyclohexylalanine diradical\\tC9H15NO\\r\\n25\\tChxo\\tCyclohexyloxy\\tC6H11O\\r\\n26\\tCit\\tCitrulline diradical\\tC6H11N3O2\\r\\n27\\tCitp\\tCitrulline triradical\\tC6H10N3O2\\r\\n28\\tClz\\t2-Chlorobenzyloxycarbonyl\\tC8H6ClO2\\r\\n29\\tCp\\tCyclopentadienyl\\tC5H5\\r\\n30\\tCys\\tCysteine diradical\\tC3H5NOS\\r\\n31\\tCysp\\tCysteine triradical\\tC3H4NOS\\r\\n32\\tD\\tDeuterium\\t[2H]\\r\\n33\\tDde\\tDde\\tC10H13O2\\r\\n34\\tDnp\\t2,4-Dinitrophenyl\\tC6H3N2O4\\r\\n35\\tEt\\tEthyl\\tC2H5\\r\\n36\\tFmoc\\tFluorenylmethoxycarbonyl\\tC15H11O2\\r\\n37\\tFor\\tFormyl\\tCHO\\r\\n38\\tGln\\tGlutamine diradical\\tC5H8N2O2\\r\\n39\\tGlnp\\tGlutamine triradical\\tC5H7N2O2\\r\\n40\\tGlp\\tPyroglutamine\\tC5H5NO2\\r\\n41\\tGlu\\tGlutamic acid diradical\\tC5H7NO3\\r\\n42\\tGlup\\tGlutamic acid triradical\\tC5H6NO3\\r\\n43\\tGly\\tGlycine diradical\\tC2H3NO\\r\\n44\\tHci\\tHomocitrulline diradical\\tC7H13N3O2\\r\\n45\\tHcip\\tHomocitrulline triradical\\tC7H12N3O2\\r\\n46\\tHis\\tHistidine diradical\\tC6H7N3O\\r\\n47\\tHisp\\tHistidine triradical\\tC6H6N3O\\r\\n48\\tHser\\tHomoserine diradical\\tC4H7NO2\\r\\n49\\tHserp\\tHomoserine triradical\\tC4H6NO2\\r\\n50\\tHyp\\tHydroxyproline diradical\\tC5H7NO2\\r\\n51\\tHypp\\tHydroxyproline triradical\\tC5H6NO2\\r\\n52\\tIle\\tIsoleucine diradical\\tC6H11NO\\r\\n53\\tIvdde\\t1-[4,4-dimethyl-2,6-dioxocyclohexylidene)3-methylb\\tC14H21O2\\r\\n54\\tLeu\\tLeucine diradical\\tC6H11NO\\r\\n55\\tLys\\tLysine diradical\\tC6H12N2O\\r\\n56\\tLysp\\tLysine triradical\\tC6H11N2O\\r\\n57\\tMbh\\t4,4'-Dimethoxybenzhydryl\\tC15H15O2\\r\\n58\\tMe\\tMethyl\\tCH3\\r\\n59\\tMebzl\\t4-Methylbenzyl\\tC8H9\\r\\n60\\tMeobzl\\t4-Methoxybenzyl1-[4,4-dimethyl-2,6-dioxocyclohexyl\\tC8H9O\\r\\n61\\tMet\\tMethionine diradical\\tC5H9NOS\\r\\n62\\tMmt\\t4-Methoxytrityl\\tC20H17O\\r\\n63\\tMtc\\t2,2,5,7,8-pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n64\\tMtr\\t4-Methoxy-2,3,6-trimethylbenzenesulphonyl\\tC10H13O3S\\r\\n65\\tMts\\tMesitylene-2-sulphonyl\\tC9H11O2S\\r\\n66\\tMtt\\t4-Methyltrityl\\tC20H17\\r\\n67\\tNle\\tNorleucine diradical\\tC6H11NO\\r\\n68\\tNpys\\t3-Nitro-2-pyridinesulphenyl\\tC5H3N2O2S\\r\\n69\\tNva\\tNorvaline diradical\\tC5H9NO\\r\\n70\\tOdmab\\tOdmab\\tC20H26NO3\\r\\n71\\tOrn\\tOrnithine diradical\\tC5H10N2O\\r\\n72\\tOrnp\\tOrnithine triradical\\tC5H9N2O\\r\\n73\\tPbf\\t2,2,4,6,7-pentamethyldihydrobenzofurane-5-sulfonyl\\tC13H17O3S\\r\\n74\\tPen\\tPenicillamine diradical\\tC5H9NOS\\r\\n75\\tPenp\\tPenicillamine triradical\\tC5H8NOS\\r\\n76\\tPh\\tPhenyl\\tC6H5\\r\\n77\\tPhe\\tPhenylalanine diradical\\tC9H9NO\\r\\n78\\tPhepcl\\t4-Chlorophenylalanine diradical\\tC9H8ClNO\\r\\n79\\tPhg\\tPhenylglycine\\tC8H7NO\\r\\n80\\tPmc\\t2,2,5,7,8-Pentamethylchroman-6-sulphonyl\\tC14H19O3S\\r\\n81\\tPro\\tProline diradical\\tC5H7NO\\r\\n82\\tPyr\\tPyroglutamine\\tC5H5NO2\\r\\n83\\tSar\\tSarcosine diradical\\tC3H5NO\\r\\n84\\tSer\\tSerine diradical\\tC3H5NO2\\r\\n85\\tSerp\\tSerine triradical\\tC3H4NO2\\r\\n86\\tSta\\tStatine diradical\\tC8H15NO2\\r\\n87\\tStap\\tStatine triradical\\tC8H14NO2\\r\\n88\\tTacm\\tTrimethylacetamidomethyl\\tC6H12NO\\r\\n89\\tTbdms\\tt-Butyldimethylsilyl\\tC6H15Si\\r\\n90\\tTbu\\tt-Butyl\\tC4H9\\r\\n91\\tTbuo\\tt-Butoxy\\tC4H9O\\r\\n92\\tTbuthio\\tt-Butylthio\\tC4H9S\\r\\n93\\tTfa\\tTrifluoroacetyl\\tC2F3O\\r\\n94\\tThi\\tbeta-(2-thenyl)alanine\\tC7H7NOS\\r\\n95\\tThr\\tThreonine diradical\\tC4H7NO2\\r\\n96\\tThrp\\tThreonine triradical\\tC4H6NO2\\r\\n97\\tTips\\tTriisopropylsilyl\\tC9H21Si\\r\\n98\\tTms\\tTrimethylsilyl\\tC3H9Si\\r\\n99\\tTos\\tTosyl\\tC7H7O2S\\r\\n100\\tTrp\\tTryptophan diradical\\tC11H10N2O\\r\\n101\\tTrpp\\tTryptophan triradical\\tC11H9N2O\\r\\n102\\tTrt\\tTrityl\\tC19H15\\r\\n103\\tTyr\\tTyrosine diradical\\tC9H9NO2\\r\\n104\\tTyrp\\tTyrosine triradical\\tC9H8NO2\\r\\n105\\tVal\\tValine\\tC5H9NO\\r\\n106\\tValoh\\tbeta-Hydroxyvaline diradical\\tC5H9NO2\\r\\n107\\tValohp\\tbeta-Hydroxyvaline triradical\\tC5H8NO2\\r\\n108\\tXan\\tXanthyl\\tC13H9O\\r\\n109\\tZ\\tBenzyloxycarbonyl\\tC8H7O2\\r\\n110\\tT\\tTritium\\t[3H]\",'[\\r\\n]+',0);for(f=0;f<k.length;f++){m=Qj(k[f],'\\t',0);try{hn(Gt,m[1],new Bt(m[1],m[2],m[3],Ft,Gt))}catch(a){a=Hg(a);if(!_d(a,4))throw Gg(a)}}}\nvar Ou=2147483647,Pu={3:1,9:1},Qu={3:1,6:1,9:1},Ru={3:1},Su=4194303,Tu=1048575,Uu=524288,Vu=4194304,Wu=17592186044416,Xu=-9223372036854775808,Yu=1000000000,Zu=65536,$u=-2147483648,_u=65535,av={28:1,3:1},bv=100000,cv=1000000,dv=10000000000,ev=0.3010299956639812,fv=4294967296,gv=1073741824,hv={35:1},iv={37:1,27:1},jv={3:1,51:1},kv={3:1,50:1},lv={3:1,18:1,29:1,26:1},mv=4.9E-324,nv=5.4857990946E-4;var _,Kh,Ig={},Eg=-1;Kg(1,null,{},db);_.eQ=function eb(a){return this===a};_.gC=function gb(){return this.cZ};_.hC=function ib(){return Nb(this)};_.tS=function kb(){return cb(this)};_.toString=function(){return this.tS()};Yd={3:1,116:1,18:1,2:1};Ng();var Yd;Kg(68,1,{},vi);_.u=function wi(a){var b;b=new vi;b.e=4;a>1?(b.c=Di(this,a-1)):(b.c=this);return b};_.v=function Ci(){ti(this);return this.b};_.w=function Ei(){return ui(this)};_.A=function Gi(){ti(this);return this.i};_.B=function Ii(){return (this.e&4)!=0};_.C=function Ji(){return (this.e&1)!=0};_.tS=function Mi(){return ((this.e&2)!=0?'interface ':(this.e&1)!=0?'':'class ')+(ti(this),this.k)};_.e=0;_.g=0;var si=1;var $e=yi(1),me=yi(0),Oe=yi(68);Kg(9,1,Pu);_.n=function pb(){return this.f};_.tS=function qb(){return ob(this)};var ff=yi(9);Kg(6,9,Qu);var Se=yi(6);Kg(10,6,Qu,tb);var _e=yi(10);Kg(83,10,Qu);var oe=yi(83);Kg(38,83,{38:1,3:1,6:1,9:1},xb);_.n=function yb(){wb(this);return this.c};var ub;var le=yi(38);var Ab;Kg(117,1,{});var ne=yi(117);var Eb=0,Fb=0,Gb=0,Hb=-1;Kg(138,1,{});var lf=yi(138);Kg(139,138,{});var mf=yi(139);Kg(112,139,{},Xb);_.b={l:0,m:0,h:0};_.c=0;var Sb;var pe=yi(112);Kg(107,117,{},hc);var dc;var qe=yi(107);var kc;Kg(133,1,{});var ue=yi(133);Kg(84,133,{},qc);_.o=function rc(a,b){var c={},j;a.fnStack=[];var d=arguments.callee.caller;while(d){var e=(lc(),d.name||(d.name=oc(d.toString())));a.fnStack.push(e);var f=':'+e;var g=c[f];if(g){var h,i;for(h=0,i=g.length;h<i;h++){if(g[h]===d){return}}}(g||(c[f]=[])).push(d);d=d.caller}};_.p=function sc(a){var b,c,d,e;d=(lc(),a&&a.fnStack&&a.fnStack instanceof Array?a.fnStack:[]);c=d.length;e=Sd(af,Ru,31,c,0,1);for(b=0;b<c;b++){e[b]=new Ej(d[b],null,-1)}return e};var re=yi(84);Kg(134,133,{});_.o=function vc(c,d){function e(b){if(!('stack' in b)){try{throw b}catch(a){}}return b}\nvar f;typeof d=='string'?(f=e(new Error(d))):d instanceof Object&&'stack' in d?(f=d):(f=e(new Error));c.__gwt$backingJsError=f};_.q=function wc(a,b,c,d){return new Ej(b,a+'@'+d,c<0?-1:c)};_.p=function xc(a){var b,c,d,e,f,g,h;e=(lc(),h=a.__gwt$backingJsError,h&&h.stack?h.stack.split('\\n'):[]);f=Sd(af,Ru,31,0,0,1);b=0;d=e.length;if(d==0){return f}g=uc(this,e[0]);Jj(g.d,'anonymous')||(f[b++]=g);for(c=1;c<d;c++){f[b++]=uc(this,e[c])}return f};var te=yi(134);Kg(85,134,{},yc);_.q=function zc(a,b,c,d){return new Ej(b,a,-1)};var se=yi(85);Kg(132,1,{});_.s=function Kc(){return null};var Ce=yi(132);Kg(66,132,{66:1},Oc,Pc);_.eQ=function Qc(a){if(!_d(a,66)){return false}return this.a==a.a};_.r=function Rc(){return Uc};_.hC=function Sc(){return Nb(this.a)};_.tS=function Tc(){var a,b,c;c=new uk('[');for(b=0,a=this.a.length;b<a;b++){b>0&&(c.a+=',',c);pk(c,Lc(this,b))}c.a+=']';return c.a};var ve=yi(66);Kg(76,132,{},Yc);_.r=function Zc(){return _c};_.tS=function $c(){return ei(),''+this.a};_.a=false;var Vc,Wc;var we=yi(76);Kg(110,10,Qu,ad);var xe=yi(110);Kg(106,132,{},dd);_.r=function ed(){return gd};_.tS=function fd(){return 'null'};var bd;var ye=yi(106);Kg(8,132,{8:1},hd);_.eQ=function jd(a){if(!_d(a,8)){return false}return this.a==a.a};_.r=function kd(){return nd};_.hC=function ld(){return ge((new Ri(this.a)).a)};_.tS=function md(){return this.a+''};_.a=0;var ze=yi(8);Kg(54,132,{54:1},td,ud);_.eQ=function vd(a){if(!_d(a,54)){return false}return this.a==a.a};_.r=function wd(){return zd};_.hC=function xd(){return Nb(this.a)};_.tS=function yd(){var a,b,c,d,e,f;f=new uk('{');a=true;e=od(this,Sd(ef,Ru,2,0,4,1));for(c=0,d=e.length;c<d;++c){b=e[c];a?(a=false):(f.a+=', ',f);qk(f,Cb(b));f.a+=':';pk(f,pd(this,b))}f.a+='}';return f.a};var Ae=yi(54);var Ad;Kg(11,132,{11:1},Id);_.eQ=function Jd(a){if(!_d(a,11)){return false}return Jj(this.a,a.a)};_.r=function Kd(){return Od};_.hC=function Ld(){return jk(this.a)};_.s=function Md(){return this};_.tS=function Nd(){return Cb(this.a)};var Be=yi(11);var Rg;var hh;var Fh,Gh,Hh,Ih;Kg(60,9,Pu);var Re=yi(60);Kg(17,60,Pu);var Me=yi(17);Kg(78,17,Pu,Uh);var He=yi(78);Kg(45,1,{});_.tS=function Yh(){return this.a};var Ie=yi(45);Kg(41,10,Qu,Zh);var Je=yi(41);Kg(49,10,Qu,$h,_h);var Ve=yi(49);Kg(109,49,Qu,ai);var Ke=yi(109);Kg(43,10,Qu,bi);var Le=yi(43);Kg(52,1,{3:1,52:1,18:1},fi);_.t=function hi(a){return gi(this.a,a.a)};_.eQ=function ii(a){return _d(a,52)&&a.a==this.a};_.hC=function ji(){return this.a?1231:1237};_.tS=function ki(){return ''+this.a};_.a=false;var ci,di;var Ne=yi(52);Kg(44,1,{3:1,44:1});var Ni;var Ze=yi(44);Kg(7,44,{3:1,18:1,7:1,44:1},Ri);_.t=function Ti(a){return Si(this.a,a.a)};_.eQ=function Ui(a){return Qi(this,a)};_.hC=function Vi(){return ge(this.a)};_.tS=function Yi(){return ''+this.a};_.a=0;var Pe=yi(7);Kg(29,1,{3:1,18:1,29:1});_.t=function $i(a){return this.b-a.b};_.eQ=function _i(a){return this===a};_.hC=function aj(){return Nb(this)};_.tS=function bj(){return this.a!=null?this.a:''+this.b};_.b=0;var Qe=yi(29);Kg(56,10,Qu,cj);var Te=yi(56);Kg(111,10,Qu,dj);var Ue=yi(111);Kg(19,44,{3:1,18:1,19:1,44:1},fj);_.t=function hj(a){return ej(this,a)};_.eQ=function ij(a){return _d(a,19)&&a.a==this.a};_.hC=function jj(){return this.a};_.tS=function mj(){return ''+this.a};_.a=0;var We=yi(19);var pj;Kg(59,10,Qu,Bj,Cj);var Xe=yi(59);Kg(20,56,{3:1,6:1,20:1,9:1},Dj);var Ye=yi(20);Kg(31,1,{3:1,31:1},Ej);_.eQ=function Fj(a){var b;if(_d(a,31)){b=a;return this.c==b.c&&Pq(this.d,b.d)&&Pq(this.a,b.a)&&Pq(this.b,b.b)}return false};_.hC=function Gj(){return gp(Vd(Rd($e,1),Ru,1,3,[oj(this.c),this.a,this.d,this.b]))};_.tS=function Hj(){return this.a+'.'+this.d+'('+(this.b!=null?this.b:'Unknown Source')+(this.c>=0?':'+this.c:'')+')'};_.c=0;var af=yi(31);var ef=yi(2);var ek,fk=0,gk;Kg(34,45,{116:1},mk,nk);var bf=yi(34);\nKg(23,45,{116:1},sk,tk,uk);var cf=yi(23);Kg(67,49,Qu,vk);var df=yi(67);Kg(42,10,Qu,xk,yk);var gf=yi(42);Kg(14,44,{3:1,18:1,44:1,14:1},Ok,Pk,Qk,Rk);_.t=function Uk(a){return Ik(this,a)};_.eQ=function Xk(a){var b;if(this===a){return true}if(_d(a,14)){b=a;return b.e==this.e&&(this.a<54?b.f==this.f:ml(this.c,b.c))}return false};_.hC=function Yk(){var a;if(this.b!=0){return this.b}if(this.a<54){a=mh(this.f);this.b=Ch(jh(a,{l:Su,m:Su,h:Tu}));this.b=33*this.b+Ch(jh(yh(a,32),{l:Su,m:Su,h:Tu}));this.b=17*this.b+ge(this.e);return this.b}this.b=17*pl(this.c)+ge(this.e);return this.b};_.tS=function _k(){return Nk(this)};_.a=0;_.b=0;_.d=0;_.e=0;_.f=0;var zk,Ak,Bk,Ck,Dk,Ek,Fk,Gk;var hf=yi(14);Kg(5,44,{3:1,18:1,44:1,5:1},xl,yl,zl,Al,Bl,Cl);_.t=function El(a){return jl(this,a)};_.eQ=function Fl(a){return ml(this,a)};_.hC=function Hl(){return pl(this)};_.tS=function Jl(){return Xl(this,0)};_.b=-2;_.c=0;_.d=0;_.e=0;var bl,cl,dl,el,fl,gl;var jf=yi(5);var Sl,Tl;var jm,km,lm;Kg(24,29,{3:1,18:1,29:1,24:1},Gm);var xm,ym,zm,Am,Bm,Cm,Dm,Em;var kf=zi(24,Hm);Kg(130,1,{});_.F=function Mm(a){return Jm(this,a)};_.H=function Nm(a){var b,c,d;d=this.G();a.length<d&&(a=Qd(a,d));c=this.D();for(b=0;b<d;++b){a[b]=c.O()}a.length>d&&(a[d]=null);return a};_.tS=function Om(){return Lm(this)};var nf=yi(130);Kg(129,1,{50:1});_.I=function Sm(a){return Pm(this,a)};_.J=function Tm(a){return !!Qm(this,a)};_.eQ=function Um(a){var b,c,d;if(a===this){return true}if(!_d(a,50)){return false}d=a;if(this.G()!=d.G()){return false}for(c=d.K().D();c.N();){b=c.O();if(!this.I(b)){return false}}return true};_.L=function Vm(a){return Xm(Qm(this,a))};_.hC=function Ym(){return lp(this.K())};_.G=function Zm(){return this.K().G()};_.tS=function $m(){var a,b,c,d;d=new uk('{');a=false;for(c=this.K().D();c.N();){b=c.O();a?(d.a+=', ',d):(a=true);qk(d,Rm(this,b.T()));d.a+='=';qk(d,Rm(this,b.U()))}d.a+='}';return d.a};var Cf=yi(129);Kg(79,129,{50:1});_.J=function jn(a){return _m(this,a)};_.K=function kn(){return new qn(this)};_.L=function ln(a){return dn(this,a)};_.M=function mn(a,b){return gn(this,a,b)};_.G=function nn(){return this.b};_.b=0;var qf=yi(79);Kg(131,130,hv);_.eQ=function on(a){var b;if(a===this){return true}if(!_d(a,35)){return false}b=a;if(b.G()!=this.G()){return false}return Km(this,b)};_.hC=function pn(){return lp(this)};var Hf=yi(131);Kg(61,131,hv,qn);_.F=function rn(a){if(_d(a,27)){return Pm(this.a,a)}return false};_.D=function sn(){return new wn(this.a)};_.G=function tn(){return this.a.b};var pf=yi(61);Kg(62,1,{},wn);_.N=function xn(){return un(this)};_.O=function yn(){return vn(this)};var of=yi(62);Kg(135,130,{51:1});_.P=function zn(a,b){throw new yk('Add not supported on this list')};_.Q=function An(a){this.P(this.G(),a);return true};_.eQ=function Bn(a){var b,c,d,e,f;if(a===this){return true}if(!_d(a,51)){return false}f=a;if(this.G()!=f.G()){return false}e=f.D();for(c=this.D();c.a<c.c.G();){b=(Dc(c.a<c.c.G()),c.c.R(c.b=c.a++));d=(Dc(e.a<e.c.G()),e.c.R(e.b=e.a++));if(!(ee(b)===ee(d)||b!=null&&fb(b,d))){return false}}return true};_.hC=function Cn(){return mp(this)};_.D=function Dn(){return new In(this)};_.S=function En(a){throw new yk('Remove not supported on this list')};var tf=yi(135);Kg(21,1,{},In);_.N=function Jn(){return Fn(this)};_.O=function Kn(){return Gn(this)};_.a=0;_.b=-1;var rf=yi(21);Kg(90,21,{},Ln);var sf=yi(90);Kg(63,131,hv,Nn);_.F=function On(a){return _m(this.a,a)};_.D=function Pn(){return Mn(this)};_.G=function Qn(){return this.a.b};var vf=yi(63);Kg(81,1,{},Sn);_.N=function Tn(){return un(this.a)};_.O=function Un(){return Rn(this)};var uf=yi(81);Kg(25,130,{},Wn);_.F=function Xn(a){return an(this.a,a)};_.D=function Yn(){return Vn(this)};_.G=function Zn(){return this.a.b};var xf=yi(25);Kg(82,1,{},_n);_.N=function ao(){return un(this.a)};_.O=function bo(){return $n(this)};var wf=yi(82);Kg(37,1,iv);_.eQ=function fo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.c,b.T())&&Pq(this.d,b.U())};_.T=function go(){return this.c};_.U=function ho(){return this.d};_.hC=function io(){return Qq(this.c)^Qq(this.d)};_.V=function jo(a){return co(this,a)};_.tS=function ko(){return this.c+'='+this.d};var yf=yi(37);Kg(53,37,{37:1,53:1,27:1},lo);var zf=yi(53);Kg(80,37,iv,mo);_.V=function no(a){throw new xk};var Af=yi(80);Kg(136,1,{27:1});_.eQ=function oo(a){var b;if(!_d(a,27)){return false}b=a;return Pq(this.T(),b.T())&&Pq(this.U(),b.U())};_.hC=function po(){return Qq(this.T())^Qq(this.U())};_.tS=function qo(){return this.T()+'='+this.U()};var Bf=yi(136);Kg(137,129,{50:1});_.I=function wo(a){return ro(this,a)};_.J=function xo(a){return so(this,a)};_.K=function yo(){return new Bo(this)};_.L=function zo(a){return to(this,a)};var Gf=yi(137);Kg(73,131,hv,Bo);_.F=function Co(a){return _d(a,27)&&ro(this.a,a)};_.D=function Do(){return this.a.W()};_.G=function Eo(){return this.a.G()};var Df=yi(73);Kg(13,131,hv,Go);_.F=function Ho(a){return so(this.a,a)};_.D=function Io(){return Fo(this)};_.G=function Jo(){return this.a.d};var Ff=yi(13);Kg(97,1,{},Lo);_.N=function Mo(){return Fn(this.a.a)};_.O=function No(){return Ko(this)};var Ef=yi(97);Kg(46,135,jv,Xo,Yo);_.P=function Zo(a,b){Po(this,a,b)};_.Q=function $o(a){return Qo(this,a)};_.F=function _o(a){return So(this,a,0)!=-1};_.R=function ap(a){return Ro(this,a)};_.S=function bp(a){return To(this,a)};_.G=function cp(){return this.b.length};_.H=function fp(a){return Wo(this,a)};var If=yi(46);var op;Kg(108,1,{},qp);_.Y=function rp(a,b){Fc(a);Fc(b);return $j(a,b)};var Jf=yi(108);Kg(115,10,Qu,vp);var Kf=yi(115);Kg(114,10,Qu,wp);var Lf=yi(114);Kg(22,79,kv,zp);var Mf=yi(22);Kg(75,1,{},Hp);_.Z=function Ip(a){var b,c,d,e,f,g,h,i;for(g=Ep(this),h=0,i=g.length;h<i;++h){f=g[h];for(c=this.a[f],d=0,e=c.length;d<e;++d){b=c[d];if(xp(a,b.U())){return true}}}return false};_.$=function Jp(){return Object.create(null)};_._=function Kp(){return new Mp(this)};var Qf=yi(75);Kg(102,1,{},Mp);_.N=function Np(){return Lp(this)};_.O=function Op(){return Dc(Lp(this)),this.e=this.a[this.c++],this.e};_.b=-1;_.c=0;_.e=null;var Nf=yi(102);Kg(100,75,{},Pp);_.Z=function Qp(a){var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){var g=d[e];var h=g.U();if(this.ab(a,h)){return true}}}}return false};_.$=function Rp(){return {}};_._=function Sp(){var a=this.bb();var b=this.a;for(var c in b){if(c==parseInt(c,10)){var d=b[c];for(var e=0,f=d.length;e<f;++e){a.Q(d[e])}}}return a.D()};_.ab=function Tp(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.bb=function Up(){return new Vp(this)};var Pf=yi(100);Kg(101,46,jv,Vp);_.S=function Wp(a){var b;return b=To(this,a),Gp(this.a,b.T()),b};var Of=yi(101);Kg(103,1,{},Xp);_.cb=function Yp(){return new Hp};_.db=function Zp(){return new mq};var Tf=yi(103);var $p;Kg(105,103,{},cq);_.db=function dq(){return new Lq};var Rf=yi(105);Kg(104,103,{},eq);_.cb=function fq(){return new Pp};_.db=function gq(){return new Cq};var Sf=yi(104);Kg(64,1,{},mq);_.Z=function nq(a){return hq(this,a)};_.eb=function oq(){return Object.create(null)};_._=function pq(){var a;a=this.hb();return new vq(this,a)};_.fb=function qq(a,b){return ee(a)===ee(b)||a!=null&&fb(a,b)};_.gb=function rq(a){return this.a[a]};_.hb=function sq(){return iq(this)};_.ib=function tq(a){return new yq(this,a)};_.jb=function uq(a,b){return jq(this,a,b)};var Zf=yi(64);Kg(89,1,{},vq);_.N=function wq(){return this.a<this.c.length};_.O=function xq(){return Dc(this.a<this.c.length),new yq(this.b,this.c[this.a++])};_.a=0;var Uf=yi(89);Kg(71,136,{27:1},yq);_.T=function zq(){return this.b};_.U=function Aq(){return this.a.gb(this.b)};_.V=function Bq(a){return this.a.jb(this.b,a)};var Vf=yi(71);Kg(86,64,{},Cq);_.Z=function Dq(a){var b=this.a;for(var c in b){if(c.charCodeAt(0)==58){var d=b[c];if(this.fb(a,d)){return true}}}return false};_.eb=function Eq(){return {}};_._=function Fq(){var a=this.kb();for(var b in this.a){if(b.charCodeAt(0)==58){var c=this.ib(b.substring(1));a.Q(c)}}return a.D()};_.gb=function Gq(a){return this.a[':'+a]};_.kb=function Hq(){return new Jq(this)};_.jb=function Iq(a,b){return jq(this,':'+a,b)};var Xf=yi(86);Kg(88,46,jv,Jq);_.S=function Kq(a){var b;return b=To(this,a),kq(this.a,':'+b.T()),b};var Wf=yi(88);Kg(87,64,{},Lq);_.Z=function Mq(a){var b;b=this.a['__proto__'];if(!(b===undefined)&&(ee(a)===ee(b)||a!=null&&fb(a,b))){return true}return hq(this,a)};_.hb=function Nq(){var a;a=iq(this);!(this.a['__proto__']===undefined)&&(a[a.length]='__proto__');return a};var Yf=yi(87);var $f=Ai();Kg(77,10,Qu,Oq);var _f=yi(77);Kg(74,135,jv,Sq);_.P=function Tq(a,b){Vq(a,this.a.b.length+1);Po(this.a,a,b)};_.Q=function Uq(a){return Rq(this,a)};_.F=function Wq(a){return So(this.a,a,0)!=-1};_.R=function Xq(a){return Vq(a,this.a.b.length),Ro(this.a,a)};_.D=function Yq(){return new In(this.a)};_.S=function Zq(a){return Vq(a,this.a.b.length),this.a.S(a)};_.G=function $q(){return this.a.b.length};_.H=function _q(a){return Wo(this.a,a)};_.tS=function ar(){return Lm(this.a)};var lg=yi(74);Kg(113,74,jv,dr);var ag=yi(113);Kg(58,137,kv,tr,ur);_.W=function vr(){return new Br(this)};_.K=function wr(){return new Fr(this)};_.X=function xr(a){var b,c,d;d=this.c;while(d){b=this.b.Y(a,d.c);if(b==0){return d}c=b<0?0:1;d=d.a[c]}return null};_.G=function yr(){return this.d};_.d=0;var jg=yi(58);Kg(72,1,{},Br);_.N=function Dr(){return Fn(this.a)};_.O=function Er(){return zr(this)};var bg=yi(72);Kg(12,73,hv,Fr);var cg=yi(12);Kg(40,53,{37:1,53:1,27:1,40:1},Gr);_.b=false;var dg=yi(40);Kg(65,1,{},Hr);_.tS=function Ir(){return 'State: mv='+this.c+' value='+this.d+' done='+this.a+' found='+this.b};_.a=false;_.b=false;_.c=false;var eg=yi(65);Kg(26,29,lv,Or);_.lb=function Pr(){return false};_.mb=function Qr(){return false};var Jr,Kr,Lr,Mr;var ig=zi(26,Rr);Kg(94,26,lv,Sr);_.mb=function Tr(){return true};var fg=zi(94,null);Kg(95,26,lv,Ur);_.lb=function Vr(){return true};_.mb=function Wr(){return true};var gg=zi(95,null);Kg(96,26,lv,Xr);_.lb=function Yr(){return true};var hg=zi(96,null);Kg(57,131,{3:1,35:1},$r,_r);_.F=function as(a){return so(this.g,a)};_.D=function bs(){return Fo(new Go(this.g))};_.G=function cs(){return this.g.d};var kg=yi(57);Kg(32,1,{18:1,32:1},js,ks,ls,ms);_.t=function ns(a){if(!_d(a,32))throw new yk('Not comparable: Atoms and '+ui(hb(a)));return ds(this,a)};_.eQ=function os(a){return es(this,a)};_.hC=function ps(){var a;a=this.a+this.i;return jk(a)};_.tS=function qs(){return is(this,null)};_.a=0;_.b=0;_.c=0;_.d=0;_.e=0;_.f=0;_.g=0;var mg=yi(32);Kg(33,58,kv,Fs);_.tS=function Gs(){return Cs(this)};_.a=10000;var og=yi(33);Kg(98,1,{},Hs);_.Y=function Is(a,b){return -$j(a.U(),b.U())};var ng=yi(98);Kg(55,1,{18:1},Os,Ps,Qs);_.t=function Rs(a){this.g+'-'+a.g;return Zj(this.g,a.g)};_.eQ=function Ss(a){var b;if(this===a)return true;if(pg!=hb(a))return false;b=a;if(Jj(this.g,b.g))return true;return false};_.tS=function Ts(){return Ns(this)};_.a=0;_.c=0;_.d=0;_.f=0;var pg=yi(55);Kg(99,1,{18:1},Xs);_.t=function Ys(a){return ej(new fj(this.a.c-this.a.d),oj(a.a.c-a.a.d))};_.tS=function Zs(){return this.a.i+' - '+this.a.d+' to '+this.a.c+' - current: '+this.b};_.b=0;_.c=0;_.d=0;var qg=yi(99);Kg(47,1,{},gt,ht);_.tS=function it(){return ft(this)};_.c=false;_.e=false;var sg=yi(47);Kg(30,57,{3:1,35:1},ut,vt,wt);_.tS=function xt(){return tt(this)};_.a=0;_.b='';_.e=false;_.f=0;var rg=yi(30);Kg(70,1,{},Bt);var tg=yi(70);Kg(39,1,{18:1,39:1},Ct);_.t=function Dt(a){var b;if(_d(a,39)){b=a;return this.c=b.c}else throw new yk('Cannot compare Isotope to '+a)};_.tS=function Et(){return 'Number: '+this.c+' - mass: '+this.b+' - percentage: '+this.d+' - symbol: '+this.a};_.b=0;_.c=0;_.d=0;var ug=yi(39);var Ft,Gt;Kg(4,6,{3:1,6:1,9:1,4:1},It);var vg=yi(4);Kg(91,1,{},Qt);_.a=0;_.b=0;_.e=null;_.f=0;var Jt=1;var yg=yi(91);Kg(48,1,{},Zt,$t,_t);_.b=0;var xg=yi(48);Kg(92,1,{},bu);_.Y=function cu(a,b){return au(this,a,b)};var wg=yi(92);var du;Kg(93,1,{},iu);_.a=0;_.b=0;_.c=null;var zg=yi(93);var ju;Kg(128,1,{},pu);_.nb=function ou(){};var nu=null;var Ag=yi(128);Kg(69,1,{18:1},Du);_.t=function Eu(a){return Cu(this,a)};_.a=0;_.c=0;var Bg=yi(69);Kg(16,1,{},Gu,Hu,Iu);var Cg=yi(16);Kg(15,1,{},Mu);var Dg=yi(15);var ke=Bi('I'),De=yi(119),Ee=yi(121),Fe=yi(null),Ge=yi(124),he=Bi('B'),je=Bi('D'),$f=Ai(),ie=Bi('C');_=Pg('$wnd.CI.Chemcalc');_.analyseMF=ru;_.getInfo=tu;_.mfFromMonoisotopicMass=uu;_.aa=nu;var Nu=Oh();var gwtOnLoad=gwtOnLoad=Nh;Lh(Rh);Ph('permProps',[[['user.agent','safari']]]);$sendStats('moduleStartup', 'moduleEvalEnd');gwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);$sendStats('moduleStartup', 'end');$gwt && $gwt.permProps && __gwtModuleFunction.__moduleStartupDone($gwt.permProps);\n//# sourceURL=chemcalc-0.js\n\n        // End GWT code\n\n        var toReturn = $wnd[\"CI\"][\"Chemcalc\"];\n\n        toReturn.version = '3.0.6';\n\n        return toReturn;\n    }\n\n    var isBrowser, globalEnv;\n\n    if (typeof window !== 'undefined') { // usual browser window\n        isBrowser = true;\n        globalEnv = window;\n    } else if (typeof self !== 'undefined') { // Web Worker\n        isBrowser = true;\n        globalEnv = self;\n    } else { // Node.js\n        isBrowser = false;\n        globalEnv = global;\n    }\n\n    var fakeWindow;\n    if (isBrowser && !true) {\n        fakeWindow = globalEnv;\n    } else {\n        fakeWindow = {};\n        fakeWindow.setTimeout = globalEnv.setTimeout.bind(globalEnv);\n        fakeWindow.clearTimeout = globalEnv.clearTimeout.bind(globalEnv);\n        fakeWindow.setInterval = globalEnv.setInterval.bind(globalEnv);\n        fakeWindow.clearInterval = globalEnv.clearInterval.bind(globalEnv);\n    }\n\n    fakeWindow.document = isBrowser ? (globalEnv.document || {}) : {};\n\n    if (typeof module !== 'undefined' && module.exports) { // NodeJS\n        module.exports = getExports(fakeWindow);\n    } else if (typeof define === 'function' && define.amd) { // AMD\n        define(function () {\n            return getExports(fakeWindow);\n        });\n    } else { // Global\n        var path = [\"CI\",\"Chemcalc\"];\n        var l = path.length - 1;\n        var obj = globalEnv;\n        for (var i = 0; i < l; i++) {\n            obj = obj[path[i]] || (obj[path[i]] = {});\n        }\n        obj[path[l]] = getExports(fakeWindow);\n    }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chemcalc/dist/chemcalc.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nvar aa = require('./amino_acid');\nvar IEP = require('./isoElectricPoint');\n\nconsole.log(IEP);\n\n\nexports.getInfo = function () {\n    return aa;\n}\n\n// sequence should be in the \"right\" format like HAlaGlyProOH\n\nexports.calculateIEP = function (sequence) {\n    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n    aas=aas.slice(2,aas.length-2);\n    var result=IEP.calculateIEP(aas);\n    return result;\n}\n\nexports.calculateIEPChart = function (sequence) {\n    var aas=sequence.replace(/([A-Z])/g,\" $1\").split(/ /);\n    aas=aas.slice(2,aas.length-2);\n    var result=IEP.calculateChart(aas);\n    return result;\n}\n\n\nexports.generatePeptideFragments = function generatePeptideFragments(mf, options) {\n    if (options === undefined) {\n        options = {\n            a: false,\n            b: true,\n            c: false,\n            x: false,\n            y: true,\n            z: false,\n            i: false\n        };\n    }\n\n    var mfs = [];\n    var mfparts=mf.replace(/([a-z\\)])([A-Z][a-z](?=[a-z]))/g,\"$1 $2\").split(/ /);\n\n    var nTerm=\"\";\n    var cTerm=\"\";\n    for (var i=1; i<mfparts.length; i++) {\n        nTerm+=mfparts[i-1];\n        cTerm=mfparts[mfparts.length-i]+cTerm;\n        addNTerm(mfs, nTerm, i, options);\n        addCTerm(mfs, cTerm, i, options);\n        if (options.i) mfs.push(mfparts[i]+\"HC-1O-1(+1)$i:\"+mfparts[i]);\n    }\n\n    if (mfs.length === 0) {\n        mfs = mfs.concat([mf]);\n    }\n\n    return mfs;\n\n};\n\nexports.chargePeptide = function chargePeptide(mf) {\n    return mf.replace(/^H([^+])/, 'H+H$1').replace(/(Arg|His|Lys)(?!\\()/g, '$1(H+)');\n};\n\nfunction aa1To3(code) {\n    for (var i = 0; i < aa.length; i++) {\n        if (aa[i].aa1 === code) {\n            return aa[i].aa3;\n        }\n    }\n    throw new Error('Invalid 1 letter code: ' + code);\n}\n\nfunction converAA1To3(mf) {\n    var newmf = '';\n    for (var i = 0; i < mf.length; i++) {\n        newmf += aa1To3(mf.charAt(i));\n    }\n    return newmf;\n}\n\nfunction capitalizeAA3(mf) {\n    for (var i = 0; i < aa.length; i++) {\n        var regexp = new RegExp(aa[i].aa3, 'gi');\n        mf = mf.replace(regexp, aa[i].aa3);\n    }\n    return mf;\n}\n\n\nexports.convertAASequence = function convertAASequence(mf) {\n    // this function will check if it is a sequence of aa in 1 letter or 3 letters and convert them if it is the case\n    // it could be a multiline mf !\n    // if it is a multiline we could make some \"tricks\" ...\n    var newmf = mf;\n    // SEQRES   1 B  256  MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n    // SEQRES   2 B  256  GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n    // or\n    // MET PRO VAL GLU ILE THR VAL LYS GLU LEU LEU GLU ALA\n    // GLY VAL HIS PHE GLY HIS GLU ARG LYS ARG TRP ASN PRO\n    if (mf.search(/[A-Z]{3} [A-Z]{3} [A-Z]{3}/) > -1) {\n        // this is a PDB !\n        var tmpmf = mf.replace(/[\\r\\n]+/g, ' ');\n        tmpmf = tmpmf.replace(/(SEQRES|[0-9]+| [A-Z] | [0-9A-Z]{4-50})/g, '');\n        // we need to correct the uppercase / lowercase\n        var parts = tmpmf.split(' ');\n        newmf = 'H';\n        for (var i = 0; i < parts.length; i++) {\n            newmf += parts[i].substr(0, 1) + parts[i].substr(1).toLowerCase();\n        }\n        newmf += 'OH';\n    } else if ((mf.search(/[A-Z]{3}/) > -1) && (mf.search(/[a-zA-Z][a-z0-9]/) == -1)) {\n        // UNIPROT\n        //   370        380        390        400        410        420\n        //GFKPNLRKTF VSGLFRESCG AHFYRGVDVK PFYIKKPVDN LFALMLILNR LRGWGVVGGM\n        //\n        //    430        440        450        460        470        480\n        //SDPRLYKVWV RLSSQVPSMF FGGTDLAADY YVVSPPTAVS VYTKTPYGRL LADTRTSGFR\n        // We remove all the number, all the spaces, etc\n        newmf = 'H' + converAA1To3(newmf.replace(/[^A-Z]/g, '')) + 'OH';\n    }\n\n    return newmf;\n\n};\n\nfunction addNTerm(mfs, nTerm, i, options) {\n    if (options.a) mfs.push(nTerm+\"C-1O-1(+1)$a\"+i);\n    if (options.b) mfs.push(nTerm+\"(+1)$b\"+i);\n    if (options.c) mfs.push(nTerm+\"NH3(+1)$c\"+i);\n}\n\nfunction addCTerm(mfs, cTerm, i, options) {\n    if (options.x) mfs.push(\"CO(+1)\"+cTerm+\"$x\"+i);\n    if (options.y) mfs.push(\"H2(+1)\"+cTerm+\"$y\"+i);\n    if (options.z) mfs.push(\"N-1H-1(+1)\"+cTerm+\"$z\"+i);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peptide/src/index.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\n// SOURCE: https://en.wikipedia.org/wiki/Amino_acid\nmodule.exports = [\n    // Standard amino acids\n    {\n        name: \"Alanine\",\n        aa3: \"Ala\",\n        aa1: \"A\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.33,\n        pKaN: 9.71\n    },\n    {\n        name: \"Arginine\",\n        aa3: \"Arg\",\n        aa1: \"R\",\n        sc: {\n            type: \"positive\",\n            pKa: 12.10\n        },\n        pKaC: 2.03,\n        pKaN: 9.00\n    },\n    {\n        name: \"Asparagine\",\n        aa3: \"Asn\",\n        aa1: \"N\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.13,\n        pKaN: 9.05\n    },\n    {\n        name: \"Aspartic acid\",\n        aa3: \"Asp\",\n        aa1: \"D\",\n        sc: {\n            type: \"negative\",\n            pKa: 3.71\n        },\n        pKaC: 1.95,\n        pKaN: 9.66\n    },\n    {\n        name: \"Cysteine\",\n        aa3: \"Cys\",\n        aa1: \"C\",\n        sc: {\n            type: \"special\",\n            pKa: 8.14\n        },\n        pKaC: 1.91,\n        pKaN: 10.28\n    },\n    {\n        name: \"Glutamic acid\",\n        aa3: \"Glu\",\n        aa1: \"E\",\n        sc: {\n            type: \"negative\",\n            pKa: 4.15\n        },\n        pKaC: 2.16,\n        pKaN: 9.58\n    },\n    {\n        name: \"Glutamine\",\n        aa3: \"Gln\",\n        aa1: \"Q\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.18,\n        pKaN: 9.00\n    },\n    {\n        name: \"Glycine\",\n        aa3: \"Gly\",\n        aa1: \"G\",\n        sc: {\n            type: \"special\"\n        },\n        pKaC: 2.34,\n        pKaN: 9.58\n    },\n    {\n        name: \"Histidine\",\n        aa3: \"His\",\n        aa1: \"H\",\n        sc: {\n            type: \"positive\",\n            pKa: 6.04\n        },\n        pKaC: 1.70,\n        pKaN: 9.09\n    },\n    {\n        name: \"Isoleucine\",\n        aa3: \"Ile\",\n        aa1: \"I\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.26,\n        pKaN: 9.60\n    },\n    {\n        name: \"Leucine\",\n        aa3: \"Leu\",\n        aa1: \"L\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.32,\n        pKaN: 9.58\n    },\n    {\n        name: \"Lysine\",\n        aa3: \"Lys\",\n        aa1: \"K\",\n        sc: {\n            type: \"positive\",\n            pKa: 10.67\n        },\n        pKaC: 2.15,\n        pKaN: 9.16\n    },\n    {\n        name: \"Methionine\",\n        aa3: \"Met\",\n        aa1: \"M\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.16,\n        pKaN: 9.08\n    },\n    {\n        name: \"Phenylalanine\",\n        aa3: \"Phe\",\n        aa1: \"F\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.18,\n        pKaN: 9.09\n    },\n    {\n        name: \"Proline\",\n        aa3: \"Pro\",\n        aa1: \"P\",\n        sc: {\n            type: \"special\"\n        },\n        pKaC: 1.95,\n        pKaN: 10.47\n    },\n    {\n        name: \"Serine\",\n        aa3: \"Ser\",\n        aa1: \"S\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.13,\n        pKaN: 9.05\n    },\n    {\n        name: \"Threonine\",\n        aa3: \"Thr\",\n        aa1: \"T\",\n        sc: {\n            type: \"polar\"\n        },\n        pKaC: 2.20,\n        pKaN: 8.96\n    },\n    {\n        name: \"Tryptophan\",\n        aa3: \"Trp\",\n        aa1: \"W\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.38,\n        pKaN: 9.34\n    },\n    {\n        name: \"Tyrosine\",\n        aa3: \"Tyr\",\n        aa1: \"Y\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.24,\n        pKaN: 9.04\n    },\n    {\n        name: \"Valine\",\n        aa3: \"Val\",\n        aa1: \"V\",\n        sc: {\n            type: \"hydrophobic\"\n        },\n        pKaC: 2.27,\n        pKaN: 9.52\n    },\n    // Additional\n    {\n        name: \"Selenocysteine\",\n        aa3: \"Sec\",\n        aa1: \"U\"\n    },\n    {\n        name: \"Pyrrolysine\",\n        aa3: \"Pyl\",\n        aa1: \"O\"\n    },\n    // Ambiguous\n    {\n        name: \"Asparagine or aspartic acid\",\n        aa3: \"Asx\",\n        aa1: \"B\"\n    },\n    {\n        name: \"Glutamine or glutamic acid\",\n        aa3: \"Glx\",\n        aa1: \"Z\"\n    },\n    {\n        name: \"Leucine or isoleucine\",\n        aa3: \"Xle\",\n        aa1: \"J\"\n    },\n    {\n        name: \"Unspecified or unknown\",\n        aa3: \"Xaa\",\n        aa1: \"X\"\n    }\n];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peptide/src/amino_acid.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\n\nvar aa = require('./amino_acid');\n\n// we will convert the data to an object to be much faster\nvar aaObject={};\nfor (var i=0; i<aa.length; i++) {\n    aaObject[aa[i].aa3]=aa[i];\n}\n\n\n\nfunction calculateCharge(aaSequence, pH) {\n    if (! pH) pH=7.0;\n    var combined=combine(aaSequence);\n    if (!combined) return;\n    var charge=calculateForPh(combined, pH);\n    return Math.round(charge*1000)/1000;\n}\n\n// this methods required an array of aas\n\nfunction calculateIEP(aas) {\n    var combined=combine(aas);\n    if (!combined) return;\n    var first=0;\n    var last=14;\n    var current=14;\n    var previous=0;\n    var currentCharge;\n    while (Math.abs(current-previous)>0.0001) {\n        previous=current;\n        current=(last + first) / 2;\n        currentCharge=calculateForPh(combined, current);\n        if (currentCharge>0) {\n            first=current;\n        } else if (currentCharge<0) {\n            last=current;\n        } else {\n            previous=current;\n        }\n    }\n    return Math.round(current*1000)/1000;\n}\n\nfunction calculateChart(aas) {\n    var combined=combine(aas);\n    if (!combined) return;\n    var y=[];\n    var yAbs=[];\n    for (var i=0; i<=14; i=i+0.01) {\n        var charge=calculateForPh(combined, i);\n        y.push(charge);\n        yAbs.push(Math.abs(charge));\n    }\n    combined.y=y;\n    combined.yAbs=yAbs;\n\n    return combined;\n}\n\n\nfunction calculateForPh(combined, pH) {\n    var total=0;\n    total+=1/(1+Math.pow(10,pH-combined.first));\n    total+=-1/(1+Math.pow(10,combined.last-pH));\n    for (var key in combined.acid) {\n        total+=-combined.acid[key]/(1+Math.pow(10,aaObject[key].sc.pKa-pH));\n    }\n    for (var key in combined.basic) {\n        total+=combined.basic[key]/(1+Math.pow(10,pH-aaObject[key].sc.pKa));\n    }\n    return total;\n}\n\n// we will combine the amino acids\nfunction combine(aaSequence) {\n    var combined={};\n    if (aaObject[aaSequence[0]]) {\n        combined.first=aaObject[aaSequence[0]].pKaN;\n    } else {\n        return;\n    }\n    if (aaObject[aaSequence[aaSequence.length-1]]) {\n        combined.last=aaObject[aaSequence[aaSequence.length-1]].pKaC;\n    } else {\n        return;\n    }\n    combined.basic={};\n    combined.acid={};\n    for (var i=0; i<aaSequence.length; i++) {\n        var aa=aaSequence[i];\n        if (! aaObject[aa]) return;\n        if (aaObject[aa].sc && aaObject[aa].sc.type) {\n            if (aaObject[aa].sc.type==\"positive\") {\n                if (!combined.basic[aa]) {\n                    combined.basic[aa] = 0;\n                }\n                combined.basic[aa]++;\n            } else if (aaObject[aa].sc.type==\"negative\") {\n                if (!combined.acid[aa]) {\n                    combined.acid[aa] = 0;\n                }\n                combined.acid[aa]++;\n            }\n        }\n    }\n    return combined;\n}\n\n\n\nmodule.exports={\n    calculateIEP: calculateIEP,\n    calculateCharge: calculateCharge,\n    calculateChart: calculateChart\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peptide/src/isoElectricPoint.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar CC = require('chemcalc');\nvar Similarity = require('peaks-similarity');\n\nfunction MfProcessor(experimental, options) {\n    // we will copy the options to be sure ...\n    this.options=Object.create(options || {});\n    this.options.isotopomers = 'arrayXXYY';\n    // init with options ans experimental spectrum\n    this.options.zone = this.options.zone || {};\n    if (!this.options.zone.low) this.options.zone.low = -0.5;\n    if (!this.options.zone.high) this.options.zone.high = 4.5;\n\n    if (this.options.decimalsMass) this.factorMass = Math.pow(10, this.options.decimalsMass);\n    if (this.options.decimalsPPM) this.factorPPM = Math.pow(10, this.options.decimalsPPM);\n\n    this.widthFunction=undefined;\n    if (this.options.widthFunction) {\n         this.widthFunction = new Function('mass', 'charge',\n            this.options.widthFunction + \";\"+\n            \"return {widthBottom: widthBottom, widthTop: widthTop};\"\n         );\n\n    }\n\n\n    this.similarity = new Similarity({\n        widthTop: this.options.widthTop,\n        widthBottom: this.options.widthBottom,\n        common: this.options.common\n    });\n    this.similarity.setPeaks1(experimental);\n}\n\nMfProcessor.prototype.process = function (mf, result) {\n    // we allow to add information on an existing result\n    result = result || {};\n    var ccResult = CC.analyseMF(mf, this.options);\n\n    var charge = Math.abs(ccResult.parts[0].charge || 1);\n    var target = ccResult.parts[0].msem || ccResult.parts[0].em;\n\n    var from, to;\n    if (this.options.from && this.options.to) {\n        from = this.options.from;\n        to = this.options.to;\n    } else {\n        from = target + this.options.zone.low / charge;\n        to = target + this.options.zone.high / charge;\n    }\n\n    if (this.widthFunction) {\n        var width=this.widthFunction(target, charge)\n        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n    }\n\n\n    this.similarity.setFromTo(from, to);\n    this.similarity.setPeaks2(ccResult.arrayXXYY);\n\n    var similarityResult = this.similarity.getSimilarity();\n\n    if (!result.em) result.em = ccResult.em;\n    if (!result.info) result.info = mf;\n    if (!result.mf) result.mf = ccResult.mf;\n    if (!result.charge) result.charge = ccResult.parts[0].charge || 0;\n    if (!result.msem) result.msem = ccResult.parts[0].msem || 0;\n    result.fromTo = {from: from, to: to};\n    result.extract = similarityResult.extract2;\n    result.extractInfo = similarityResult.extractInfo2;\n    result.diff = similarityResult.diff;\n    result.similarity = Math.floor(similarityResult.similarity * 1e4) / 1e2;\n    result.color = 'hsla(' + Math.round(similarityResult.similarity * 120) + ',100%,60%,0.6)';\n    if (this.options.addExperimentalExtract) {\n        result.extractExperimental = similarityResult.extract1;\n        result.extractInfoExperimental = similarityResult.extractInfo1;\n    }\n\n    if (this.factorPPM) result.ppm = Math.round(result.ppm * this.factorPPM) / this.factorPPM;\n    if (this.factorMass) result.em = Math.round(result.em * this.factorMass) / this.factorMass;\n    if (this.factorMass && result.msem) result.msem = Math.round(result.msem * this.factorMass) / this.factorMass;\n\n    return result;\n};\n\nmodule.exports = MfProcessor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/MfProcessor.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nvar COMMON_NO=0;\nvar COMMON_FIRST=1;\nvar COMMON_SECOND=2;\nvar COMMON_BOTH=3; // should be a binary operation !\n\nvar Stat = require('ml-stat').array;\n\n\nmodule.exports = function Comparator(options) {\n    \n    var widthTop, widthBottom, from, to;\n    var array1Extract, array2Extract, widthSlope, array1ExtractInfo, array2ExtractInfo;\n    var common, commonFactor;\n\n    setOptions(options);\n\n    var array1=[];\n    var array2=[];\n \n    /*\n     2 formats are allowed:\n     [[x1,x2,...],[y1,y2,...]] or [[x1,y1],[x2,y2], ...]\n    */\n\n    function setOptions(newOptions) {\n        options=newOptions || {};\n        if (typeof options.common === 'string') {\n            if (options.common.toLowerCase()==='first') {\n                common=COMMON_FIRST;\n            } else if (options.common.toLowerCase()==='second') {\n                common=COMMON_SECOND;\n            } else if (options.common.toLowerCase()==='both') {\n                common=COMMON_BOTH;\n            } else {\n                common=COMMON_NO;\n            }\n        } else {\n            if (options.common==true) {\n                common=COMMON_BOTH;\n            } else {\n                common=COMMON_NO;\n            }\n        }\n        commonFactor=options.commonFactor || commonFactor || 4;\n\n        if (options.widthBottom==undefined) {\n            options.widthBottom=widthBottom || 2;\n        }\n        if (options.widthTop==undefined) {\n            options.widthTop=widthTop || 1;\n        }\n        setTrapezoid(options.widthBottom, options.widthTop);\n        setFromTo(options.from || from, options.to || to);\n    }\n\n    function setPeaks1(anArray) {\n        array1=checkArray(anArray);\n\n        if (common) {\n            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n            array1Extract=extracts.data1;\n            array1ExtractInfo=extracts.info1;\n            array2Extract=extracts.data2;\n            array2ExtractInfo=extracts.info2;\n        } else {\n            var extract=extractAndNormalize(array1, from, to);\n            array1Extract=extract.data;\n            array1ExtractInfo=extract.info;\n        }\n    }\n    function setPeaks2(anArray) {\n        array2=checkArray(anArray);\n        if (common) {\n            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common);\n            array1Extract=extracts.data1;\n            array1ExtractInfo=extracts.info1;\n            array2Extract=extracts.data2;\n            array2ExtractInfo=extracts.info2;\n        } else {\n            var extract = extractAndNormalize(array2, from, to);\n            array2Extract = extract.data;\n            array2ExtractInfo = extract.info;\n        }\n    }\n\n    function getExtract1() {\n        return array1Extract;\n    }\n\n    function getExtract2() {\n        return array2Extract;\n    }\n\n\n    function getExtractInfo1() {\n        return array1ExtractInfo;\n    }\n\n    function getExtractInfo2() {\n        return array2ExtractInfo;\n    }\n\n    function setTrapezoid(newWidthBottom, newWidthTop) {\n        widthTop=newWidthTop;\n        widthBottom=newWidthBottom;\n        widthSlope=(widthBottom-widthTop)/2;\n        if (widthBottom<widthTop) throw \"widthBottom has to be larger than widthTop\";\n    }\n\n    function setFromTo(newFrom, newTo) {\n        if (newFrom===from && newTo===to) return\n        from=newFrom;\n        to=newTo;\n        if (common) {\n            var extracts=commonExtractAndNormalize(array1, array2, widthBottom, from, to, common, commonFactor);\n            array1Extract=extracts.data1;\n            array1ExtractInfo=extracts.info1;\n            array2Extract=extracts.data2;\n            array2ExtractInfo=extracts.info2;\n        } else {\n            var extract=extractAndNormalize(array1, from, to);\n            array1Extract=extract.data;\n            array1ExtractInfo=extract.info;\n            var extract=extractAndNormalize(array2, from, to);\n            array2Extract=extract.data;\n            array2ExtractInfo=extract.info;\n        }\n    }\n\n\n    function getOverlap(x1, y1, x2, y2) {\n        if (y1===0 || y2===0) return 0;\n\n        // TAKE CARE !!! We multiply the diff by 2 !!!\n        var diff=Math.abs(x1-x2)*2;\n\n        if (diff>widthBottom) return 0;\n        if (diff<=widthTop) {\n            return Math.min(y1,y2);\n        }\n\n        var maxValue=Math.max(y1,y2)*(widthBottom-diff)/(widthBottom-widthTop);\n        return Math.min(y1, y2, maxValue);\n\n        return NaN;\n    }\n\n    // This is the old trapezoid similarity\n    function getOverlapTrapezoid(x1, y1, x2, y2) {\n\n        var factor=2/(widthTop+widthBottom); // correction for surface=1\n        if (y1===0 || y2===0) return 0;\n        if (x1===x2) { // they have the same position\n            return Math.min(y1,y2);\n        }\n\n        var diff=Math.abs(x1-x2);\n        if (diff>=widthBottom) return 0;\n        if (y1===y2) { // do they have the same height ???\n            // we need to find the common length\n            if (diff<=widthTop) {\n                return (((widthTop+widthBottom)/2-diff)*y1)*factor;\n            } else if (diff<=widthBottom) {\n                return (widthBottom-diff)*y1/2*(diff-widthTop)/(widthBottom-widthTop)*factor;\n            }\n            return 0;\n        } else { // the height are different and not the same position ...\n            // we need to consider only one segment to find its intersection\n\n            var small=Math.min(y1,y2);\n            var big=Math.max(y1,y2);\n\n            var targets=[\n                [[0,0],[widthSlope,small]],\n                [[widthSlope,small],[widthSlope+widthTop,small]],\n                [[widthTop+widthSlope,small],[widthBottom,0]]\n            ];\n            if ((x1>x2 && y1>y2) || (x1<x2 && y1<y2)) {\n                var segment=[[diff,0],[diff+widthSlope,big]];\n            } else {\n                var segment=[[diff+widthSlope,big],[diff,0]];\n            }\n\n\n\n            for (var i=0; i<3; i++) {\n                var intersection=getIntersection(targets[i],segment);\n                if (intersection) {\n                    switch (i) {\n                        case 0:\n                            return small-((diff*intersection.y/2))*factor;\n                        case 1: // to simplify ...\n                            //     console.log(\"           \",widthSlope,small,big,intersection.x)\n                            return ((widthSlope*small/(2*big))*small+\n                                (widthTop+widthSlope-intersection.x)*small+\n                                widthSlope*small/2)*factor;\n                        case 2:\n                            return ((widthBottom-diff)*intersection.y/2)*factor;\n                    }\n                }\n            }\n        }\n        return NaN;\n    }\n\n\n\n    // this method calculates the total diff. The sum of positive value will yield to overlap\n    function calculateDiff() {\n        // we need to take 2 pointers\n        // and travel progressively between them ...\n        var newFirst=[\n            [].concat(array1Extract[0]),\n            [].concat(array1Extract[1])\n        ];\n        var newSecond=[\n            [].concat(array2Extract[0]),\n            [].concat(array2Extract[1])\n        ];\n        var array1Length=array1Extract[0] ? array1Extract[0].length : 0;\n        var array2Length=array2Extract[0] ? array2Extract[0].length : 0;\n\n        var pos1=0;\n        var pos2=0;\n        var previous2=0;\n        while (pos1<array1Length) {\n            var diff=newFirst[0][pos1]-array2Extract[0][pos2];\n            if (Math.abs(diff)<widthBottom) { // there is some overlap\n                if (options.trapezoid) {\n                    var overlap=getOverlapTrapezoid(newFirst[0][pos1], newFirst[1][pos1], newSecond[0][pos2], newSecond[1][pos2], widthTop, widthBottom);\n                } else {\n                    var overlap=getOverlap(newFirst[0][pos1], newFirst[1][pos1], newSecond[0][pos2], newSecond[1][pos2], widthTop, widthBottom);\n                }\n                newFirst[1][pos1]-=overlap;\n                newSecond[1][pos2]-=overlap;\n                if (pos2<(array2Length-1)) {\n                    pos2++;\n                } else {\n                    pos1++;\n                    pos2=previous2;\n                }\n            } else {\n                if (diff>0 && pos2<(array2Length-1)) {\n                    pos2++;\n                    previous2=pos2;\n                } else {\n                    pos1++;\n                    pos2=previous2;\n                }\n            }\n        }\n        return newSecond;\n    }\n\n\n    /*\n        This code requires the use of an array like  [[x1,y1],[x2,y2], ...]\n        If it is not the right format, we will just convert it\n        Otherwise we return the correct format\n     */\n    function checkArray(points) {\n        // if it is already a 2D array of points, we just return them\n        if (Array.isArray(points) && Array.isArray(points[0]) && points.length===2) return points;\n        var x=new Array(points.length);\n        var y=new Array(points.length);\n        for (var i=0; i<points.length; i++) {\n            x[i]=points[i][0];\n            y[i]=points[i][1];\n        }\n        return [x,y];\n    }\n\n    function getSimilarity(newPeaks1, newPeaks2) {\n        if (newPeaks1) setPeaks1(newPeaks1);\n        if (newPeaks2) setPeaks2(newPeaks2);\n        var result={};\n        result.diff=calculateDiff();\n        result.extract1=getExtract1();\n        result.extract2=getExtract2();\n        result.extractInfo1=getExtractInfo1();\n        result.extractInfo2=getExtractInfo2();\n        result.similarity=calculateOverlapFromDiff(result.diff);\n        return result;\n    }\n\n    /*\n        This works mainly when you have a array1 that is fixed\n        newPeaks2 have to be normalized ! (sum to 1)\n     */\n    function fastSimilarity(newPeaks2, from, to) {\n        array1Extract=extract(array1, from, to);\n        array2Extract=newPeaks2;\n        if (common&COMMON_SECOND) array1Extract= getCommonArray(array1Extract, array2Extract, widthBottom)\n        normalize(array1Extract);\n        var diff=calculateDiff();\n        return calculateOverlapFromDiff(diff);\n    }\n\n\n    this.setPeaks1 = setPeaks1;\n    this.setPeaks2 = setPeaks2;\n    this.getExtract1 = getExtract1;\n    this.getExtract2 = getExtract2;\n    this.getExtractInfo1 = getExtractInfo1;\n    this.getExtractInfo2 = getExtractInfo2;\n    this.setFromTo = setFromTo;\n    this.setOptions = setOptions;\n    this.setTrapezoid = setTrapezoid;\n    this.getSimilarity = getSimilarity;\n    this.getCommonArray = getCommonArray;\n\n    this.fastSimilarity = fastSimilarity;\n\n};\n\n\n// returns an new array based on array1 where there is a peak of array2 at a distance under width/2\nfunction getCommonArray(array1, array2, width) {\n    var newArray=[[],[]];\n    var pos2=0;\n    width/=2;\n    var j=0;\n    var array1Length=array1[0] ? array1[0].length : 0;\n    var array2Length=array2[0] ? array2[0].length : 0;\n\n    for (var i=0; i<array1Length; i++) {\n        while (pos2<array2Length && (array1[0][i]>(array2[0][pos2]+width))) {\n            pos2++;\n        }\n        if ((pos2<array2Length) && (array1[0][i]>array2[0][pos2]-width)) {\n            newArray[0][j]=array1[0][i];\n            newArray[1][j]=array1[1][i];\n            j++;\n        }\n    }\n    return newArray;\n}\n\n\n// Adapted from: http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect/1968345#1968345\nfunction getIntersection(segment1, segment2) {\n    var p0_x=segment1[0][0];\n    var p0_y=segment1[0][1];\n    var p1_x=segment1[1][0];\n    var p1_y=segment1[1][1];\n    var p2_x=segment2[0][0];\n    var p2_y=segment2[0][1];\n    var p3_x=segment2[1][0];\n    var p3_y=segment2[1][1];\n\n    var s1_x, s1_y, s2_x, s2_y;\n    s1_x = p1_x - p0_x;\n    s1_y = p1_y - p0_y;\n    s2_x = p3_x - p2_x;\n    s2_y = p3_y - p2_y;\n    var s, t;\n    s = (-s1_y * (p0_x - p2_x) + s1_x * (p0_y - p2_y)) / (-s2_x * s1_y + s1_x * s2_y);\n    t = ( s2_x * (p0_y - p2_y) - s2_y * (p0_x - p2_x)) / (-s2_x * s1_y + s1_x * s2_y);\n    if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n        return {\n            x:p0_x + (t * s1_x),\n            y:p0_y + (t * s1_y)\n        }\n    }\n    return null; // No collision\n}\n\nfunction normalize(array) {\n    var min=Stat.min(array[1]);\n    var max=Stat.max(array[1]);\n    var sum=Stat.sum(array[1]);\n    var length=array[1] ? array[1].length : 0;\n    if (sum!=0) {\n        for (var i=0; i<length; i++) {\n            array[1][i]/=sum;\n        }\n    }\n    return {\n        sum: sum,\n        min: min,\n        max: max\n    };\n}\n\n// this method will systemtatically take care of both array\nfunction commonExtractAndNormalize(array1, array2, width, from, to, common) {\n    if (! (Array.isArray(array1)) || ! (Array.isArray(array2))) return {\n        info: undefined,\n        data: undefined\n    };\n    var extract1=extract(array1, from, to);\n    var extract2=extract(array2, from, to);\n    var common1, common2, info1, info2;\n    if (common & COMMON_SECOND) {\n        common1=getCommonArray(extract1, extract2, width);\n        info1=normalize(common1);\n    } else {\n        common1=extract1;\n        info1=normalize(common1);\n    }\n    if (common & COMMON_FIRST) {\n        common2=getCommonArray(extract2, extract1, width);\n        info2=normalize(common2);\n    } else {\n        common2=extract2;\n        info2=normalize(common2);\n    }\n\n    return {\n        info1: info1,\n        info2: info2,\n        data1: common1,\n        data2: common2\n    }\n}\n\nfunction extract(array, from, to) {\n    var newArray=[[],[]];\n    var j=0;\n    var length=array[0] ? array[0].length : 0;\n    for (var i=0; i<length; i++) {\n        if ( (! from || array[0][i]>=from)  && (! to || array[0][i]<=to)) {\n            newArray[0][j] = array[0][i];\n            newArray[1][j] = array[1][i];\n            j++\n        }\n    }\n    return newArray;\n}\n\nfunction extractAndNormalize(array, from, to) {\n    if (! (Array.isArray(array))) return {\n        info: undefined,\n        data: undefined\n    };\n    var newArray=extract(array, from, to);\n    var info=normalize(newArray);\n    return {\n        info: info,\n        data: newArray\n    };\n}\n\nfunction calculateOverlapFromDiff(diffs) {\n    var sumPos=0;\n    for (var i=0; i<diffs[1].length; i++) {\n        sumPos+=Math.abs(diffs[1][i]);\n    }\n    return 1-sumPos;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/peaks-similarity/src/index.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ml-stat/index.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = Infinity;\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice();\n        values.sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw \"Vectors do not have the same dimensions\";\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    }\n    else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    }\n    else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof(eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = values.slice();\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof(standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ml-stat/array.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\nvar arrayStat = require('./array');\n\n// https://github.com/accord-net/framework/blob/development/Sources/Accord.Statistics/Tools.cs\n\nfunction entropy(matrix, eps) {\n    if (typeof(eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n}\n\nfunction mean(matrix, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n}\n\nfunction standardDeviation(matrix, means, unbiased) {\n    var vari = variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n}\n\nfunction variance(matrix, means, unbiased) {\n    if (typeof(unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n}\n\nfunction median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort();\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n}\n\nfunction mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n}\n\nfunction skewness(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n}\n\nfunction kurtosis(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n}\n\nfunction standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = standardDeviation(matrix), l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n}\n\nfunction covariance(matrix, dimension) {\n    return scatter(matrix, undefined, dimension);\n}\n\nfunction scatter(matrix, divisor, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof(divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = mean(matrix, dimension),\n        rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nfunction correlation(matrix) {\n    var means = mean(matrix),\n        standardDeviations = standardDeviation(matrix, true, means),\n        scores = zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n}\n\nfunction zScores(matrix, means, standardDeviations) {\n    means = means || mean(matrix);\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix, true, means);\n    return standardize(center(matrix, means, false), standardDeviations, true);\n}\n\nfunction center(matrix, means, inPlace) {\n    means = means || mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n}\n\nfunction standardize(matrix, standardDeviations, inPlace) {\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction weightedVariance(matrix, weights) {\n    var means = mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n}\n\nfunction weightedMean(matrix, weights, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n}\n\nfunction weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return weightedScatter(matrix, weights, means, factor, dimension);\n}\n\nfunction weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    if (typeof(factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nmodule.exports = {\n    entropy: entropy,\n    mean: mean,\n    standardDeviation: standardDeviation,\n    variance: variance,\n    median: median,\n    mode: mode,\n    skewness: skewness,\n    kurtosis: kurtosis,\n    standardError: standardError,\n    covariance: covariance,\n    scatter: scatter,\n    correlation: correlation,\n    zScores: zScores,\n    center: center,\n    standardize: standardize,\n    weightedVariance: weightedVariance,\n    weightedMean: weightedMean,\n    weightedCovariance: weightedCovariance,\n    weightedScatter: weightedScatter\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ml-stat/matrix.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\n\nvar Similarity = require('peaks-similarity');\n\nfunction SimilarityProcessor(experimental, options) {\n    // we will copy the options to be sure ...\n    this.options=Object.create(options || {});\n\n    this.widthFunction=undefined;\n    if (this.options.widthFunction) {\n         this.widthFunction = new Function('mass', 'charge',\n            this.options.widthFunction + \";\"+\n            \"return {widthBottom: widthBottom, widthTop: widthTop};\"\n         );\n    }\n\n    this.similarity = new Similarity({\n        widthTop: this.options.widthTop,\n        widthBottom: this.options.widthBottom,\n        common: this.options.common\n    });\n    this.similarity.setPeaks1(experimental);\n}\n\nSimilarityProcessor.prototype.process = function (spectrum, from, to) {\n\n    if (this.widthFunction) {\n        var width=this.widthFunction(spectrum[0][0])\n        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n    }\n\n    return this.similarity.fastSimilarity(spectrum, from, to);\n};\n\nmodule.exports = SimilarityProcessor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/SimilarityProcessor.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\n\nvar CC = require('chemcalc');\nvar SimilarityProcessor = require('./SimilarityProcessor');\nvar Stat = require('ml-stat').array;\n\n/*\noptions:\n  * before (default : 0.5)\n  * width (default : theoretical + 1)\n  * common\n  * widthBottom\n  * widthTop\n  * widthFunction\n */\n\nfunction MFSimilarityProcessor(experimental, mf, options) {\n    SimilarityProcessor.call(this, experimental, options);\n\n    // we calculate the theoretical spectrum, normalize (sum to 1) it\n    this.theoretical=CC.analyseMF(mf, {isotopomers:'arrayXXYY'}).arrayXXYY;\n    var xTheoretical=this.theoretical[0];\n    var yTheoretical=this.theoretical[1];\n    var sumY=Stat.sum(yTheoretical);\n    for (var i=0; i<yTheoretical.length; i++) {\n        yTheoretical[i]/=sumY;\n    }\n\n    if (!this.options.before) this.options.before=0.5;\n    if (!this.options.width) this.options.width=xTheoretical[xTheoretical.length]-xTheoretical[0]+0.5;\n}\n\nMFSimilarityProcessor.prototype.process = function (firstX) {\n    if (this.widthFunction) {\n        var width=this.widthFunction(spectrum[0][0])\n        this.similarity.setTrapezoid(width.widthBottom, width.widthTop);\n    }\n\n    var xTheoretical=this.theoretical[0];\n    var yTheoretical=this.theoretical[1];\n    var shift=-xTheoretical[0]+firstX;\n    for (var i=0; i<yTheoretical.length; i++) {\n        xTheoretical[i]+=shift;\n    }\n\n    var from=firstX-this.options.before;\n    var to=firstX+this.options.width;\n\n    return this.similarity.fastSimilarity(this.theoretical, from, to);\n};\n\nmodule.exports = MFSimilarityProcessor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/MFSimilarityProcessor.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nvar Stat=require('ml-stat');\n\nmodule.exports=massPeakPicking;\n\n\nfunction massPeakPicking(x, y) {\n\n// we calculate the noise\n    var noiseLevel=Stat.array.median(y.filter(function(a) {return (a>0)}))*3;\n\n    return gsd(x, y, {\n        noiseLevel: noiseLevel\n    });\n}\n\nfunction gsd(x, y, options){\n    options=options || {};\n    if (options.minMaxRatio===undefined) options.minMaxRatio=0.00025;\n    if (options.noiseLevel===undefined) options.noiseLevel=0;;\n\n    if (options.noiseLevel>0) {\n        y=[].concat(y);\n        for (var i=0; i<y.length; i++){\n            if(Math.abs(y[i])<options.noiseLevel) {\n                y[i]=0;\n            }\n        }\n    }\n\n    // fill convolution frequency axis\n    var X = [];//x[2:(x.length-2)];\n\n    // fill Savitzky-Golay polynomes\n    var size= x.length-4;\n    var Y = new Array(size);\n    var dY = new Array(size);\n    var ddY = new Array(size);\n\n    //var dx = x[1]-x[0];\n\n    for (var j = 2; j < size+2; j++) {\n        var dx = x[j]-x[j-1];\n        Y[j-2]=(1/35.0)*(-3*y[j-2] + 12*y[j-1] + 17*y[j] + 12*y[j+1] - 3*y[j+2]);\n        X[j-2]=x[j];\n        dY[j-2]=(1/(12*dx))*(y[j-2] - 8*y[j-1] + 8*y[j+1] - y[j+2]);\n        ddY[j-2]=(1/(7*dx*dx))*(2*y[j-2] - y[j-1] - 2*y[j] - y[j+1] + 2*y[j+2]);\n    }\n\n    var maxDdy=0;\n    //console.log(Y.length);\n    for (var i = 0; i < Y.length ; i++){\n        if(Math.abs(ddY[i])>maxDdy){\n            maxDdy = Math.abs(ddY[i]);\n        }\n    }\n    //console.log(maxY+\"x\"+maxDy+\"x\"+maxDdy);\n    var minddY = [];\n    var intervals = [];\n    var stackInt = [];\n    for (var i = 1; i < Y.length -1 ; i++){\n        if ((dY[i] < dY[i-1]) && (dY[i] <= dY[i+1])||\n            (dY[i] <= dY[i-1]) && (dY[i] < dY[i+1])) {\n            //console.log(X[i])\n            stackInt.push(X[i]);\n        }\n\n        if ((dY[i] >= dY[i-1]) && (dY[i] > dY[i+1])||\n            (dY[i] > dY[i-1]) && (dY[i] >= dY[i+1])) {\n            try{\n                intervals.push( [X[i] , stackInt.pop()] );\n            }\n            catch(e){\n                console.log(\"Error I don't know why \"+e);\n            }\n        }\n\n        if ((ddY[i] < ddY[i-1]) && (ddY[i] < ddY[i+1])) {\n            minddY.push( [X[i], Y[i], i] );  // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n        }\n    }\n\n\n    var signals = [];\n\n    Y.sort(function(a, b){return b-a});\n\n    for (var j = 0; j < minddY.length; j++){\n        var f = minddY[j];\n        var frequency = f[0];\n        var possible = [];\n        for (var k=0; k<intervals.length; k++){\n            var i = intervals[k];\n            if(Math.abs(frequency-(i[0]+i[1])/2)<Math.abs(i[0]-i[1])/2)\n                possible.push(i);\n        }\n        //console.log(possible);\n        //console.log(\"possible \"+possible.length);\n        if (possible.length > 0)\n            if (possible.length == 1)\n            {\n                var inter = possible[0];\n                var linewidth = Math.abs(inter[1] - inter[0]);\n                var height = f[1];\n                //console.log(height, options.minMaxRatio, Y[0]);\n                if (Math.abs(height) > options.minMaxRatio*Y[0]) {\n                    signals.push({\n                        x: frequency,\n                        y: height,\n                        width: linewidth\n                    })\n                }\n            }\n            else\n            {\n                //TODO: nested peaks\n                //console.log(\"Nested \"+possible);\n            }\n    }\n\n    signals.sort(function (a, b) {\n        return a.x - b.x;\n    });\n\n    return signals;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/massPeakPicking.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}